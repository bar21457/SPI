

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 12:51:00 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     008F                     	;# 
   102     0090                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     0105                     	;# 
   121     0107                     	;# 
   122     0108                     	;# 
   123     0109                     	;# 
   124     010C                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0185                     	;# 
   130     0187                     	;# 
   131     0188                     	;# 
   132     0189                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0097                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009A                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     0105                     	;# 
   199     0107                     	;# 
   200     0108                     	;# 
   201     0109                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0185                     	;# 
   208     0187                     	;# 
   209     0188                     	;# 
   210     0189                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     0000                     	;# 
   214     0001                     	;# 
   215     0002                     	;# 
   216     0003                     	;# 
   217     0004                     	;# 
   218     0005                     	;# 
   219     0006                     	;# 
   220     0007                     	;# 
   221     0008                     	;# 
   222     0009                     	;# 
   223     000A                     	;# 
   224     000B                     	;# 
   225     000C                     	;# 
   226     000D                     	;# 
   227     000E                     	;# 
   228     000E                     	;# 
   229     000F                     	;# 
   230     0010                     	;# 
   231     0011                     	;# 
   232     0012                     	;# 
   233     0013                     	;# 
   234     0014                     	;# 
   235     0015                     	;# 
   236     0015                     	;# 
   237     0016                     	;# 
   238     0017                     	;# 
   239     0018                     	;# 
   240     0019                     	;# 
   241     001A                     	;# 
   242     001B                     	;# 
   243     001B                     	;# 
   244     001C                     	;# 
   245     001D                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     0081                     	;# 
   249     0085                     	;# 
   250     0086                     	;# 
   251     0087                     	;# 
   252     0088                     	;# 
   253     0089                     	;# 
   254     008C                     	;# 
   255     008D                     	;# 
   256     008E                     	;# 
   257     008F                     	;# 
   258     0090                     	;# 
   259     0091                     	;# 
   260     0092                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0094                     	;# 
   265     0095                     	;# 
   266     0096                     	;# 
   267     0097                     	;# 
   268     0098                     	;# 
   269     0099                     	;# 
   270     009A                     	;# 
   271     009B                     	;# 
   272     009C                     	;# 
   273     009D                     	;# 
   274     009E                     	;# 
   275     009F                     	;# 
   276     0105                     	;# 
   277     0107                     	;# 
   278     0108                     	;# 
   279     0109                     	;# 
   280     010C                     	;# 
   281     010C                     	;# 
   282     010D                     	;# 
   283     010E                     	;# 
   284     010F                     	;# 
   285     0185                     	;# 
   286     0187                     	;# 
   287     0188                     	;# 
   288     0189                     	;# 
   289     018C                     	;# 
   290     018D                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     000E                     	;# 
   307     000F                     	;# 
   308     0010                     	;# 
   309     0011                     	;# 
   310     0012                     	;# 
   311     0013                     	;# 
   312     0014                     	;# 
   313     0015                     	;# 
   314     0015                     	;# 
   315     0016                     	;# 
   316     0017                     	;# 
   317     0018                     	;# 
   318     0019                     	;# 
   319     001A                     	;# 
   320     001B                     	;# 
   321     001B                     	;# 
   322     001C                     	;# 
   323     001D                     	;# 
   324     001E                     	;# 
   325     001F                     	;# 
   326     0081                     	;# 
   327     0085                     	;# 
   328     0086                     	;# 
   329     0087                     	;# 
   330     0088                     	;# 
   331     0089                     	;# 
   332     008C                     	;# 
   333     008D                     	;# 
   334     008E                     	;# 
   335     008F                     	;# 
   336     0090                     	;# 
   337     0091                     	;# 
   338     0092                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0093                     	;# 
   342     0094                     	;# 
   343     0095                     	;# 
   344     0096                     	;# 
   345     0097                     	;# 
   346     0098                     	;# 
   347     0099                     	;# 
   348     009A                     	;# 
   349     009B                     	;# 
   350     009C                     	;# 
   351     009D                     	;# 
   352     009E                     	;# 
   353     009F                     	;# 
   354     0105                     	;# 
   355     0107                     	;# 
   356     0108                     	;# 
   357     0109                     	;# 
   358     010C                     	;# 
   359     010C                     	;# 
   360     010D                     	;# 
   361     010E                     	;# 
   362     010F                     	;# 
   363     0185                     	;# 
   364     0187                     	;# 
   365     0188                     	;# 
   366     0189                     	;# 
   367     018C                     	;# 
   368     018D                     	;# 
   369     0000                     	;# 
   370     0001                     	;# 
   371     0002                     	;# 
   372     0003                     	;# 
   373     0004                     	;# 
   374     0005                     	;# 
   375     0006                     	;# 
   376     0007                     	;# 
   377     0008                     	;# 
   378     0009                     	;# 
   379     000A                     	;# 
   380     000B                     	;# 
   381     000C                     	;# 
   382     000D                     	;# 
   383     000E                     	;# 
   384     000E                     	;# 
   385     000F                     	;# 
   386     0010                     	;# 
   387     0011                     	;# 
   388     0012                     	;# 
   389     0013                     	;# 
   390     0014                     	;# 
   391     0015                     	;# 
   392     0015                     	;# 
   393     0016                     	;# 
   394     0017                     	;# 
   395     0018                     	;# 
   396     0019                     	;# 
   397     001A                     	;# 
   398     001B                     	;# 
   399     001B                     	;# 
   400     001C                     	;# 
   401     001D                     	;# 
   402     001E                     	;# 
   403     001F                     	;# 
   404     0081                     	;# 
   405     0085                     	;# 
   406     0086                     	;# 
   407     0087                     	;# 
   408     0088                     	;# 
   409     0089                     	;# 
   410     008C                     	;# 
   411     008D                     	;# 
   412     008E                     	;# 
   413     008F                     	;# 
   414     0090                     	;# 
   415     0091                     	;# 
   416     0092                     	;# 
   417     0093                     	;# 
   418     0093                     	;# 
   419     0093                     	;# 
   420     0094                     	;# 
   421     0095                     	;# 
   422     0096                     	;# 
   423     0097                     	;# 
   424     0098                     	;# 
   425     0099                     	;# 
   426     009A                     	;# 
   427     009B                     	;# 
   428     009C                     	;# 
   429     009D                     	;# 
   430     009E                     	;# 
   431     009F                     	;# 
   432     0105                     	;# 
   433     0107                     	;# 
   434     0108                     	;# 
   435     0109                     	;# 
   436     010C                     	;# 
   437     010C                     	;# 
   438     010D                     	;# 
   439     010E                     	;# 
   440     010F                     	;# 
   441     0185                     	;# 
   442     0187                     	;# 
   443     0188                     	;# 
   444     0189                     	;# 
   445     018C                     	;# 
   446     018D                     	;# 
   447     000C                     _PIR1bits	set	12
   448     000B                     _INTCONbits	set	11
   449     0008                     _PORTD	set	8
   450     0006                     _PORTB	set	6
   451     001E                     _ADRESH	set	30
   452     001F                     _ADCON0bits	set	31
   453     0013                     _SSPBUF	set	19
   454     0014                     _SSPCON	set	20
   455     0063                     _SSPIF	set	99
   456     0066                     _ADIF	set	102
   457     008C                     _PIE1bits	set	140
   458     0088                     _TRISD	set	136
   459     0086                     _TRISB	set	134
   460     009F                     _ADCON1bits	set	159
   461     0085                     _TRISAbits	set	133
   462     0094                     _SSPSTATbits	set	148
   463     0094                     _SSPSTAT	set	148
   464     008F                     _OSCCONbits	set	143
   465     043B                     _TRISC3	set	1083
   466     043D                     _TRISC5	set	1085
   467     0189                     _ANSELH	set	393
   468     0188                     _ANSEL	set	392
   469     0188                     _ANSELbits	set	392
   470                           
   471                           	psect	cinit
   472     000F                     start_initialization:	
   473                           ; #config settings
   474                           
   475     000F                     __initialization:
   476                           
   477                           ; Clear objects allocated to COMMON
   478     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   479     0010                     end_of_initialization:	
   480                           ;End of C runtime variable initialization code
   481                           
   482     0010                     __end_of__initialization:
   483     0010  0183               	clrf	3
   484     0011  120A  118A  28DD   	ljmp	_main	;jump to C main() function
   485                           
   486                           	psect	bssCOMMON
   487     0077                     __pbssCOMMON:
   488     0077                     _VAL_READ:
   489     0077                     	ds	1
   490                           
   491                           	psect	cstackCOMMON
   492     0070                     __pcstackCOMMON:
   493     0070                     ?_setup:
   494     0070                     ?_setupINTOSC:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ?_spiReceiveWait:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ??_spiReceiveWait:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ?_spiWrite:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     ??_spiWrite:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ?_spiRead:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ??_spiRead:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0070                     ?_setupADC:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     ?_readADC:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ?_isr:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_main:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     spiWrite@dat:	
   528                           ; 1 bytes @ 0x0
   529                           
   530                           
   531                           ; 1 bytes @ 0x0
   532     0070                     	ds	1
   533     0071                     ??_isr:
   534                           
   535                           ; 1 bytes @ 0x1
   536     0071                     	ds	2
   537     0073                     ??_setupINTOSC:
   538     0073                     ?_spiInit:	
   539                           ; 1 bytes @ 0x3
   540                           
   541     0073                     ??_setupADC:	
   542                           ; 1 bytes @ 0x3
   543                           
   544     0073                     ??_readADC:	
   545                           ; 1 bytes @ 0x3
   546                           
   547     0073                     spiInit@sDataSample:	
   548                           ; 1 bytes @ 0x3
   549                           
   550                           
   551                           ; 1 bytes @ 0x3
   552     0073                     	ds	1
   553     0074                     setupINTOSC@F:
   554     0074                     spiInit@sClockIdle:	
   555                           ; 1 bytes @ 0x4
   556                           
   557     0074                     setupADC@canal:	
   558                           ; 1 bytes @ 0x4
   559                           
   560                           
   561                           ; 1 bytes @ 0x4
   562     0074                     	ds	1
   563     0075                     spiInit@sTransmitEdge:
   564     0075                     readADC@canal:	
   565                           ; 1 bytes @ 0x5
   566                           
   567                           
   568                           ; 1 bytes @ 0x5
   569     0075                     	ds	1
   570     0076                     ??_spiInit:
   571     0076                     spiInit@sType:	
   572                           ; 1 bytes @ 0x6
   573                           
   574                           
   575                           ; 1 bytes @ 0x6
   576     0076                     	ds	1
   577     0077                     ??_setup:
   578     0077                     ??_main:	
   579                           ; 1 bytes @ 0x7
   580                           
   581                           
   582                           	psect	maintext
   583     00DD                     __pmaintext:	
   584                           ; 1 bytes @ 0x7
   585 ;;
   586 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   587 ;;
   588 ;; *************** function _main *****************
   589 ;; Defined at:
   590 ;;		line 63 in file "main_S1.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : B00/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0
   607 ;;      Totals:         0       0       0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels required when called: 5
   610 ;; This function calls:
   611 ;;		_readADC
   612 ;;		_setup
   613 ;; This function is called by:
   614 ;;		Startup code after reset
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618     00DD                     _main:	
   619                           ;psect for function _main
   620                           
   621     00DD                     l830:	
   622                           ;incstack = 0
   623                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   624                           
   625                           
   626                           ;main_S1.c: 65:     setup();
   627     00DD  120A  118A  2080  120A  118A  	fcall	_setup
   628     00E2                     l118:	
   629                           ;main_S1.c: 67:     while(1)
   630                           
   631                           
   632                           ;main_S1.c: 68:     {;main_S1.c: 69:        readADC(0);
   633     00E2  3000               	movlw	0
   634     00E3  120A  118A  2014  120A  118A  	fcall	_readADC
   635     00E8  28E2               	goto	l118
   636     00E9  120A  118A  280C   	ljmp	start
   637     00EC                     __end_of_main:
   638                           
   639                           	psect	text1
   640     0080                     __ptext1:	
   641 ;; *************** function _setup *****************
   642 ;; Defined at:
   643 ;;		line 77 in file "main_S1.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0, pclath, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used: 1
   663 ;; Hardware stack levels required when called: 4
   664 ;; This function calls:
   665 ;;		_setupADC
   666 ;;		_setupINTOSC
   667 ;;		_spiInit
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673     0080                     _setup:	
   674                           ;psect for function _setup
   675                           
   676     0080                     l812:	
   677                           ;incstack = 0
   678                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   679                           
   680                           
   681                           ;main_S1.c: 79:     ANSEL = 0;
   682     0080  1683               	bsf	3,5	;RP0=1, select bank3
   683     0081  1703               	bsf	3,6	;RP1=1, select bank3
   684     0082  0188               	clrf	8	;volatile
   685                           
   686                           ;main_S1.c: 80:     ANSELH = 0;
   687     0083  0189               	clrf	9	;volatile
   688                           
   689                           ;main_S1.c: 82:     TRISB = 0;
   690     0084  1683               	bsf	3,5	;RP0=1, select bank1
   691     0085  1303               	bcf	3,6	;RP1=0, select bank1
   692     0086  0186               	clrf	6	;volatile
   693                           
   694                           ;main_S1.c: 83:     TRISD = 0;
   695     0087  0188               	clrf	8	;volatile
   696                           
   697                           ;main_S1.c: 85:     PORTB = 0;
   698     0088  1283               	bcf	3,5	;RP0=0, select bank0
   699     0089  1303               	bcf	3,6	;RP1=0, select bank0
   700     008A  0186               	clrf	6	;volatile
   701                           
   702                           ;main_S1.c: 86:     PORTD = 0;
   703     008B  0188               	clrf	8	;volatile
   704     008C                     l814:
   705                           
   706                           ;main_S1.c: 89:     INTCONbits.GIE = 1;
   707     008C  178B               	bsf	11,7	;volatile
   708     008D                     l816:
   709                           
   710                           ;main_S1.c: 90:     INTCONbits.PEIE = 1;
   711     008D  170B               	bsf	11,6	;volatile
   712     008E                     l818:
   713                           
   714                           ;main_S1.c: 91:     PIR1bits.SSPIF = 0;
   715     008E  118C               	bcf	12,3	;volatile
   716     008F                     l820:
   717                           
   718                           ;main_S1.c: 92:     PIE1bits.SSPIE = 1;
   719     008F  1683               	bsf	3,5	;RP0=1, select bank1
   720     0090  1303               	bcf	3,6	;RP1=0, select bank1
   721     0091  158C               	bsf	12,3	;volatile
   722     0092                     l822:
   723                           
   724                           ;main_S1.c: 94:     TRISAbits.TRISA5 = 1;
   725     0092  1685               	bsf	5,5	;volatile
   726     0093                     l824:
   727                           
   728                           ;main_S1.c: 96:     setupINTOSC(FOSC_4MHZ);
   729     0093  3006               	movlw	6
   730     0094  120A  118A  20EC  120A  118A  	fcall	_setupINTOSC
   731     0099                     l826:
   732                           
   733                           ;main_S1.c: 97:     setupADC(0);
   734     0099  3000               	movlw	0
   735     009A  120A  118A  2054  120A  118A  	fcall	_setupADC
   736     009F                     l828:
   737                           
   738                           ;main_S1.c: 99:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   739     009F  01F3               	clrf	spiInit@sDataSample
   740     00A0  01F4               	clrf	spiInit@sClockIdle
   741     00A1  01F5               	clrf	spiInit@sTransmitEdge
   742     00A2  3024               	movlw	36
   743     00A3  120A  118A  20C7  120A  118A  	fcall	_spiInit
   744     00A8                     l124:
   745     00A8  0008               	return
   746     00A9                     __end_of_setup:
   747                           
   748                           	psect	text2
   749     00C7                     __ptext2:	
   750 ;; *************** function _spiInit *****************
   751 ;; Defined at:
   752 ;;		line 12 in file "configSPI.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;  sType           1    wreg     enum E1292
   755 ;;  sDataSample     1    3[COMMON] enum E1300
   756 ;;  sClockIdle      1    4[COMMON] enum E1304
   757 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  sType           1    6[COMMON] enum E1292
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         3       0       0       0       0
   770 ;;      Locals:         1       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0
   772 ;;      Totals:         4       0       0       0       0
   773 ;;Total ram usage:        4 bytes
   774 ;; Hardware stack levels used: 1
   775 ;; Hardware stack levels required when called: 3
   776 ;; This function calls:
   777 ;;		Nothing
   778 ;; This function is called by:
   779 ;;		_setup
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783     00C7                     _spiInit:	
   784                           ;psect for function _spiInit
   785                           
   786                           
   787                           ;incstack = 0
   788                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   789                           ;spiInit@sType stored from wreg
   790     00C7  00F6               	movwf	spiInit@sType
   791     00C8                     l802:
   792                           
   793                           ;configSPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);configSPI.c: 13: {;configSPI.c: 14:     
      +                          TRISC5 = 0;
   794     00C8  1683               	bsf	3,5	;RP0=1, select bank1
   795     00C9  1303               	bcf	3,6	;RP1=0, select bank1
   796     00CA  1287               	bcf	7,5	;volatile
   797                           
   798                           ;configSPI.c: 15:     if(sType & 0b00000100)
   799     00CB  1D76               	btfss	spiInit@sType,2
   800     00CC  28CE               	goto	u101
   801     00CD  28CF               	goto	u100
   802     00CE                     u101:
   803     00CE  28D3               	goto	l808
   804     00CF                     u100:
   805     00CF                     l804:
   806                           
   807                           ;configSPI.c: 16:     {;configSPI.c: 17:         SSPSTAT = sTransmitEdge;
   808     00CF  0875               	movf	spiInit@sTransmitEdge,w
   809     00D0  0094               	movwf	20	;volatile
   810     00D1                     l806:
   811                           
   812                           ;configSPI.c: 18:         TRISC3 = 1;
   813     00D1  1587               	bsf	7,3	;volatile
   814                           
   815                           ;configSPI.c: 19:     }
   816     00D2  28D7               	goto	l21
   817     00D3                     l808:
   818                           
   819                           ;configSPI.c: 21:     {;configSPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   820     00D3  0873               	movf	spiInit@sDataSample,w
   821     00D4  0475               	iorwf	spiInit@sTransmitEdge,w
   822     00D5  0094               	movwf	20	;volatile
   823     00D6                     l810:
   824                           
   825                           ;configSPI.c: 23:         TRISC3 = 0;
   826     00D6  1187               	bcf	7,3	;volatile
   827     00D7                     l21:	
   828                           ;configSPI.c: 24:     }
   829                           
   830                           
   831                           ;configSPI.c: 26:     SSPCON = sType | sClockIdle;
   832     00D7  0876               	movf	spiInit@sType,w
   833     00D8  0474               	iorwf	spiInit@sClockIdle,w
   834     00D9  1283               	bcf	3,5	;RP0=0, select bank0
   835     00DA  1303               	bcf	3,6	;RP1=0, select bank0
   836     00DB  0094               	movwf	20	;volatile
   837     00DC                     l22:
   838     00DC  0008               	return
   839     00DD                     __end_of_spiInit:
   840                           
   841                           	psect	text3
   842     00EC                     __ptext3:	
   843 ;; *************** function _setupINTOSC *****************
   844 ;; Defined at:
   845 ;;		line 11 in file "configINTOSC.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  F               1    wreg     enum E1292
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  F               1    4[COMMON] enum E1292
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         1       0       0       0       0
   861 ;;      Temps:          1       0       0       0       0
   862 ;;      Totals:         2       0       0       0       0
   863 ;;Total ram usage:        2 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 3
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_setup
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873     00EC                     _setupINTOSC:	
   874                           ;psect for function _setupINTOSC
   875                           
   876                           
   877                           ;incstack = 0
   878                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   879                           ;setupINTOSC@F stored from wreg
   880     00EC  00F4               	movwf	setupINTOSC@F
   881     00ED                     l716:
   882                           
   883                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
   884     00ED  0874               	movf	setupINTOSC@F,w
   885     00EE  00F3               	movwf	??_setupINTOSC
   886     00EF  0EF3               	swapf	??_setupINTOSC,f
   887     00F0  1683               	bsf	3,5	;RP0=1, select bank1
   888     00F1  1303               	bcf	3,6	;RP1=0, select bank1
   889     00F2  080F               	movf	15,w	;volatile
   890     00F3  0673               	xorwf	??_setupINTOSC,w
   891     00F4  398F               	andlw	-113
   892     00F5  0673               	xorwf	??_setupINTOSC,w
   893     00F6  008F               	movwf	15	;volatile
   894     00F7                     l718:
   895                           
   896                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
   897     00F7  140F               	bsf	15,0	;volatile
   898     00F8                     l5:
   899     00F8  0008               	return
   900     00F9                     __end_of_setupINTOSC:
   901                           
   902                           	psect	text4
   903     0054                     __ptext4:	
   904 ;; *************** function _setupADC *****************
   905 ;; Defined at:
   906 ;;		line 13 in file "configADC.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  canal           1    wreg     unsigned char 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  canal           1    4[COMMON] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         1       0       0       0       0
   922 ;;      Temps:          1       0       0       0       0
   923 ;;      Totals:         2       0       0       0       0
   924 ;;Total ram usage:        2 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 3
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_setup
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934     0054                     _setupADC:	
   935                           ;psect for function _setupADC
   936                           
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in _setupADC: [wreg+status,2+status,0]
   940                           ;setupADC@canal stored from wreg
   941     0054  00F4               	movwf	setupADC@canal
   942     0055                     l732:
   943                           
   944                           ;configADC.c: 17:     if(canal == 0)
   945     0055  0874               	movf	setupADC@canal,w
   946     0056  1D03               	btfss	3,2
   947     0057  2859               	goto	u31
   948     0058  285A               	goto	u30
   949     0059                     u31:
   950     0059  2860               	goto	l736
   951     005A                     u30:
   952     005A                     l734:
   953                           
   954                           ;configADC.c: 18:     {;configADC.c: 19:     TRISAbits.TRISA0 = 1;
   955     005A  1683               	bsf	3,5	;RP0=1, select bank1
   956     005B  1303               	bcf	3,6	;RP1=0, select bank1
   957     005C  1405               	bsf	5,0	;volatile
   958                           
   959                           ;configADC.c: 20:     ANSELbits.ANS0 = 1;
   960     005D  1683               	bsf	3,5	;RP0=1, select bank3
   961     005E  1703               	bsf	3,6	;RP1=1, select bank3
   962     005F  1408               	bsf	8,0	;volatile
   963     0060                     l736:
   964                           
   965                           ;configADC.c: 23:     if(canal == 1)
   966     0060  0374               	decf	setupADC@canal,w
   967     0061  1D03               	btfss	3,2
   968     0062  2864               	goto	u41
   969     0063  2865               	goto	u40
   970     0064                     u41:
   971     0064  286B               	goto	l55
   972     0065                     u40:
   973     0065                     l738:
   974                           
   975                           ;configADC.c: 24:     {;configADC.c: 25:     TRISAbits.TRISA1 = 1;
   976     0065  1683               	bsf	3,5	;RP0=1, select bank1
   977     0066  1303               	bcf	3,6	;RP1=0, select bank1
   978     0067  1485               	bsf	5,1	;volatile
   979                           
   980                           ;configADC.c: 26:     ANSELbits.ANS1 = 1;
   981     0068  1683               	bsf	3,5	;RP0=1, select bank3
   982     0069  1703               	bsf	3,6	;RP1=1, select bank3
   983     006A  1488               	bsf	8,1	;volatile
   984     006B                     l55:	
   985                           ;configADC.c: 27:     }
   986                           
   987                           
   988                           ;configADC.c: 31:     ADCON0bits.ADCS0 = 1;
   989     006B  1283               	bcf	3,5	;RP0=0, select bank0
   990     006C  1303               	bcf	3,6	;RP1=0, select bank0
   991     006D  171F               	bsf	31,6	;volatile
   992                           
   993                           ;configADC.c: 32:     ADCON0bits.ADCS1 = 0;
   994     006E  139F               	bcf	31,7	;volatile
   995                           
   996                           ;configADC.c: 34:     ADCON1bits.VCFG0 = 0;
   997     006F  1683               	bsf	3,5	;RP0=1, select bank1
   998     0070  1303               	bcf	3,6	;RP1=0, select bank1
   999     0071  121F               	bcf	31,4	;volatile
  1000                           
  1001                           ;configADC.c: 35:     ADCON1bits.VCFG1 = 0;
  1002     0072  129F               	bcf	31,5	;volatile
  1003                           
  1004                           ;configADC.c: 37:     ADCON1bits.ADFM = 0;
  1005     0073  139F               	bcf	31,7	;volatile
  1006                           
  1007                           ;configADC.c: 39:     ADCON0bits.CHS0 = 0;
  1008     0074  1283               	bcf	3,5	;RP0=0, select bank0
  1009     0075  1303               	bcf	3,6	;RP1=0, select bank0
  1010     0076  111F               	bcf	31,2	;volatile
  1011                           
  1012                           ;configADC.c: 40:     ADCON0bits.CHS1 = 0;
  1013     0077  119F               	bcf	31,3	;volatile
  1014                           
  1015                           ;configADC.c: 41:     ADCON0bits.CHS2 = 0;
  1016     0078  121F               	bcf	31,4	;volatile
  1017                           
  1018                           ;configADC.c: 42:     ADCON0bits.CHS3 = 0;
  1019     0079  129F               	bcf	31,5	;volatile
  1020                           
  1021                           ;configADC.c: 44:     ADCON0bits.ADON = 1;
  1022     007A  141F               	bsf	31,0	;volatile
  1023     007B                     l740:
  1024                           
  1025                           ;configADC.c: 46:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1026     007B  3021               	movlw	33
  1027     007C  00F3               	movwf	??_setupADC
  1028     007D                     u117:
  1029     007D  0BF3               	decfsz	??_setupADC,f
  1030     007E  287D               	goto	u117
  1031     007F                     l56:
  1032     007F  0008               	return
  1033     0080                     __end_of_setupADC:
  1034                           
  1035                           	psect	text5
  1036     0014                     __ptext5:	
  1037 ;; *************** function _readADC *****************
  1038 ;; Defined at:
  1039 ;;		line 49 in file "configADC.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  canal           1    wreg     unsigned char 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  canal           1    5[COMMON] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         1       0       0       0       0
  1055 ;;      Temps:          2       0       0       0       0
  1056 ;;      Totals:         3       0       0       0       0
  1057 ;;Total ram usage:        3 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 3
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067     0014                     _readADC:	
  1068                           ;psect for function _readADC
  1069                           
  1070                           
  1071                           ;incstack = 0
  1072                           ; Regs used in _readADC: [wreg+status,2+status,0]
  1073                           ;readADC@canal stored from wreg
  1074     0014  00F5               	movwf	readADC@canal
  1075     0015                     l750:
  1076                           
  1077                           ;configADC.c: 51:     if(canal == 0)
  1078     0015  0875               	movf	readADC@canal,w
  1079     0016  1D03               	btfss	3,2
  1080     0017  2819               	goto	u51
  1081     0018  281A               	goto	u50
  1082     0019                     u51:
  1083     0019  2833               	goto	l760
  1084     001A                     u50:
  1085     001A                     l752:
  1086                           
  1087                           ;configADC.c: 52:     {;configADC.c: 53:     ADCON0bits.CHS = 0b0000;
  1088     001A  30C3               	movlw	-61
  1089     001B  1283               	bcf	3,5	;RP0=0, select bank0
  1090     001C  1303               	bcf	3,6	;RP1=0, select bank0
  1091     001D  059F               	andwf	31,f	;volatile
  1092     001E                     l754:
  1093                           
  1094                           ;configADC.c: 55:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1095     001E  3021               	movlw	33
  1096     001F  00F3               	movwf	??_readADC
  1097     0020                     u127:
  1098     0020  0BF3               	decfsz	??_readADC,f
  1099     0021  2820               	goto	u127
  1100     0022                     l756:
  1101                           
  1102                           ;configADC.c: 57:     ADCON0bits.GO = 1;
  1103     0022  1283               	bcf	3,5	;RP0=0, select bank0
  1104     0023  1303               	bcf	3,6	;RP1=0, select bank0
  1105     0024  149F               	bsf	31,1	;volatile
  1106     0025                     l60:	
  1107                           ;configADC.c: 58:     while (ADCON0bits.GO == 1){};
  1108                           
  1109     0025  189F               	btfsc	31,1	;volatile
  1110     0026  2828               	goto	u61
  1111     0027  2829               	goto	u60
  1112     0028                     u61:
  1113     0028  2825               	goto	l60
  1114     0029                     u60:
  1115     0029                     l62:
  1116                           
  1117                           ;configADC.c: 59:     ADIF = 0;
  1118     0029  130C               	bcf	12,6	;volatile
  1119     002A                     l758:
  1120                           
  1121                           ;configADC.c: 60:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1122     002A  300D               	movlw	13
  1123     002B  00F4               	movwf	??_readADC+1
  1124     002C  30FB               	movlw	251
  1125     002D  00F3               	movwf	??_readADC
  1126     002E                     u137:
  1127     002E  0BF3               	decfsz	??_readADC,f
  1128     002F  282E               	goto	u137
  1129     0030  0BF4               	decfsz	??_readADC+1,f
  1130     0031  282E               	goto	u137
  1131     0032  2833               	nop2
  1132     0033                     l760:
  1133                           
  1134                           ;configADC.c: 63:     if(canal == 1)
  1135     0033  0375               	decf	readADC@canal,w
  1136     0034  1D03               	btfss	3,2
  1137     0035  2837               	goto	u71
  1138     0036  2838               	goto	u70
  1139     0037                     u71:
  1140     0037  2853               	goto	l67
  1141     0038                     u70:
  1142     0038                     l762:
  1143                           
  1144                           ;configADC.c: 64:     {;configADC.c: 65:     ADCON0bits.CHS = 0b0001;
  1145     0038  1283               	bcf	3,5	;RP0=0, select bank0
  1146     0039  1303               	bcf	3,6	;RP1=0, select bank0
  1147     003A  081F               	movf	31,w	;volatile
  1148     003B  39C3               	andlw	-61
  1149     003C  3804               	iorlw	4
  1150     003D  009F               	movwf	31	;volatile
  1151     003E                     l764:
  1152                           
  1153                           ;configADC.c: 67:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1154     003E  3021               	movlw	33
  1155     003F  00F3               	movwf	??_readADC
  1156     0040                     u147:
  1157     0040  0BF3               	decfsz	??_readADC,f
  1158     0041  2840               	goto	u147
  1159     0042                     l766:
  1160                           
  1161                           ;configADC.c: 69:     ADCON0bits.GO = 1;
  1162     0042  1283               	bcf	3,5	;RP0=0, select bank0
  1163     0043  1303               	bcf	3,6	;RP1=0, select bank0
  1164     0044  149F               	bsf	31,1	;volatile
  1165     0045                     l64:	
  1166                           ;configADC.c: 70:     while (ADCON0bits.GO == 1){};
  1167                           
  1168     0045  189F               	btfsc	31,1	;volatile
  1169     0046  2848               	goto	u81
  1170     0047  2849               	goto	u80
  1171     0048                     u81:
  1172     0048  2845               	goto	l64
  1173     0049                     u80:
  1174     0049                     l66:
  1175                           
  1176                           ;configADC.c: 71:     ADIF = 0;
  1177     0049  130C               	bcf	12,6	;volatile
  1178     004A                     l768:
  1179                           
  1180                           ;configADC.c: 72:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1181     004A  300D               	movlw	13
  1182     004B  00F4               	movwf	??_readADC+1
  1183     004C  30FB               	movlw	251
  1184     004D  00F3               	movwf	??_readADC
  1185     004E                     u157:
  1186     004E  0BF3               	decfsz	??_readADC,f
  1187     004F  284E               	goto	u157
  1188     0050  0BF4               	decfsz	??_readADC+1,f
  1189     0051  284E               	goto	u157
  1190     0052  2853               	nop2
  1191     0053                     l67:
  1192     0053  0008               	return
  1193     0054                     __end_of_readADC:
  1194                           
  1195                           	psect	text6
  1196     00A9                     __ptext6:	
  1197 ;; *************** function _isr *****************
  1198 ;; Defined at:
  1199 ;;		line 55 in file "main_S1.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0
  1215 ;;      Temps:          2       0       0       0       0
  1216 ;;      Totals:         2       0       0       0       0
  1217 ;;Total ram usage:        2 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 2
  1220 ;; This function calls:
  1221 ;;		_spiRead
  1222 ;;		_spiWrite
  1223 ;; This function is called by:
  1224 ;;		Interrupt level 1
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228     00A9                     _isr:	
  1229                           ;psect for function _isr
  1230                           
  1231     00A9                     i1l794:
  1232                           
  1233                           ;main_S1.c: 56:    if(SSPIF == 1){
  1234     00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1235     00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1236     00AB  1D8C               	btfss	12,3	;volatile
  1237     00AC  28AE               	goto	u9_21
  1238     00AD  28AF               	goto	u9_20
  1239     00AE                     u9_21:
  1240     00AE  28C0               	goto	i1l113
  1241     00AF                     u9_20:
  1242     00AF                     i1l796:
  1243                           
  1244                           ;main_S1.c: 57:         VAL_READ = spiRead();
  1245     00AF  120A  118A  20F9  120A  118A  	fcall	_spiRead
  1246     00B4  00F7               	movwf	_VAL_READ
  1247                           
  1248                           ;main_S1.c: 58:         spiWrite(ADRESH);
  1249     00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1250     00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1251     00B7  081E               	movf	30,w	;volatile
  1252     00B8  120A  118A  2109  120A  118A  	fcall	_spiWrite
  1253     00BD                     i1l798:
  1254                           
  1255                           ;main_S1.c: 59:         SSPIF = 0;
  1256     00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1257     00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1258     00BF  118C               	bcf	12,3	;volatile
  1259     00C0                     i1l113:
  1260     00C0  0872               	movf	??_isr+1,w
  1261     00C1  008A               	movwf	10
  1262     00C2  0E71               	swapf	??_isr,w
  1263     00C3  0083               	movwf	3
  1264     00C4  0EFE               	swapf	btemp,f
  1265     00C5  0E7E               	swapf	btemp,w
  1266     00C6  0009               	retfie
  1267     00C7                     __end_of_isr:
  1268                           
  1269                           	psect	intentry
  1270     0004                     __pintentry:	
  1271                           ;incstack = 0
  1272                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1273                           
  1274     0004                     interrupt_function:
  1275     007E                     saved_w	set	btemp
  1276     0004  00FE               	movwf	btemp
  1277     0005  0E03               	swapf	3,w
  1278     0006  00F1               	movwf	??_isr
  1279     0007  080A               	movf	10,w
  1280     0008  00F2               	movwf	??_isr+1
  1281     0009  120A  118A  28A9   	ljmp	_isr
  1282                           
  1283                           	psect	text7
  1284     0109                     __ptext7:	
  1285 ;; *************** function _spiWrite *****************
  1286 ;; Defined at:
  1287 ;;		line 34 in file "configSPI.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  dat             1    wreg     unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  dat             1    0[COMMON] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1301 ;;      Params:         0       0       0       0       0
  1302 ;;      Locals:         1       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0
  1304 ;;      Totals:         1       0       0       0       0
  1305 ;;Total ram usage:        1 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_isr
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314     0109                     _spiWrite:	
  1315                           ;psect for function _spiWrite
  1316                           
  1317                           
  1318                           ;incstack = 0
  1319                           ; Regs used in _spiWrite: [wreg]
  1320                           ;spiWrite@dat stored from wreg
  1321     0109  00F0               	movwf	spiWrite@dat
  1322     010A                     i1l742:
  1323                           
  1324                           ;configSPI.c: 34: void spiWrite(char dat);configSPI.c: 35: {;configSPI.c: 36:     SSPBUF
      +                           = dat;
  1325     010A  0870               	movf	spiWrite@dat,w
  1326     010B  1283               	bcf	3,5	;RP0=0, select bank0
  1327     010C  1303               	bcf	3,6	;RP1=0, select bank0
  1328     010D  0093               	movwf	19	;volatile
  1329     010E                     i1l31:
  1330     010E  0008               	return
  1331     010F                     __end_of_spiWrite:
  1332                           
  1333                           	psect	text8
  1334     00F9                     __ptext8:	
  1335 ;; *************** function _spiRead *****************
  1336 ;; Defined at:
  1337 ;;		line 47 in file "configSPI.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      unsigned char 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0
  1354 ;;      Totals:         0       0       0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 1
  1358 ;; This function calls:
  1359 ;;		_spiReceiveWait
  1360 ;; This function is called by:
  1361 ;;		_isr
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365     00F9                     _spiRead:	
  1366                           ;psect for function _spiRead
  1367                           
  1368     00F9                     i1l744:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1371                           
  1372                           
  1373                           ;configSPI.c: 49:     spiReceiveWait();
  1374     00F9  120A  118A  2102  120A  118A  	fcall	_spiReceiveWait
  1375     00FE                     i1l746:
  1376                           
  1377                           ;configSPI.c: 50:     return(SSPBUF);
  1378     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1379     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1380     0100  0813               	movf	19,w	;volatile
  1381     0101                     i1l39:
  1382     0101  0008               	return
  1383     0102                     __end_of_spiRead:
  1384                           
  1385                           	psect	text9
  1386     0102                     __ptext9:	
  1387 ;; *************** function _spiReceiveWait *****************
  1388 ;; Defined at:
  1389 ;;		line 29 in file "configSPI.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		None
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_spiRead
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416     0102                     _spiReceiveWait:	
  1417                           ;psect for function _spiReceiveWait
  1418                           
  1419     0102                     i1l730:	
  1420                           ;incstack = 0
  1421                           ; Regs used in _spiReceiveWait: []
  1422                           
  1423     0102                     i1l25:	
  1424                           ;configSPI.c: 31:     while ( !SSPSTATbits.BF );
  1425                           
  1426     0102  1683               	bsf	3,5	;RP0=1, select bank1
  1427     0103  1303               	bcf	3,6	;RP1=0, select bank1
  1428     0104  1C14               	btfss	20,0	;volatile
  1429     0105  2907               	goto	u2_21
  1430     0106  2908               	goto	u2_20
  1431     0107                     u2_21:
  1432     0107  2902               	goto	i1l25
  1433     0108                     u2_20:
  1434     0108                     i1l28:
  1435     0108  0008               	return
  1436     0109                     __end_of_spiReceiveWait:
  1437     007E                     btemp	set	126	;btemp
  1438     007E                     wtemp0	set	126
  1439                           
  1440                           	psect	idloc
  1441                           
  1442                           ;Config register IDLOC0 @ 0x2000
  1443                           ;	unspecified, using default values
  1444     2000                     	org	8192
  1445     2000  3FFF               	dw	16383
  1446                           
  1447                           ;Config register IDLOC1 @ 0x2001
  1448                           ;	unspecified, using default values
  1449     2001                     	org	8193
  1450     2001  3FFF               	dw	16383
  1451                           
  1452                           ;Config register IDLOC2 @ 0x2002
  1453                           ;	unspecified, using default values
  1454     2002                     	org	8194
  1455     2002  3FFF               	dw	16383
  1456                           
  1457                           ;Config register IDLOC3 @ 0x2003
  1458                           ;	unspecified, using default values
  1459     2003                     	org	8195
  1460     2003  3FFF               	dw	16383
  1461                           
  1462                           	psect	config
  1463                           
  1464                           ;Config register CONFIG1 @ 0x2007
  1465                           ;	Oscillator Selection bits
  1466                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1467                           ;	Watchdog Timer Enable bit
  1468                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1469                           ;	Power-up Timer Enable bit
  1470                           ;	PWRTE = OFF, PWRT disabled
  1471                           ;	RE3/MCLR pin function select bit
  1472                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1473                           ;	Code Protection bit
  1474                           ;	CP = OFF, Program memory code protection is disabled
  1475                           ;	Data Code Protection bit
  1476                           ;	CPD = OFF, Data memory code protection is disabled
  1477                           ;	Brown Out Reset Selection bits
  1478                           ;	BOREN = OFF, BOR disabled
  1479                           ;	Internal External Switchover bit
  1480                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1481                           ;	Fail-Safe Clock Monitor Enabled bit
  1482                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1483                           ;	Low Voltage Programming Enable bit
  1484                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1485                           ;	In-Circuit Debugger Mode bit
  1486                           ;	DEBUG = 0x1, unprogramme  1487     2007                     	org	8199
  1488     2007  20D4               	dw	8404
  1489                           
  1490                           ;Config register CONFIG2 @ 0x2008
  1491                           ;	Brown-out Reset Selection bit
  1492                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1493                           ;	Flash Program Memory Self Write Enable bits
  1494                           ;	WRT = OFF, Write protection off
  1495     2008                     	org	8200
  1496     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     435
                            _readADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     405
                           _setupADC
                        _setupINTOSC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      15
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             2     2      0      30
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              3     3      0      30
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _readADC
   _setup
     _setupADC
     _setupINTOSC
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 12:51:00 2023

                      l5 00F8              _SSPSTATbits 0094                       l21 00D7  
                     l22 00DC                       l60 0025                       l62 0029  
                     l55 006B                       l64 0045                       l56 007F  
                     l66 0049                       l67 0053                       u30 005A  
                     u31 0059                       u40 0065                       u41 0064  
                     u50 001A                       u51 0019                       u60 0029  
                     u61 0028                       u70 0038                       u71 0037  
                     u80 0049                       u81 0048                      l124 00A8  
                    l118 00E2                      l810 00D6                      l802 00C8  
                    l740 007B                      l732 0055                      l716 00ED  
                    l804 00CF                      l820 008F                      l812 0080  
                    l750 0015                      l734 005A                      l718 00F7  
                    l806 00D1                      l822 0092                      l814 008C  
                    l830 00DD                      l752 001A                      l760 0033  
                    l736 0060                      l808 00D3                      l824 0093  
                    l816 008D                      l762 0038                      l754 001E  
                    l738 0065                      l826 0099                      l818 008E  
                    l764 003E                      l756 0022                      l828 009F  
                    l766 0042                      l758 002A                      l768 004A  
                    u100 00CF                      u101 00CE                      u117 007D  
                    u127 0020                      u137 002E                      u147 0040  
                    u157 004E                      _isr 00A9                     _ADIF 0066  
                   ?_isr 0070                     i1l31 010E                     i1l25 0102  
                   i1l28 0108                     i1l39 0101                     u2_20 0108  
                   u2_21 0107                     u9_20 00AF                     u9_21 00AE  
                   _main 00DD                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l113 00C0                    i1l730 0102                    i1l742 010A  
                  i1l744 00F9                    i1l746 00FE                    i1l794 00A9  
                  i1l796 00AF                    i1l798 00BD                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _SSPIF 0063          __end_of_readADC 0054                    _setup 0080  
                  pclath 000A          __end_of_spiInit 00DD          __end_of_spiRead 0102  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00EC                   ??_main 0077                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
           readADC@canal 0075             ?_setupINTOSC 0070                ??_readADC 0073  
       __end_of_setupADC 0080                   saved_w 007E         __end_of_spiWrite 010F  
              ??_spiInit 0076                ??_spiRead 0070  __end_of__initialization 0010  
         __pcstackCOMMON 0070            __end_of_setup 00A9                  ??_setup 0077  
             __pmaintext 00DD               __pintentry 0004                  _SSPSTAT 0094  
              ?_setupADC 0070                ?_spiWrite 0070                _ANSELbits 0188  
                __ptext1 0080                  __ptext2 00C7                  __ptext3 00EC  
                __ptext4 0054                  __ptext5 0014                  __ptext6 00A9  
                __ptext7 0109                  __ptext8 00F9                  __ptext9 0102  
                _readADC 0014                  _spiInit 00C7                  _spiRead 00F9  
   end_of_initialization 0010               ??_setupADC 0073               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070           _spiReceiveWait 0102  
    start_initialization 000F              __end_of_isr 00C7   __end_of_spiReceiveWait 0109  
            __pbssCOMMON 0077                ___latbits 0002          ?_spiReceiveWait 0070  
               ?_readADC 0070                 ?_spiInit 0073                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C                 _VAL_READ 0077  
             _ADCON0bits 001F               _ADCON1bits 009F            ??_setupINTOSC 0073  
    __end_of_setupINTOSC 00F9            setupADC@canal 0074                 _setupADC 0054  
               _spiWrite 0109             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
             _OSCCONbits 008F              _setupINTOSC 00EC             setupINTOSC@F 0074  
