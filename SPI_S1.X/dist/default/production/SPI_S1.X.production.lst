

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 01:16:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     000D                     	;# 
   304     000E                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0014                     	;# 
   312     0015                     	;# 
   313     0015                     	;# 
   314     0016                     	;# 
   315     0017                     	;# 
   316     0018                     	;# 
   317     0019                     	;# 
   318     001A                     	;# 
   319     001B                     	;# 
   320     001B                     	;# 
   321     001C                     	;# 
   322     001D                     	;# 
   323     001E                     	;# 
   324     001F                     	;# 
   325     0081                     	;# 
   326     0085                     	;# 
   327     0086                     	;# 
   328     0087                     	;# 
   329     0088                     	;# 
   330     0089                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0094                     	;# 
   342     0095                     	;# 
   343     0096                     	;# 
   344     0097                     	;# 
   345     0098                     	;# 
   346     0099                     	;# 
   347     009A                     	;# 
   348     009B                     	;# 
   349     009C                     	;# 
   350     009D                     	;# 
   351     009E                     	;# 
   352     009F                     	;# 
   353     0105                     	;# 
   354     0107                     	;# 
   355     0108                     	;# 
   356     0109                     	;# 
   357     010C                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     0185                     	;# 
   363     0187                     	;# 
   364     0188                     	;# 
   365     0189                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368     0000                     	;# 
   369     0001                     	;# 
   370     0002                     	;# 
   371     0003                     	;# 
   372     0004                     	;# 
   373     0005                     	;# 
   374     0006                     	;# 
   375     0007                     	;# 
   376     0008                     	;# 
   377     0009                     	;# 
   378     000A                     	;# 
   379     000B                     	;# 
   380     000C                     	;# 
   381     000D                     	;# 
   382     000E                     	;# 
   383     000E                     	;# 
   384     000F                     	;# 
   385     0010                     	;# 
   386     0011                     	;# 
   387     0012                     	;# 
   388     0013                     	;# 
   389     0014                     	;# 
   390     0015                     	;# 
   391     0015                     	;# 
   392     0016                     	;# 
   393     0017                     	;# 
   394     0018                     	;# 
   395     0019                     	;# 
   396     001A                     	;# 
   397     001B                     	;# 
   398     001B                     	;# 
   399     001C                     	;# 
   400     001D                     	;# 
   401     001E                     	;# 
   402     001F                     	;# 
   403     0081                     	;# 
   404     0085                     	;# 
   405     0086                     	;# 
   406     0087                     	;# 
   407     0088                     	;# 
   408     0089                     	;# 
   409     008C                     	;# 
   410     008D                     	;# 
   411     008E                     	;# 
   412     008F                     	;# 
   413     0090                     	;# 
   414     0091                     	;# 
   415     0092                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0093                     	;# 
   419     0094                     	;# 
   420     0095                     	;# 
   421     0096                     	;# 
   422     0097                     	;# 
   423     0098                     	;# 
   424     0099                     	;# 
   425     009A                     	;# 
   426     009B                     	;# 
   427     009C                     	;# 
   428     009D                     	;# 
   429     009E                     	;# 
   430     009F                     	;# 
   431     0105                     	;# 
   432     0107                     	;# 
   433     0108                     	;# 
   434     0109                     	;# 
   435     010C                     	;# 
   436     010C                     	;# 
   437     010D                     	;# 
   438     010E                     	;# 
   439     010F                     	;# 
   440     0185                     	;# 
   441     0187                     	;# 
   442     0188                     	;# 
   443     0189                     	;# 
   444     018C                     	;# 
   445     018D                     	;# 
   446     000C                     _PIR1bits	set	12
   447     000B                     _INTCONbits	set	11
   448     0006                     _PORTB	set	6
   449     001E                     _ADRESH	set	30
   450     0008                     _PORTD	set	8
   451     001F                     _ADCON0bits	set	31
   452     0013                     _SSPBUF	set	19
   453     0014                     _SSPCON	set	20
   454     0063                     _SSPIF	set	99
   455     0066                     _ADIF	set	102
   456     008C                     _PIE1bits	set	140
   457     0088                     _TRISD	set	136
   458     0086                     _TRISB	set	134
   459     009F                     _ADCON1bits	set	159
   460     0085                     _TRISAbits	set	133
   461     0094                     _SSPSTATbits	set	148
   462     0094                     _SSPSTAT	set	148
   463     008F                     _OSCCONbits	set	143
   464     043B                     _TRISC3	set	1083
   465     043D                     _TRISC5	set	1085
   466     0189                     _ANSELH	set	393
   467     0188                     _ANSEL	set	392
   468     0188                     _ANSELbits	set	392
   469                           
   470                           	psect	cinit
   471     000F                     start_initialization:	
   472                           ; #config settings
   473                           
   474     000F                     __initialization:
   475     000F                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478     000F                     __end_of__initialization:
   479     000F  0183               	clrf	3
   480     0010  120A  118A  28DC   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	cstackCOMMON
   483     0070                     __pcstackCOMMON:
   484     0070                     ?_setup:
   485     0070                     ?_setupINTOSC:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0070                     ?_spiReceiveWait:	
   489                           ; 1 bytes @ 0x0
   490                           
   491     0070                     ??_spiReceiveWait:	
   492                           ; 1 bytes @ 0x0
   493                           
   494     0070                     ?_spiWrite:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ??_spiWrite:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ?_spiRead:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ??_spiRead:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     ?_setupADC:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ?_readADC:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ?_isr:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0070                     ?_main:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     spiWrite@dat:	
   519                           ; 1 bytes @ 0x0
   520                           
   521                           
   522                           ; 1 bytes @ 0x0
   523     0070                     	ds	1
   524     0071                     ??_isr:
   525                           
   526                           ; 1 bytes @ 0x1
   527     0071                     	ds	2
   528     0073                     ??_setupINTOSC:
   529     0073                     ?_spiInit:	
   530                           ; 1 bytes @ 0x3
   531                           
   532     0073                     ??_setupADC:	
   533                           ; 1 bytes @ 0x3
   534                           
   535     0073                     ??_readADC:	
   536                           ; 1 bytes @ 0x3
   537                           
   538     0073                     spiInit@sDataSample:	
   539                           ; 1 bytes @ 0x3
   540                           
   541                           
   542                           ; 1 bytes @ 0x3
   543     0073                     	ds	1
   544     0074                     setupINTOSC@F:
   545     0074                     spiInit@sClockIdle:	
   546                           ; 1 bytes @ 0x4
   547                           
   548     0074                     setupADC@canal:	
   549                           ; 1 bytes @ 0x4
   550                           
   551                           
   552                           ; 1 bytes @ 0x4
   553     0074                     	ds	1
   554     0075                     spiInit@sTransmitEdge:
   555     0075                     readADC@canal:	
   556                           ; 1 bytes @ 0x5
   557                           
   558                           
   559                           ; 1 bytes @ 0x5
   560     0075                     	ds	1
   561     0076                     ??_spiInit:
   562     0076                     spiInit@sType:	
   563                           ; 1 bytes @ 0x6
   564                           
   565                           
   566                           ; 1 bytes @ 0x6
   567     0076                     	ds	1
   568     0077                     ??_setup:
   569     0077                     ??_main:	
   570                           ; 1 bytes @ 0x7
   571                           
   572                           
   573                           	psect	maintext
   574     00DC                     __pmaintext:	
   575                           ; 1 bytes @ 0x7
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 61 in file "main_S1.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, pclath, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : B00/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels required when called: 5
   601 ;; This function calls:
   602 ;;		_readADC
   603 ;;		_setup
   604 ;; This function is called by:
   605 ;;		Startup code after reset
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609     00DC                     _main:	
   610                           ;psect for function _main
   611                           
   612     00DC                     l828:	
   613                           ;incstack = 0
   614                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   615                           
   616                           
   617                           ;main_S1.c: 63:     setup();
   618     00DC  120A  118A  207F  120A  118A  	fcall	_setup
   619     00E1                     l116:	
   620                           ;main_S1.c: 65:     while(1)
   621                           
   622                           
   623                           ;main_S1.c: 66:     {;main_S1.c: 67:        readADC(0);
   624     00E1  3000               	movlw	0
   625     00E2  120A  118A  2013  120A  118A  	fcall	_readADC
   626     00E7  28E1               	goto	l116
   627     00E8  120A  118A  280C   	ljmp	start
   628     00EB                     __end_of_main:
   629                           
   630                           	psect	text1
   631     007F                     __ptext1:	
   632 ;; *************** function _setup *****************
   633 ;; Defined at:
   634 ;;		line 75 in file "main_S1.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0, pclath, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; Hardware stack levels required when called: 4
   655 ;; This function calls:
   656 ;;		_setupADC
   657 ;;		_setupINTOSC
   658 ;;		_spiInit
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664     007F                     _setup:	
   665                           ;psect for function _setup
   666                           
   667     007F                     l810:	
   668                           ;incstack = 0
   669                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   670                           
   671                           
   672                           ;main_S1.c: 77:     ANSEL = 0;
   673     007F  1683               	bsf	3,5	;RP0=1, select bank3
   674     0080  1703               	bsf	3,6	;RP1=1, select bank3
   675     0081  0188               	clrf	8	;volatile
   676                           
   677                           ;main_S1.c: 78:     ANSELH = 0;
   678     0082  0189               	clrf	9	;volatile
   679                           
   680                           ;main_S1.c: 80:     TRISB = 0;
   681     0083  1683               	bsf	3,5	;RP0=1, select bank1
   682     0084  1303               	bcf	3,6	;RP1=0, select bank1
   683     0085  0186               	clrf	6	;volatile
   684                           
   685                           ;main_S1.c: 81:     TRISD = 0;
   686     0086  0188               	clrf	8	;volatile
   687                           
   688                           ;main_S1.c: 83:     PORTB = 0;
   689     0087  1283               	bcf	3,5	;RP0=0, select bank0
   690     0088  1303               	bcf	3,6	;RP1=0, select bank0
   691     0089  0186               	clrf	6	;volatile
   692                           
   693                           ;main_S1.c: 84:     PORTD = 0;
   694     008A  0188               	clrf	8	;volatile
   695     008B                     l812:
   696                           
   697                           ;main_S1.c: 87:     INTCONbits.GIE = 1;
   698     008B  178B               	bsf	11,7	;volatile
   699     008C                     l814:
   700                           
   701                           ;main_S1.c: 88:     INTCONbits.PEIE = 1;
   702     008C  170B               	bsf	11,6	;volatile
   703     008D                     l816:
   704                           
   705                           ;main_S1.c: 89:     PIR1bits.SSPIF = 0;
   706     008D  118C               	bcf	12,3	;volatile
   707     008E                     l818:
   708                           
   709                           ;main_S1.c: 90:     PIE1bits.SSPIE = 1;
   710     008E  1683               	bsf	3,5	;RP0=1, select bank1
   711     008F  1303               	bcf	3,6	;RP1=0, select bank1
   712     0090  158C               	bsf	12,3	;volatile
   713     0091                     l820:
   714                           
   715                           ;main_S1.c: 92:     TRISAbits.TRISA5 = 1;
   716     0091  1685               	bsf	5,5	;volatile
   717     0092                     l822:
   718                           
   719                           ;main_S1.c: 94:     setupINTOSC(FOSC_4MHZ);
   720     0092  3006               	movlw	6
   721     0093  120A  118A  20EB  120A  118A  	fcall	_setupINTOSC
   722     0098                     l824:
   723                           
   724                           ;main_S1.c: 95:     setupADC(0);
   725     0098  3000               	movlw	0
   726     0099  120A  118A  2053  120A  118A  	fcall	_setupADC
   727     009E                     l826:
   728                           
   729                           ;main_S1.c: 97:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   730     009E  01F3               	clrf	spiInit@sDataSample
   731     009F  01F4               	clrf	spiInit@sClockIdle
   732     00A0  01F5               	clrf	spiInit@sTransmitEdge
   733     00A1  3024               	movlw	36
   734     00A2  120A  118A  20C6  120A  118A  	fcall	_spiInit
   735     00A7                     l122:
   736     00A7  0008               	return
   737     00A8                     __end_of_setup:
   738                           
   739                           	psect	text2
   740     00C6                     __ptext2:	
   741 ;; *************** function _spiInit *****************
   742 ;; Defined at:
   743 ;;		line 12 in file "configSPI.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  sType           1    wreg     enum E1292
   746 ;;  sDataSample     1    3[COMMON] enum E1300
   747 ;;  sClockIdle      1    4[COMMON] enum E1304
   748 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  sType           1    6[COMMON] enum E1292
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         3       0       0       0       0
   761 ;;      Locals:         1       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0
   763 ;;      Totals:         4       0       0       0       0
   764 ;;Total ram usage:        4 bytes
   765 ;; Hardware stack levels used: 1
   766 ;; Hardware stack levels required when called: 3
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_setup
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774     00C6                     _spiInit:	
   775                           ;psect for function _spiInit
   776                           
   777                           
   778                           ;incstack = 0
   779                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   780                           ;spiInit@sType stored from wreg
   781     00C6  00F6               	movwf	spiInit@sType
   782     00C7                     l800:
   783                           
   784                           ;configSPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);configSPI.c: 13: {;configSPI.c: 14:     
      +                          TRISC5 = 0;
   785     00C7  1683               	bsf	3,5	;RP0=1, select bank1
   786     00C8  1303               	bcf	3,6	;RP1=0, select bank1
   787     00C9  1287               	bcf	7,5	;volatile
   788                           
   789                           ;configSPI.c: 15:     if(sType & 0b00000100)
   790     00CA  1D76               	btfss	spiInit@sType,2
   791     00CB  28CD               	goto	u101
   792     00CC  28CE               	goto	u100
   793     00CD                     u101:
   794     00CD  28D2               	goto	l806
   795     00CE                     u100:
   796     00CE                     l802:
   797                           
   798                           ;configSPI.c: 16:     {;configSPI.c: 17:         SSPSTAT = sTransmitEdge;
   799     00CE  0875               	movf	spiInit@sTransmitEdge,w
   800     00CF  0094               	movwf	20	;volatile
   801     00D0                     l804:
   802                           
   803                           ;configSPI.c: 18:         TRISC3 = 1;
   804     00D0  1587               	bsf	7,3	;volatile
   805                           
   806                           ;configSPI.c: 19:     }
   807     00D1  28D6               	goto	l21
   808     00D2                     l806:
   809                           
   810                           ;configSPI.c: 21:     {;configSPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   811     00D2  0873               	movf	spiInit@sDataSample,w
   812     00D3  0475               	iorwf	spiInit@sTransmitEdge,w
   813     00D4  0094               	movwf	20	;volatile
   814     00D5                     l808:
   815                           
   816                           ;configSPI.c: 23:         TRISC3 = 0;
   817     00D5  1187               	bcf	7,3	;volatile
   818     00D6                     l21:	
   819                           ;configSPI.c: 24:     }
   820                           
   821                           
   822                           ;configSPI.c: 26:     SSPCON = sType | sClockIdle;
   823     00D6  0876               	movf	spiInit@sType,w
   824     00D7  0474               	iorwf	spiInit@sClockIdle,w
   825     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   826     00D9  1303               	bcf	3,6	;RP1=0, select bank0
   827     00DA  0094               	movwf	20	;volatile
   828     00DB                     l22:
   829     00DB  0008               	return
   830     00DC                     __end_of_spiInit:
   831                           
   832                           	psect	text3
   833     00EB                     __ptext3:	
   834 ;; *************** function _setupINTOSC *****************
   835 ;; Defined at:
   836 ;;		line 11 in file "configINTOSC.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  F               1    wreg     enum E1292
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  F               1    4[COMMON] enum E1292
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         1       0       0       0       0
   852 ;;      Temps:          1       0       0       0       0
   853 ;;      Totals:         2       0       0       0       0
   854 ;;Total ram usage:        2 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 3
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_setup
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864     00EB                     _setupINTOSC:	
   865                           ;psect for function _setupINTOSC
   866                           
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   870                           ;setupINTOSC@F stored from wreg
   871     00EB  00F4               	movwf	setupINTOSC@F
   872     00EC                     l714:
   873                           
   874                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
   875     00EC  0874               	movf	setupINTOSC@F,w
   876     00ED  00F3               	movwf	??_setupINTOSC
   877     00EE  0EF3               	swapf	??_setupINTOSC,f
   878     00EF  1683               	bsf	3,5	;RP0=1, select bank1
   879     00F0  1303               	bcf	3,6	;RP1=0, select bank1
   880     00F1  080F               	movf	15,w	;volatile
   881     00F2  0673               	xorwf	??_setupINTOSC,w
   882     00F3  398F               	andlw	-113
   883     00F4  0673               	xorwf	??_setupINTOSC,w
   884     00F5  008F               	movwf	15	;volatile
   885     00F6                     l716:
   886                           
   887                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
   888     00F6  140F               	bsf	15,0	;volatile
   889     00F7                     l5:
   890     00F7  0008               	return
   891     00F8                     __end_of_setupINTOSC:
   892                           
   893                           	psect	text4
   894     0053                     __ptext4:	
   895 ;; *************** function _setupADC *****************
   896 ;; Defined at:
   897 ;;		line 13 in file "configADC.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  canal           1    wreg     unsigned char 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  canal           1    4[COMMON] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         1       0       0       0       0
   913 ;;      Temps:          1       0       0       0       0
   914 ;;      Totals:         2       0       0       0       0
   915 ;;Total ram usage:        2 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 3
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_setup
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925     0053                     _setupADC:	
   926                           ;psect for function _setupADC
   927                           
   928                           
   929                           ;incstack = 0
   930                           ; Regs used in _setupADC: [wreg+status,2+status,0]
   931                           ;setupADC@canal stored from wreg
   932     0053  00F4               	movwf	setupADC@canal
   933     0054                     l730:
   934                           
   935                           ;configADC.c: 17:     if(canal == 0)
   936     0054  0874               	movf	setupADC@canal,w
   937     0055  1D03               	btfss	3,2
   938     0056  2858               	goto	u31
   939     0057  2859               	goto	u30
   940     0058                     u31:
   941     0058  285F               	goto	l734
   942     0059                     u30:
   943     0059                     l732:
   944                           
   945                           ;configADC.c: 18:     {;configADC.c: 19:     TRISAbits.TRISA0 = 1;
   946     0059  1683               	bsf	3,5	;RP0=1, select bank1
   947     005A  1303               	bcf	3,6	;RP1=0, select bank1
   948     005B  1405               	bsf	5,0	;volatile
   949                           
   950                           ;configADC.c: 20:     ANSELbits.ANS0 = 1;
   951     005C  1683               	bsf	3,5	;RP0=1, select bank3
   952     005D  1703               	bsf	3,6	;RP1=1, select bank3
   953     005E  1408               	bsf	8,0	;volatile
   954     005F                     l734:
   955                           
   956                           ;configADC.c: 23:     if(canal == 1)
   957     005F  0374               	decf	setupADC@canal,w
   958     0060  1D03               	btfss	3,2
   959     0061  2863               	goto	u41
   960     0062  2864               	goto	u40
   961     0063                     u41:
   962     0063  286A               	goto	l55
   963     0064                     u40:
   964     0064                     l736:
   965                           
   966                           ;configADC.c: 24:     {;configADC.c: 25:     TRISAbits.TRISA1 = 1;
   967     0064  1683               	bsf	3,5	;RP0=1, select bank1
   968     0065  1303               	bcf	3,6	;RP1=0, select bank1
   969     0066  1485               	bsf	5,1	;volatile
   970                           
   971                           ;configADC.c: 26:     ANSELbits.ANS1 = 1;
   972     0067  1683               	bsf	3,5	;RP0=1, select bank3
   973     0068  1703               	bsf	3,6	;RP1=1, select bank3
   974     0069  1488               	bsf	8,1	;volatile
   975     006A                     l55:	
   976                           ;configADC.c: 27:     }
   977                           
   978                           
   979                           ;configADC.c: 31:     ADCON0bits.ADCS0 = 1;
   980     006A  1283               	bcf	3,5	;RP0=0, select bank0
   981     006B  1303               	bcf	3,6	;RP1=0, select bank0
   982     006C  171F               	bsf	31,6	;volatile
   983                           
   984                           ;configADC.c: 32:     ADCON0bits.ADCS1 = 0;
   985     006D  139F               	bcf	31,7	;volatile
   986                           
   987                           ;configADC.c: 34:     ADCON1bits.VCFG0 = 0;
   988     006E  1683               	bsf	3,5	;RP0=1, select bank1
   989     006F  1303               	bcf	3,6	;RP1=0, select bank1
   990     0070  121F               	bcf	31,4	;volatile
   991                           
   992                           ;configADC.c: 35:     ADCON1bits.VCFG1 = 0;
   993     0071  129F               	bcf	31,5	;volatile
   994                           
   995                           ;configADC.c: 37:     ADCON1bits.ADFM = 0;
   996     0072  139F               	bcf	31,7	;volatile
   997                           
   998                           ;configADC.c: 39:     ADCON0bits.CHS0 = 0;
   999     0073  1283               	bcf	3,5	;RP0=0, select bank0
  1000     0074  1303               	bcf	3,6	;RP1=0, select bank0
  1001     0075  111F               	bcf	31,2	;volatile
  1002                           
  1003                           ;configADC.c: 40:     ADCON0bits.CHS1 = 0;
  1004     0076  119F               	bcf	31,3	;volatile
  1005                           
  1006                           ;configADC.c: 41:     ADCON0bits.CHS2 = 0;
  1007     0077  121F               	bcf	31,4	;volatile
  1008                           
  1009                           ;configADC.c: 42:     ADCON0bits.CHS3 = 0;
  1010     0078  129F               	bcf	31,5	;volatile
  1011                           
  1012                           ;configADC.c: 44:     ADCON0bits.ADON = 1;
  1013     0079  141F               	bsf	31,0	;volatile
  1014     007A                     l738:
  1015                           
  1016                           ;configADC.c: 46:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1017     007A  3021               	movlw	33
  1018     007B  00F3               	movwf	??_setupADC
  1019     007C                     u117:
  1020     007C  0BF3               	decfsz	??_setupADC,f
  1021     007D  287C               	goto	u117
  1022     007E                     l56:
  1023     007E  0008               	return
  1024     007F                     __end_of_setupADC:
  1025                           
  1026                           	psect	text5
  1027     0013                     __ptext5:	
  1028 ;; *************** function _readADC *****************
  1029 ;; Defined at:
  1030 ;;		line 49 in file "configADC.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  canal           1    wreg     unsigned char 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  canal           1    5[COMMON] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, status,2, status,0
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1044 ;;      Params:         0       0       0       0       0
  1045 ;;      Locals:         1       0       0       0       0
  1046 ;;      Temps:          2       0       0       0       0
  1047 ;;      Totals:         3       0       0       0       0
  1048 ;;Total ram usage:        3 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 3
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058     0013                     _readADC:	
  1059                           ;psect for function _readADC
  1060                           
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _readADC: [wreg+status,2+status,0]
  1064                           ;readADC@canal stored from wreg
  1065     0013  00F5               	movwf	readADC@canal
  1066     0014                     l748:
  1067                           
  1068                           ;configADC.c: 51:     if(canal == 0)
  1069     0014  0875               	movf	readADC@canal,w
  1070     0015  1D03               	btfss	3,2
  1071     0016  2818               	goto	u51
  1072     0017  2819               	goto	u50
  1073     0018                     u51:
  1074     0018  2832               	goto	l758
  1075     0019                     u50:
  1076     0019                     l750:
  1077                           
  1078                           ;configADC.c: 52:     {;configADC.c: 53:     ADCON0bits.CHS = 0b0000;
  1079     0019  30C3               	movlw	-61
  1080     001A  1283               	bcf	3,5	;RP0=0, select bank0
  1081     001B  1303               	bcf	3,6	;RP1=0, select bank0
  1082     001C  059F               	andwf	31,f	;volatile
  1083     001D                     l752:
  1084                           
  1085                           ;configADC.c: 55:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1086     001D  3021               	movlw	33
  1087     001E  00F3               	movwf	??_readADC
  1088     001F                     u127:
  1089     001F  0BF3               	decfsz	??_readADC,f
  1090     0020  281F               	goto	u127
  1091     0021                     l754:
  1092                           
  1093                           ;configADC.c: 57:     ADCON0bits.GO = 1;
  1094     0021  1283               	bcf	3,5	;RP0=0, select bank0
  1095     0022  1303               	bcf	3,6	;RP1=0, select bank0
  1096     0023  149F               	bsf	31,1	;volatile
  1097     0024                     l60:	
  1098                           ;configADC.c: 58:     while (ADCON0bits.GO == 1){};
  1099                           
  1100     0024  189F               	btfsc	31,1	;volatile
  1101     0025  2827               	goto	u61
  1102     0026  2828               	goto	u60
  1103     0027                     u61:
  1104     0027  2824               	goto	l60
  1105     0028                     u60:
  1106     0028                     l62:
  1107                           
  1108                           ;configADC.c: 59:     ADIF = 0;
  1109     0028  130C               	bcf	12,6	;volatile
  1110     0029                     l756:
  1111                           
  1112                           ;configADC.c: 60:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1113     0029  300D               	movlw	13
  1114     002A  00F4               	movwf	??_readADC+1
  1115     002B  30FB               	movlw	251
  1116     002C  00F3               	movwf	??_readADC
  1117     002D                     u137:
  1118     002D  0BF3               	decfsz	??_readADC,f
  1119     002E  282D               	goto	u137
  1120     002F  0BF4               	decfsz	??_readADC+1,f
  1121     0030  282D               	goto	u137
  1122     0031  2832               	nop2
  1123     0032                     l758:
  1124                           
  1125                           ;configADC.c: 63:     if(canal == 1)
  1126     0032  0375               	decf	readADC@canal,w
  1127     0033  1D03               	btfss	3,2
  1128     0034  2836               	goto	u71
  1129     0035  2837               	goto	u70
  1130     0036                     u71:
  1131     0036  2852               	goto	l67
  1132     0037                     u70:
  1133     0037                     l760:
  1134                           
  1135                           ;configADC.c: 64:     {;configADC.c: 65:     ADCON0bits.CHS = 0b0001;
  1136     0037  1283               	bcf	3,5	;RP0=0, select bank0
  1137     0038  1303               	bcf	3,6	;RP1=0, select bank0
  1138     0039  081F               	movf	31,w	;volatile
  1139     003A  39C3               	andlw	-61
  1140     003B  3804               	iorlw	4
  1141     003C  009F               	movwf	31	;volatile
  1142     003D                     l762:
  1143                           
  1144                           ;configADC.c: 67:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1145     003D  3021               	movlw	33
  1146     003E  00F3               	movwf	??_readADC
  1147     003F                     u147:
  1148     003F  0BF3               	decfsz	??_readADC,f
  1149     0040  283F               	goto	u147
  1150     0041                     l764:
  1151                           
  1152                           ;configADC.c: 69:     ADCON0bits.GO = 1;
  1153     0041  1283               	bcf	3,5	;RP0=0, select bank0
  1154     0042  1303               	bcf	3,6	;RP1=0, select bank0
  1155     0043  149F               	bsf	31,1	;volatile
  1156     0044                     l64:	
  1157                           ;configADC.c: 70:     while (ADCON0bits.GO == 1){};
  1158                           
  1159     0044  189F               	btfsc	31,1	;volatile
  1160     0045  2847               	goto	u81
  1161     0046  2848               	goto	u80
  1162     0047                     u81:
  1163     0047  2844               	goto	l64
  1164     0048                     u80:
  1165     0048                     l66:
  1166                           
  1167                           ;configADC.c: 71:     ADIF = 0;
  1168     0048  130C               	bcf	12,6	;volatile
  1169     0049                     l766:
  1170                           
  1171                           ;configADC.c: 72:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1172     0049  300D               	movlw	13
  1173     004A  00F4               	movwf	??_readADC+1
  1174     004B  30FB               	movlw	251
  1175     004C  00F3               	movwf	??_readADC
  1176     004D                     u157:
  1177     004D  0BF3               	decfsz	??_readADC,f
  1178     004E  284D               	goto	u157
  1179     004F  0BF4               	decfsz	??_readADC+1,f
  1180     0050  284D               	goto	u157
  1181     0051  2852               	nop2
  1182     0052                     l67:
  1183     0052  0008               	return
  1184     0053                     __end_of_readADC:
  1185                           
  1186                           	psect	text6
  1187     00A8                     __ptext6:	
  1188 ;; *************** function _isr *****************
  1189 ;; Defined at:
  1190 ;;		line 53 in file "main_S1.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, pclath, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0
  1206 ;;      Temps:          2       0       0       0       0
  1207 ;;      Totals:         2       0       0       0       0
  1208 ;;Total ram usage:        2 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 2
  1211 ;; This function calls:
  1212 ;;		_spiRead
  1213 ;;		_spiWrite
  1214 ;; This function is called by:
  1215 ;;		Interrupt level 1
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219     00A8                     _isr:	
  1220                           ;psect for function _isr
  1221                           
  1222     00A8                     i1l792:
  1223                           
  1224                           ;main_S1.c: 54:    if(SSPIF == 1){
  1225     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1226     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1227     00AA  1D8C               	btfss	12,3	;volatile
  1228     00AB  28AD               	goto	u9_21
  1229     00AC  28AE               	goto	u9_20
  1230     00AD                     u9_21:
  1231     00AD  28BF               	goto	i1l111
  1232     00AE                     u9_20:
  1233     00AE                     i1l794:
  1234                           
  1235                           ;main_S1.c: 55:         PORTD = spiRead();
  1236     00AE  120A  118A  20F8  120A  118A  	fcall	_spiRead
  1237     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1238     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1239     00B5  0088               	movwf	8	;volatile
  1240                           
  1241                           ;main_S1.c: 56:         spiWrite(ADRESH);
  1242     00B6  081E               	movf	30,w	;volatile
  1243     00B7  120A  118A  2108  120A  118A  	fcall	_spiWrite
  1244     00BC                     i1l796:
  1245                           
  1246                           ;main_S1.c: 57:         SSPIF = 0;
  1247     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1248     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1249     00BE  118C               	bcf	12,3	;volatile
  1250     00BF                     i1l111:
  1251     00BF  0872               	movf	??_isr+1,w
  1252     00C0  008A               	movwf	10
  1253     00C1  0E71               	swapf	??_isr,w
  1254     00C2  0083               	movwf	3
  1255     00C3  0EFE               	swapf	btemp,f
  1256     00C4  0E7E               	swapf	btemp,w
  1257     00C5  0009               	retfie
  1258     00C6                     __end_of_isr:
  1259                           
  1260                           	psect	intentry
  1261     0004                     __pintentry:	
  1262                           ;incstack = 0
  1263                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1264                           
  1265     0004                     interrupt_function:
  1266     007E                     saved_w	set	btemp
  1267     0004  00FE               	movwf	btemp
  1268     0005  0E03               	swapf	3,w
  1269     0006  00F1               	movwf	??_isr
  1270     0007  080A               	movf	10,w
  1271     0008  00F2               	movwf	??_isr+1
  1272     0009  120A  118A  28A8   	ljmp	_isr
  1273                           
  1274                           	psect	text7
  1275     0108                     __ptext7:	
  1276 ;; *************** function _spiWrite *****************
  1277 ;; Defined at:
  1278 ;;		line 34 in file "configSPI.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  dat             1    wreg     unsigned char 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  dat             1    0[COMMON] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         1       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0
  1295 ;;      Totals:         1       0       0       0       0
  1296 ;;Total ram usage:        1 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_isr
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305     0108                     _spiWrite:	
  1306                           ;psect for function _spiWrite
  1307                           
  1308                           
  1309                           ;incstack = 0
  1310                           ; Regs used in _spiWrite: [wreg]
  1311                           ;spiWrite@dat stored from wreg
  1312     0108  00F0               	movwf	spiWrite@dat
  1313     0109                     i1l740:
  1314                           
  1315                           ;configSPI.c: 34: void spiWrite(char dat);configSPI.c: 35: {;configSPI.c: 36:     SSPBUF
      +                           = dat;
  1316     0109  0870               	movf	spiWrite@dat,w
  1317     010A  1283               	bcf	3,5	;RP0=0, select bank0
  1318     010B  1303               	bcf	3,6	;RP1=0, select bank0
  1319     010C  0093               	movwf	19	;volatile
  1320     010D                     i1l31:
  1321     010D  0008               	return
  1322     010E                     __end_of_spiWrite:
  1323                           
  1324                           	psect	text8
  1325     00F8                     __ptext8:	
  1326 ;; *************** function _spiRead *****************
  1327 ;; Defined at:
  1328 ;;		line 47 in file "configSPI.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      unsigned char 
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0, pclath, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1342 ;;      Params:         0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0
  1345 ;;      Totals:         0       0       0       0       0
  1346 ;;Total ram usage:        0 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 1
  1349 ;; This function calls:
  1350 ;;		_spiReceiveWait
  1351 ;; This function is called by:
  1352 ;;		_isr
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356     00F8                     _spiRead:	
  1357                           ;psect for function _spiRead
  1358                           
  1359     00F8                     i1l742:	
  1360                           ;incstack = 0
  1361                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1362                           
  1363                           
  1364                           ;configSPI.c: 49:     spiReceiveWait();
  1365     00F8  120A  118A  2101  120A  118A  	fcall	_spiReceiveWait
  1366     00FD                     i1l744:
  1367                           
  1368                           ;configSPI.c: 50:     return(SSPBUF);
  1369     00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1370     00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1371     00FF  0813               	movf	19,w	;volatile
  1372     0100                     i1l39:
  1373     0100  0008               	return
  1374     0101                     __end_of_spiRead:
  1375                           
  1376                           	psect	text9
  1377     0101                     __ptext9:	
  1378 ;; *************** function _spiReceiveWait *****************
  1379 ;; Defined at:
  1380 ;;		line 29 in file "configSPI.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		None
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_spiRead
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407     0101                     _spiReceiveWait:	
  1408                           ;psect for function _spiReceiveWait
  1409                           
  1410     0101                     i1l728:	
  1411                           ;incstack = 0
  1412                           ; Regs used in _spiReceiveWait: []
  1413                           
  1414     0101                     i1l25:	
  1415                           ;configSPI.c: 31:     while ( !SSPSTATbits.BF );
  1416                           
  1417     0101  1683               	bsf	3,5	;RP0=1, select bank1
  1418     0102  1303               	bcf	3,6	;RP1=0, select bank1
  1419     0103  1C14               	btfss	20,0	;volatile
  1420     0104  2906               	goto	u2_21
  1421     0105  2907               	goto	u2_20
  1422     0106                     u2_21:
  1423     0106  2901               	goto	i1l25
  1424     0107                     u2_20:
  1425     0107                     i1l28:
  1426     0107  0008               	return
  1427     0108                     __end_of_spiReceiveWait:
  1428     007E                     btemp	set	126	;btemp
  1429     007E                     wtemp0	set	126
  1430                           
  1431                           	psect	idloc
  1432                           
  1433                           ;Config register IDLOC0 @ 0x2000
  1434                           ;	unspecified, using default values
  1435     2000                     	org	8192
  1436     2000  3FFF               	dw	16383
  1437                           
  1438                           ;Config register IDLOC1 @ 0x2001
  1439                           ;	unspecified, using default values
  1440     2001                     	org	8193
  1441     2001  3FFF               	dw	16383
  1442                           
  1443                           ;Config register IDLOC2 @ 0x2002
  1444                           ;	unspecified, using default values
  1445     2002                     	org	8194
  1446     2002  3FFF               	dw	16383
  1447                           
  1448                           ;Config register IDLOC3 @ 0x2003
  1449                           ;	unspecified, using default values
  1450     2003                     	org	8195
  1451     2003  3FFF               	dw	16383
  1452                           
  1453                           	psect	config
  1454                           
  1455                           ;Config register CONFIG1 @ 0x2007
  1456                           ;	Oscillator Selection bits
  1457                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1458                           ;	Watchdog Timer Enable bit
  1459                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1460                           ;	Power-up Timer Enable bit
  1461                           ;	PWRTE = OFF, PWRT disabled
  1462                           ;	RE3/MCLR pin function select bit
  1463                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1464                           ;	Code Protection bit
  1465                           ;	CP = OFF, Program memory code protection is disabled
  1466                           ;	Data Code Protection bit
  1467                           ;	CPD = OFF, Data memory code protection is disabled
  1468                           ;	Brown Out Reset Selection bits
  1469                           ;	BOREN = OFF, BOR disabled
  1470                           ;	Internal External Switchover bit
  1471                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1472                           ;	Fail-Safe Clock Monitor Enabled bit
  1473                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1474                           ;	Low Voltage Programming Enable bit
  1475                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1476                           ;	In-Circuit Debugger Mode bit
  1477                           ;	DEBUG = 0x1, unprogramme  1478     2007                     	org	8199
  1479     2007  20D4               	dw	8404
  1480                           
  1481                           ;Config register CONFIG2 @ 0x2008
  1482                           ;	Brown-out Reset Selection bit
  1483                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1484                           ;	Flash Program Memory Self Write Enable bits
  1485                           ;	WRT = OFF, Write protection off
  1486     2008                     	org	8200
  1487     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     435
                            _readADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     405
                           _setupADC
                        _setupINTOSC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      15
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             2     2      0      30
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              3     3      0      30
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _readADC
   _setup
     _setupADC
     _setupINTOSC
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 01:16:12 2023

                      l5 00F7              _SSPSTATbits 0094                       l21 00D6  
                     l22 00DB                       l60 0024                       l62 0028  
                     l55 006A                       l64 0044                       l56 007E  
                     l66 0048                       l67 0052                       u30 0059  
                     u31 0058                       u40 0064                       u41 0063  
                     u50 0019                       u51 0018                       u60 0028  
                     u61 0027                       u70 0037                       u71 0036  
                     u80 0048                       u81 0047                      l122 00A7  
                    l116 00E1                      l800 00C7                      l730 0054  
                    l714 00EC                      l802 00CE                      l810 007F  
                    l732 0059                      l716 00F6                      l804 00D0  
                    l820 0091                      l812 008B                      l750 0019  
                    l734 005F                      l806 00D2                      l822 0092  
                    l814 008C                      l760 0037                      l752 001D  
                    l736 0064                      l808 00D5                      l824 0098  
                    l816 008D                      l762 003D                      l754 0021  
                    l738 007A                      l826 009E                      l818 008E  
                    l764 0041                      l756 0029                      l748 0014  
                    l828 00DC                      l766 0049                      l758 0032  
                    u100 00CE                      u101 00CD                      u117 007C  
                    u127 001F                      u137 002D                      u147 003F  
                    u157 004D                      _isr 00A8                     _ADIF 0066  
                   ?_isr 0070                     i1l31 010D                     i1l25 0101  
                   i1l28 0107                     i1l39 0100                     u2_20 0107  
                   u2_21 0106                     u9_20 00AE                     u9_21 00AD  
                   _main 00DC                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l111 00BF                    i1l740 0109                    i1l742 00F8  
                  i1l728 0101                    i1l744 00FD                    i1l792 00A8  
                  i1l794 00AE                    i1l796 00BC                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _SSPIF 0063          __end_of_readADC 0053                    _setup 007F  
                  pclath 000A          __end_of_spiInit 00DC          __end_of_spiRead 0101  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00EB                   ??_main 0077                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
           readADC@canal 0075             ?_setupINTOSC 0070                ??_readADC 0073  
       __end_of_setupADC 007F                   saved_w 007E         __end_of_spiWrite 010E  
              ??_spiInit 0076                ??_spiRead 0070  __end_of__initialization 000F  
         __pcstackCOMMON 0070            __end_of_setup 00A8                  ??_setup 0077  
             __pmaintext 00DC               __pintentry 0004                  _SSPSTAT 0094  
              ?_setupADC 0070                ?_spiWrite 0070                _ANSELbits 0188  
                __ptext1 007F                  __ptext2 00C6                  __ptext3 00EB  
                __ptext4 0053                  __ptext5 0013                  __ptext6 00A8  
                __ptext7 0108                  __ptext8 00F8                  __ptext9 0101  
                _readADC 0013                  _spiInit 00C6                  _spiRead 00F8  
   end_of_initialization 000F               ??_setupADC 0073               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070           _spiReceiveWait 0101  
    start_initialization 000F              __end_of_isr 00C6   __end_of_spiReceiveWait 0108  
              ___latbits 0002          ?_spiReceiveWait 0070                 ?_readADC 0070  
               ?_spiInit 0073                 ?_spiRead 0070     spiInit@sTransmitEdge 0075  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0073  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
          ??_setupINTOSC 0073      __end_of_setupINTOSC 00F8            setupADC@canal 0074  
               _setupADC 0053                 _spiWrite 0108             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F              _setupINTOSC 00EB  
           setupINTOSC@F 0074  
