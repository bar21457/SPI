

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 06 00:04:48 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0105                     	;# 
   124     0107                     	;# 
   125     0108                     	;# 
   126     0109                     	;# 
   127     010C                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     0185                     	;# 
   133     0187                     	;# 
   134     0188                     	;# 
   135     0189                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0095                     	;# 
   191     0096                     	;# 
   192     0097                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009A                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     0105                     	;# 
   202     0107                     	;# 
   203     0108                     	;# 
   204     0109                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     0185                     	;# 
   211     0187                     	;# 
   212     0188                     	;# 
   213     0189                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216     0000                     	;# 
   217     0001                     	;# 
   218     0002                     	;# 
   219     0003                     	;# 
   220     0004                     	;# 
   221     0005                     	;# 
   222     0006                     	;# 
   223     0007                     	;# 
   224     0008                     	;# 
   225     0009                     	;# 
   226     000A                     	;# 
   227     000B                     	;# 
   228     000C                     	;# 
   229     000D                     	;# 
   230     000E                     	;# 
   231     000E                     	;# 
   232     000F                     	;# 
   233     0010                     	;# 
   234     0011                     	;# 
   235     0012                     	;# 
   236     0013                     	;# 
   237     0014                     	;# 
   238     0015                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0017                     	;# 
   242     0018                     	;# 
   243     0019                     	;# 
   244     001A                     	;# 
   245     001B                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001D                     	;# 
   249     001E                     	;# 
   250     001F                     	;# 
   251     0081                     	;# 
   252     0085                     	;# 
   253     0086                     	;# 
   254     0087                     	;# 
   255     0088                     	;# 
   256     0089                     	;# 
   257     008C                     	;# 
   258     008D                     	;# 
   259     008E                     	;# 
   260     008F                     	;# 
   261     0090                     	;# 
   262     0091                     	;# 
   263     0092                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0093                     	;# 
   267     0094                     	;# 
   268     0095                     	;# 
   269     0096                     	;# 
   270     0097                     	;# 
   271     0098                     	;# 
   272     0099                     	;# 
   273     009A                     	;# 
   274     009B                     	;# 
   275     009C                     	;# 
   276     009D                     	;# 
   277     009E                     	;# 
   278     009F                     	;# 
   279     0105                     	;# 
   280     0107                     	;# 
   281     0108                     	;# 
   282     0109                     	;# 
   283     010C                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     0185                     	;# 
   289     0187                     	;# 
   290     0188                     	;# 
   291     0189                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294     0000                     	;# 
   295     0001                     	;# 
   296     0002                     	;# 
   297     0003                     	;# 
   298     0004                     	;# 
   299     0005                     	;# 
   300     0006                     	;# 
   301     0007                     	;# 
   302     0008                     	;# 
   303     0009                     	;# 
   304     000A                     	;# 
   305     000B                     	;# 
   306     000C                     	;# 
   307     000D                     	;# 
   308     000E                     	;# 
   309     000E                     	;# 
   310     000F                     	;# 
   311     0010                     	;# 
   312     0011                     	;# 
   313     0012                     	;# 
   314     0013                     	;# 
   315     0014                     	;# 
   316     0015                     	;# 
   317     0015                     	;# 
   318     0016                     	;# 
   319     0017                     	;# 
   320     0018                     	;# 
   321     0019                     	;# 
   322     001A                     	;# 
   323     001B                     	;# 
   324     001B                     	;# 
   325     001C                     	;# 
   326     001D                     	;# 
   327     001E                     	;# 
   328     001F                     	;# 
   329     0081                     	;# 
   330     0085                     	;# 
   331     0086                     	;# 
   332     0087                     	;# 
   333     0088                     	;# 
   334     0089                     	;# 
   335     008C                     	;# 
   336     008D                     	;# 
   337     008E                     	;# 
   338     008F                     	;# 
   339     0090                     	;# 
   340     0091                     	;# 
   341     0092                     	;# 
   342     0093                     	;# 
   343     0093                     	;# 
   344     0093                     	;# 
   345     0094                     	;# 
   346     0095                     	;# 
   347     0096                     	;# 
   348     0097                     	;# 
   349     0098                     	;# 
   350     0099                     	;# 
   351     009A                     	;# 
   352     009B                     	;# 
   353     009C                     	;# 
   354     009D                     	;# 
   355     009E                     	;# 
   356     009F                     	;# 
   357     0105                     	;# 
   358     0107                     	;# 
   359     0108                     	;# 
   360     0109                     	;# 
   361     010C                     	;# 
   362     010C                     	;# 
   363     010D                     	;# 
   364     010E                     	;# 
   365     010F                     	;# 
   366     0185                     	;# 
   367     0187                     	;# 
   368     0188                     	;# 
   369     0189                     	;# 
   370     018C                     	;# 
   371     018D                     	;# 
   372     0000                     	;# 
   373     0001                     	;# 
   374     0002                     	;# 
   375     0003                     	;# 
   376     0004                     	;# 
   377     0005                     	;# 
   378     0006                     	;# 
   379     0007                     	;# 
   380     0008                     	;# 
   381     0009                     	;# 
   382     000A                     	;# 
   383     000B                     	;# 
   384     000C                     	;# 
   385     000D                     	;# 
   386     000E                     	;# 
   387     000E                     	;# 
   388     000F                     	;# 
   389     0010                     	;# 
   390     0011                     	;# 
   391     0012                     	;# 
   392     0013                     	;# 
   393     0014                     	;# 
   394     0015                     	;# 
   395     0015                     	;# 
   396     0016                     	;# 
   397     0017                     	;# 
   398     0018                     	;# 
   399     0019                     	;# 
   400     001A                     	;# 
   401     001B                     	;# 
   402     001B                     	;# 
   403     001C                     	;# 
   404     001D                     	;# 
   405     001E                     	;# 
   406     001F                     	;# 
   407     0081                     	;# 
   408     0085                     	;# 
   409     0086                     	;# 
   410     0087                     	;# 
   411     0088                     	;# 
   412     0089                     	;# 
   413     008C                     	;# 
   414     008D                     	;# 
   415     008E                     	;# 
   416     008F                     	;# 
   417     0090                     	;# 
   418     0091                     	;# 
   419     0092                     	;# 
   420     0093                     	;# 
   421     0093                     	;# 
   422     0093                     	;# 
   423     0094                     	;# 
   424     0095                     	;# 
   425     0096                     	;# 
   426     0097                     	;# 
   427     0098                     	;# 
   428     0099                     	;# 
   429     009A                     	;# 
   430     009B                     	;# 
   431     009C                     	;# 
   432     009D                     	;# 
   433     009E                     	;# 
   434     009F                     	;# 
   435     0105                     	;# 
   436     0107                     	;# 
   437     0108                     	;# 
   438     0109                     	;# 
   439     010C                     	;# 
   440     010C                     	;# 
   441     010D                     	;# 
   442     010E                     	;# 
   443     010F                     	;# 
   444     0185                     	;# 
   445     0187                     	;# 
   446     0188                     	;# 
   447     0189                     	;# 
   448     018C                     	;# 
   449     018D                     	;# 
   450     000C                     _PIR1bits	set	12
   451     0006                     _PORTB	set	6
   452     0009                     _PORTE	set	9
   453     0008                     _PORTD	set	8
   454     0006                     _PORTBbits	set	6
   455     000B                     _INTCONbits	set	11
   456     001E                     _ADRESH	set	30
   457     0013                     _SSPBUF	set	19
   458     0014                     _SSPCON	set	20
   459     001F                     _ADCON0bits	set	31
   460     0063                     _SSPIF	set	99
   461     0066                     _ADIF	set	102
   462     008C                     _PIE1bits	set	140
   463     0096                     _IOCB	set	150
   464     0095                     _WPUBbits	set	149
   465     0081                     _OPTION_REGbits	set	129
   466     0089                     _TRISE	set	137
   467     0088                     _TRISD	set	136
   468     0086                     _TRISB	set	134
   469     0094                     _SSPSTATbits	set	148
   470     0094                     _SSPSTAT	set	148
   471     008F                     _OSCCONbits	set	143
   472     009F                     _ADCON1bits	set	159
   473     0085                     _TRISAbits	set	133
   474     043B                     _TRISC3	set	1083
   475     043D                     _TRISC5	set	1085
   476     0189                     _ANSELH	set	393
   477     0188                     _ANSEL	set	392
   478     0188                     _ANSELbits	set	392
   479                           
   480                           	psect	cinit
   481     000F                     start_initialization:	
   482                           ; #config settings
   483                           
   484     000F                     __initialization:
   485                           
   486                           ; Clear objects allocated to COMMON
   487     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   488     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   489     0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   490                           
   491                           ; Clear objects allocated to BANK0
   492     0012  1283               	bcf	3,5	;RP0=0, select bank0
   493     0013  1303               	bcf	3,6	;RP1=0, select bank0
   494     0014  01A4               	clrf	__pbssBANK0& (0+127)
   495     0015  01A5               	clrf	(__pbssBANK0+1)& (0+127)
   496     0016                     end_of_initialization:	
   497                           ;End of C runtime variable initialization code
   498                           
   499     0016                     __end_of__initialization:
   500     0016  0183               	clrf	3
   501     0017  120A  118A  29D9   	ljmp	_main	;jump to C main() function
   502                           
   503                           	psect	bssCOMMON
   504     0077                     __pbssCOMMON:
   505     0077                     _FLAG_B:
   506     0077                     	ds	2
   507     0079                     _VAL_READ:
   508     0079                     	ds	1
   509                           
   510                           	psect	bssBANK0
   511     0024                     __pbssBANK0:
   512     0024                     _CONT:
   513     0024                     	ds	2
   514                           
   515                           	psect	cstackCOMMON
   516     0070                     __pcstackCOMMON:
   517     0070                     ?_setup:
   518     0070                     ?_setupADC:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ?_readADC:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_setupINTOSC:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?_spiReceiveWait:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ??_spiReceiveWait:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_spiWrite:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ??_spiWrite:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_spiRead:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ??_spiRead:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_isr:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_main:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?i1_readADC:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ??i1_readADC:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     spiWrite@dat:	
   558                           ; 1 bytes @ 0x0
   559                           
   560                           
   561                           ; 1 bytes @ 0x0
   562     0070                     	ds	2
   563     0072                     i1readADC@canal:
   564                           
   565                           ; 1 bytes @ 0x2
   566     0072                     	ds	1
   567     0073                     ??_isr:
   568                           
   569                           ; 1 bytes @ 0x3
   570     0073                     	ds	4
   571                           
   572                           	psect	cstackBANK0
   573     0020                     __pcstackBANK0:
   574     0020                     ??_setupADC:
   575     0020                     ??_readADC:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0020                     ??_setupINTOSC:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0020                     ?_spiInit:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0020                     spiInit@sDataSample:	
   585                           ; 1 bytes @ 0x0
   586                           
   587                           
   588                           ; 1 bytes @ 0x0
   589     0020                     	ds	1
   590     0021                     setupADC@canal:
   591     0021                     setupINTOSC@F:	
   592                           ; 1 bytes @ 0x1
   593                           
   594     0021                     spiInit@sClockIdle:	
   595                           ; 1 bytes @ 0x1
   596                           
   597                           
   598                           ; 1 bytes @ 0x1
   599     0021                     	ds	1
   600     0022                     readADC@canal:
   601     0022                     spiInit@sTransmitEdge:	
   602                           ; 1 bytes @ 0x2
   603                           
   604                           
   605                           ; 1 bytes @ 0x2
   606     0022                     	ds	1
   607     0023                     ??_spiInit:
   608     0023                     spiInit@sType:	
   609                           ; 1 bytes @ 0x3
   610                           
   611                           
   612                           ; 1 bytes @ 0x3
   613     0023                     	ds	1
   614     0024                     ??_setup:
   615     0024                     ??_main:	
   616                           ; 1 bytes @ 0x4
   617                           
   618                           
   619                           	psect	maintext
   620     01D9                     __pmaintext:	
   621                           ; 1 bytes @ 0x4
   622 ;;
   623 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   624 ;;
   625 ;; *************** function _main *****************
   626 ;; Defined at:
   627 ;;		line 108 in file "main_S2.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : B00/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels required when called: 5
   647 ;; This function calls:
   648 ;;		_readADC
   649 ;;		_setup
   650 ;; This function is called by:
   651 ;;		Startup code after reset
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655     01D9                     _main:	
   656                           ;psect for function _main
   657                           
   658     01D9                     l1137:	
   659                           ;incstack = 0
   660                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   661                           
   662                           
   663                           ;main_S2.c: 110:     setup();
   664     01D9  120A  118A  214F  120A  118A  	fcall	_setup
   665     01DE                     l143:	
   666                           ;main_S2.c: 112:     while(1)
   667                           
   668                           
   669                           ;main_S2.c: 113:     {;main_S2.c: 114:        readADC(0);
   670     01DE  3000               	movlw	0
   671     01DF  120A  118A  20C7  120A  118A  	fcall	_readADC
   672     01E4                     l1139:
   673                           
   674                           ;main_S2.c: 115:        PORTD = ADRESH;
   675     01E4  1283               	bcf	3,5	;RP0=0, select bank0
   676     01E5  1303               	bcf	3,6	;RP1=0, select bank0
   677     01E6  081E               	movf	30,w	;volatile
   678     01E7  0088               	movwf	8	;volatile
   679     01E8                     l1141:
   680                           
   681                           ;main_S2.c: 116:        PORTE = CONT;
   682     01E8  0824               	movf	_CONT,w
   683     01E9  0089               	movwf	9	;volatile
   684     01EA  29DE               	goto	l143
   685     01EB  120A  118A  280C   	ljmp	start
   686     01EE                     __end_of_main:
   687                           
   688                           	psect	text1
   689     014F                     __ptext1:	
   690 ;; *************** function _setup *****************
   691 ;; Defined at:
   692 ;;		line 124 in file "main_S2.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0, pclath, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   706 ;;      Params:         0       0       0       0       0
   707 ;;      Locals:         0       0       0       0       0
   708 ;;      Temps:          0       0       0       0       0
   709 ;;      Totals:         0       0       0       0       0
   710 ;;Total ram usage:        0 bytes
   711 ;; Hardware stack levels used: 1
   712 ;; Hardware stack levels required when called: 4
   713 ;; This function calls:
   714 ;;		_setupADC
   715 ;;		_setupINTOSC
   716 ;;		_spiInit
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722     014F                     _setup:	
   723                           ;psect for function _setup
   724                           
   725     014F                     l1097:	
   726                           ;incstack = 0
   727                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   728                           
   729                           
   730                           ;main_S2.c: 126:     ANSEL = 0;
   731     014F  1683               	bsf	3,5	;RP0=1, select bank3
   732     0150  1703               	bsf	3,6	;RP1=1, select bank3
   733     0151  0188               	clrf	8	;volatile
   734                           
   735                           ;main_S2.c: 127:     ANSELH = 0;
   736     0152  0189               	clrf	9	;volatile
   737     0153                     l1099:
   738                           
   739                           ;main_S2.c: 129:     TRISB = 0b00000011;
   740     0153  3003               	movlw	3
   741     0154  1683               	bsf	3,5	;RP0=1, select bank1
   742     0155  1303               	bcf	3,6	;RP1=0, select bank1
   743     0156  0086               	movwf	6	;volatile
   744     0157                     l1101:
   745                           
   746                           ;main_S2.c: 130:     TRISD = 0;
   747     0157  0188               	clrf	8	;volatile
   748     0158                     l1103:
   749                           
   750                           ;main_S2.c: 131:     TRISE = 0;
   751     0158  0189               	clrf	9	;volatile
   752     0159                     l1105:
   753                           
   754                           ;main_S2.c: 133:     PORTB = 0;
   755     0159  1283               	bcf	3,5	;RP0=0, select bank0
   756     015A  1303               	bcf	3,6	;RP1=0, select bank0
   757     015B  0186               	clrf	6	;volatile
   758     015C                     l1107:
   759                           
   760                           ;main_S2.c: 134:     PORTD = 0;
   761     015C  0188               	clrf	8	;volatile
   762     015D                     l1109:
   763                           
   764                           ;main_S2.c: 135:     PORTE = 0;
   765     015D  0189               	clrf	9	;volatile
   766     015E                     l1111:
   767                           
   768                           ;main_S2.c: 137:     OPTION_REGbits.nRBPU = 0;
   769     015E  1683               	bsf	3,5	;RP0=1, select bank1
   770     015F  1303               	bcf	3,6	;RP1=0, select bank1
   771     0160  1381               	bcf	1,7	;volatile
   772     0161                     l1113:
   773                           
   774                           ;main_S2.c: 138:     WPUBbits.WPUB0 = 1;
   775     0161  1415               	bsf	21,0	;volatile
   776     0162                     l1115:
   777                           
   778                           ;main_S2.c: 139:     WPUBbits.WPUB1 = 1;
   779     0162  1495               	bsf	21,1	;volatile
   780                           
   781                           ;main_S2.c: 140:     IOCB = 0b00000011;
   782     0163  3003               	movlw	3
   783     0164  0096               	movwf	22	;volatile
   784     0165                     l1117:
   785                           
   786                           ;main_S2.c: 143:     INTCONbits.GIE = 1;
   787     0165  178B               	bsf	11,7	;volatile
   788     0166                     l1119:
   789                           
   790                           ;main_S2.c: 144:     INTCONbits.PEIE = 1;
   791     0166  170B               	bsf	11,6	;volatile
   792     0167                     l1121:
   793                           
   794                           ;main_S2.c: 145:     INTCONbits.RBIE = 1;
   795     0167  158B               	bsf	11,3	;volatile
   796     0168                     l1123:
   797                           
   798                           ;main_S2.c: 146:     INTCONbits.RBIF = 0;
   799     0168  100B               	bcf	11,0	;volatile
   800     0169                     l1125:
   801                           
   802                           ;main_S2.c: 147:     PIR1bits.SSPIF = 0;
   803     0169  1283               	bcf	3,5	;RP0=0, select bank0
   804     016A  1303               	bcf	3,6	;RP1=0, select bank0
   805     016B  118C               	bcf	12,3	;volatile
   806     016C                     l1127:
   807                           
   808                           ;main_S2.c: 148:     PIE1bits.SSPIE = 1;
   809     016C  1683               	bsf	3,5	;RP0=1, select bank1
   810     016D  1303               	bcf	3,6	;RP1=0, select bank1
   811     016E  158C               	bsf	12,3	;volatile
   812     016F                     l1129:
   813                           
   814                           ;main_S2.c: 150:     TRISAbits.TRISA5 = 1;
   815     016F  1685               	bsf	5,5	;volatile
   816     0170                     l1131:
   817                           
   818                           ;main_S2.c: 152:     setupINTOSC(FOSC_4MHZ);
   819     0170  3006               	movlw	6
   820     0171  120A  118A  21EE  120A  118A  	fcall	_setupINTOSC
   821     0176                     l1133:
   822                           
   823                           ;main_S2.c: 153:     setupADC(0);
   824     0176  3000               	movlw	0
   825     0177  120A  118A  2188  120A  118A  	fcall	_setupADC
   826     017C                     l1135:
   827                           
   828                           ;main_S2.c: 155:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   829     017C  1283               	bcf	3,5	;RP0=0, select bank0
   830     017D  1303               	bcf	3,6	;RP1=0, select bank0
   831     017E  01A0               	clrf	spiInit@sDataSample
   832     017F  01A1               	clrf	spiInit@sClockIdle
   833     0180  01A2               	clrf	spiInit@sTransmitEdge
   834     0181  3024               	movlw	36
   835     0182  120A  118A  21BB  120A  118A  	fcall	_spiInit
   836     0187                     l149:
   837     0187  0008               	return
   838     0188                     __end_of_setup:
   839                           
   840                           	psect	text2
   841     01BB                     __ptext2:	
   842 ;; *************** function _spiInit *****************
   843 ;; Defined at:
   844 ;;		line 12 in file "configSPI.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  sType           1    wreg     enum E1292
   847 ;;  sDataSample     1    0[BANK0 ] enum E1300
   848 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   849 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  sType           1    3[BANK0 ] enum E1292
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       3       0       0       0
   862 ;;      Locals:         0       1       0       0       0
   863 ;;      Temps:          0       0       0       0       0
   864 ;;      Totals:         0       4       0       0       0
   865 ;;Total ram usage:        4 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; Hardware stack levels required when called: 3
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_setup
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875     01BB                     _spiInit:	
   876                           ;psect for function _spiInit
   877                           
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   881                           ;spiInit@sType stored from wreg
   882     01BB  1283               	bcf	3,5	;RP0=0, select bank0
   883     01BC  1303               	bcf	3,6	;RP1=0, select bank0
   884     01BD  00A3               	movwf	spiInit@sType
   885     01BE                     l1087:
   886                           
   887                           ;configSPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);configSPI.c: 13: {;configSPI.c: 14:     
      +                          TRISC5 = 0;
   888     01BE  1683               	bsf	3,5	;RP0=1, select bank1
   889     01BF  1303               	bcf	3,6	;RP1=0, select bank1
   890     01C0  1287               	bcf	7,5	;volatile
   891                           
   892                           ;configSPI.c: 15:     if(sType & 0b00000100)
   893     01C1  1283               	bcf	3,5	;RP0=0, select bank0
   894     01C2  1303               	bcf	3,6	;RP1=0, select bank0
   895     01C3  1D23               	btfss	spiInit@sType,2
   896     01C4  29C6               	goto	u431
   897     01C5  29C7               	goto	u430
   898     01C6                     u431:
   899     01C6  29CD               	goto	l1093
   900     01C7                     u430:
   901     01C7                     l1089:
   902                           
   903                           ;configSPI.c: 16:     {;configSPI.c: 17:         SSPSTAT = sTransmitEdge;
   904     01C7  0822               	movf	spiInit@sTransmitEdge,w
   905     01C8  1683               	bsf	3,5	;RP0=1, select bank1
   906     01C9  1303               	bcf	3,6	;RP1=0, select bank1
   907     01CA  0094               	movwf	20	;volatile
   908     01CB                     l1091:
   909                           
   910                           ;configSPI.c: 18:         TRISC3 = 1;
   911     01CB  1587               	bsf	7,3	;volatile
   912                           
   913                           ;configSPI.c: 19:     }
   914     01CC  29D3               	goto	l49
   915     01CD                     l1093:
   916                           
   917                           ;configSPI.c: 21:     {;configSPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   918     01CD  0820               	movf	spiInit@sDataSample,w
   919     01CE  0422               	iorwf	spiInit@sTransmitEdge,w
   920     01CF  1683               	bsf	3,5	;RP0=1, select bank1
   921     01D0  1303               	bcf	3,6	;RP1=0, select bank1
   922     01D1  0094               	movwf	20	;volatile
   923     01D2                     l1095:
   924                           
   925                           ;configSPI.c: 23:         TRISC3 = 0;
   926     01D2  1187               	bcf	7,3	;volatile
   927     01D3                     l49:	
   928                           ;configSPI.c: 24:     }
   929                           
   930                           
   931                           ;configSPI.c: 26:     SSPCON = sType | sClockIdle;
   932     01D3  1283               	bcf	3,5	;RP0=0, select bank0
   933     01D4  1303               	bcf	3,6	;RP1=0, select bank0
   934     01D5  0823               	movf	spiInit@sType,w
   935     01D6  0421               	iorwf	spiInit@sClockIdle,w
   936     01D7  0094               	movwf	20	;volatile
   937     01D8                     l50:
   938     01D8  0008               	return
   939     01D9                     __end_of_spiInit:
   940                           
   941                           	psect	text3
   942     01EE                     __ptext3:	
   943 ;; *************** function _setupINTOSC *****************
   944 ;; Defined at:
   945 ;;		line 11 in file "configINTOSC.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  F               1    wreg     enum E1292
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  F               1    1[BANK0 ] enum E1292
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0       1       0       0       0
   961 ;;      Temps:          0       1       0       0       0
   962 ;;      Totals:         0       2       0       0       0
   963 ;;Total ram usage:        2 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 3
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_setup
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973     01EE                     _setupINTOSC:	
   974                           ;psect for function _setupINTOSC
   975                           
   976                           
   977                           ;incstack = 0
   978                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   979                           ;setupINTOSC@F stored from wreg
   980     01EE  1283               	bcf	3,5	;RP0=0, select bank0
   981     01EF  1303               	bcf	3,6	;RP1=0, select bank0
   982     01F0  00A1               	movwf	setupINTOSC@F
   983     01F1                     l927:
   984                           
   985                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
   986     01F1  0821               	movf	setupINTOSC@F,w
   987     01F2  00A0               	movwf	??_setupINTOSC
   988     01F3  0EA0               	swapf	??_setupINTOSC,f
   989     01F4  1683               	bsf	3,5	;RP0=1, select bank1
   990     01F5  1303               	bcf	3,6	;RP1=0, select bank1
   991     01F6  080F               	movf	15,w	;volatile
   992     01F7  1283               	bcf	3,5	;RP0=0, select bank0
   993     01F8  1303               	bcf	3,6	;RP1=0, select bank0
   994     01F9  0620               	xorwf	??_setupINTOSC,w
   995     01FA  398F               	andlw	-113
   996     01FB  0620               	xorwf	??_setupINTOSC,w
   997     01FC  1683               	bsf	3,5	;RP0=1, select bank1
   998     01FD  1303               	bcf	3,6	;RP1=0, select bank1
   999     01FE  008F               	movwf	15	;volatile
  1000     01FF                     l929:
  1001                           
  1002                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  1003     01FF  140F               	bsf	15,0	;volatile
  1004     0200                     l33:
  1005     0200  0008               	return
  1006     0201                     __end_of_setupINTOSC:
  1007                           
  1008                           	psect	text4
  1009     0188                     __ptext4:	
  1010 ;; *************** function _setupADC *****************
  1011 ;; Defined at:
  1012 ;;		line 13 in file "configADC.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  canal           1    wreg     unsigned char 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  canal           1    1[BANK0 ] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       1       0       0       0
  1028 ;;      Temps:          0       1       0       0       0
  1029 ;;      Totals:         0       2       0       0       0
  1030 ;;Total ram usage:        2 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 3
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_setup
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040     0188                     _setupADC:	
  1041                           ;psect for function _setupADC
  1042                           
  1043                           
  1044                           ;incstack = 0
  1045                           ; Regs used in _setupADC: [wreg+status,2+status,0]
  1046                           ;setupADC@canal stored from wreg
  1047     0188  1283               	bcf	3,5	;RP0=0, select bank0
  1048     0189  1303               	bcf	3,6	;RP1=0, select bank0
  1049     018A  00A1               	movwf	setupADC@canal
  1050     018B                     l917:
  1051                           
  1052                           ;configADC.c: 17:     if(canal == 0)
  1053     018B  0821               	movf	setupADC@canal,w
  1054     018C  1D03               	btfss	3,2
  1055     018D  298F               	goto	u221
  1056     018E  2990               	goto	u220
  1057     018F                     u221:
  1058     018F  2996               	goto	l921
  1059     0190                     u220:
  1060     0190                     l919:
  1061                           
  1062                           ;configADC.c: 18:     {;configADC.c: 19:     TRISAbits.TRISA0 = 1;
  1063     0190  1683               	bsf	3,5	;RP0=1, select bank1
  1064     0191  1303               	bcf	3,6	;RP1=0, select bank1
  1065     0192  1405               	bsf	5,0	;volatile
  1066                           
  1067                           ;configADC.c: 20:     ANSELbits.ANS0 = 1;
  1068     0193  1683               	bsf	3,5	;RP0=1, select bank3
  1069     0194  1703               	bsf	3,6	;RP1=1, select bank3
  1070     0195  1408               	bsf	8,0	;volatile
  1071     0196                     l921:
  1072                           
  1073                           ;configADC.c: 23:     if(canal == 1)
  1074     0196  1283               	bcf	3,5	;RP0=0, select bank0
  1075     0197  1303               	bcf	3,6	;RP1=0, select bank0
  1076     0198  0321               	decf	setupADC@canal,w
  1077     0199  1D03               	btfss	3,2
  1078     019A  299C               	goto	u231
  1079     019B  299D               	goto	u230
  1080     019C                     u231:
  1081     019C  29A3               	goto	l16
  1082     019D                     u230:
  1083     019D                     l923:
  1084                           
  1085                           ;configADC.c: 24:     {;configADC.c: 25:     TRISAbits.TRISA1 = 1;
  1086     019D  1683               	bsf	3,5	;RP0=1, select bank1
  1087     019E  1303               	bcf	3,6	;RP1=0, select bank1
  1088     019F  1485               	bsf	5,1	;volatile
  1089                           
  1090                           ;configADC.c: 26:     ANSELbits.ANS1 = 1;
  1091     01A0  1683               	bsf	3,5	;RP0=1, select bank3
  1092     01A1  1703               	bsf	3,6	;RP1=1, select bank3
  1093     01A2  1488               	bsf	8,1	;volatile
  1094     01A3                     l16:	
  1095                           ;configADC.c: 27:     }
  1096                           
  1097                           
  1098                           ;configADC.c: 31:     ADCON0bits.ADCS0 = 1;
  1099     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1100     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1101     01A5  171F               	bsf	31,6	;volatile
  1102                           
  1103                           ;configADC.c: 32:     ADCON0bits.ADCS1 = 0;
  1104     01A6  139F               	bcf	31,7	;volatile
  1105                           
  1106                           ;configADC.c: 34:     ADCON1bits.VCFG0 = 0;
  1107     01A7  1683               	bsf	3,5	;RP0=1, select bank1
  1108     01A8  1303               	bcf	3,6	;RP1=0, select bank1
  1109     01A9  121F               	bcf	31,4	;volatile
  1110                           
  1111                           ;configADC.c: 35:     ADCON1bits.VCFG1 = 0;
  1112     01AA  129F               	bcf	31,5	;volatile
  1113                           
  1114                           ;configADC.c: 37:     ADCON1bits.ADFM = 0;
  1115     01AB  139F               	bcf	31,7	;volatile
  1116                           
  1117                           ;configADC.c: 39:     ADCON0bits.CHS0 = 0;
  1118     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1119     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1120     01AE  111F               	bcf	31,2	;volatile
  1121                           
  1122                           ;configADC.c: 40:     ADCON0bits.CHS1 = 0;
  1123     01AF  119F               	bcf	31,3	;volatile
  1124                           
  1125                           ;configADC.c: 41:     ADCON0bits.CHS2 = 0;
  1126     01B0  121F               	bcf	31,4	;volatile
  1127                           
  1128                           ;configADC.c: 42:     ADCON0bits.CHS3 = 0;
  1129     01B1  129F               	bcf	31,5	;volatile
  1130                           
  1131                           ;configADC.c: 44:     ADCON0bits.ADON = 1;
  1132     01B2  141F               	bsf	31,0	;volatile
  1133     01B3                     l925:
  1134                           
  1135                           ;configADC.c: 46:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1136     01B3  3020               	movlw	32
  1137     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1138     01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1139     01B6  00A0               	movwf	??_setupADC
  1140     01B7                     u447:
  1141     01B7  0BA0               	decfsz	??_setupADC,f
  1142     01B8  29B7               	goto	u447
  1143     01B9  0000               	nop
  1144     01BA                     l17:
  1145     01BA  0008               	return
  1146     01BB                     __end_of_setupADC:
  1147                           
  1148                           	psect	text5
  1149     00C7                     __ptext5:	
  1150 ;; *************** function _readADC *****************
  1151 ;; Defined at:
  1152 ;;		line 49 in file "configADC.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  canal           1    wreg     unsigned char 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  canal           1    2[BANK0 ] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       1       0       0       0
  1168 ;;      Temps:          0       2       0       0       0
  1169 ;;      Totals:         0       3       0       0       0
  1170 ;;Total ram usage:        3 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; Hardware stack levels required when called: 3
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180     00C7                     _readADC:	
  1181                           ;psect for function _readADC
  1182                           
  1183                           
  1184                           ;incstack = 0
  1185                           ; Regs used in _readADC: [wreg+status,2+status,0]
  1186                           ;readADC@canal stored from wreg
  1187     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1188     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1189     00C9  00A2               	movwf	readADC@canal
  1190     00CA                     l943:
  1191                           
  1192                           ;configADC.c: 51:     if(canal == 0)
  1193     00CA  0822               	movf	readADC@canal,w
  1194     00CB  1D03               	btfss	3,2
  1195     00CC  28CE               	goto	u261
  1196     00CD  28CF               	goto	u260
  1197     00CE                     u261:
  1198     00CE  28EA               	goto	l953
  1199     00CF                     u260:
  1200     00CF                     l945:
  1201                           
  1202                           ;configADC.c: 52:     {;configADC.c: 53:     ADCON0bits.CHS = 0b0000;
  1203     00CF  30C3               	movlw	-61
  1204     00D0  059F               	andwf	31,f	;volatile
  1205     00D1                     l947:
  1206                           
  1207                           ;configADC.c: 55:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1208     00D1  3020               	movlw	32
  1209     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1210     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1211     00D4  00A0               	movwf	??_readADC
  1212     00D5                     u457:
  1213     00D5  0BA0               	decfsz	??_readADC,f
  1214     00D6  28D5               	goto	u457
  1215     00D7  0000               	nop
  1216     00D8                     l949:
  1217                           
  1218                           ;configADC.c: 57:     ADCON0bits.GO = 1;
  1219     00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1220     00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1221     00DA  149F               	bsf	31,1	;volatile
  1222     00DB                     l21:	
  1223                           ;configADC.c: 58:     while (ADCON0bits.GO == 1){};
  1224                           
  1225     00DB  189F               	btfsc	31,1	;volatile
  1226     00DC  28DE               	goto	u271
  1227     00DD  28DF               	goto	u270
  1228     00DE                     u271:
  1229     00DE  28DB               	goto	l21
  1230     00DF                     u270:
  1231     00DF                     l23:
  1232                           
  1233                           ;configADC.c: 59:     ADIF = 0;
  1234     00DF  130C               	bcf	12,6	;volatile
  1235     00E0                     l951:
  1236                           
  1237                           ;configADC.c: 60:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1238     00E0  300D               	movlw	13
  1239     00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1240     00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1241     00E3  00A1               	movwf	??_readADC+1
  1242     00E4  30FB               	movlw	251
  1243     00E5  00A0               	movwf	??_readADC
  1244     00E6                     u467:
  1245     00E6  0BA0               	decfsz	??_readADC,f
  1246     00E7  28E6               	goto	u467
  1247     00E8  0BA1               	decfsz	??_readADC+1,f
  1248     00E9  28E6               	goto	u467
  1249     00EA                     l953:
  1250                           
  1251                           ;configADC.c: 63:     if(canal == 1)
  1252     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1253     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1254     00EC  0322               	decf	readADC@canal,w
  1255     00ED  1D03               	btfss	3,2
  1256     00EE  28F0               	goto	u281
  1257     00EF  28F1               	goto	u280
  1258     00F0                     u281:
  1259     00F0  290E               	goto	l28
  1260     00F1                     u280:
  1261     00F1                     l955:
  1262                           
  1263                           ;configADC.c: 64:     {;configADC.c: 65:     ADCON0bits.CHS = 0b0001;
  1264     00F1  081F               	movf	31,w	;volatile
  1265     00F2  39C3               	andlw	-61
  1266     00F3  3804               	iorlw	4
  1267     00F4  009F               	movwf	31	;volatile
  1268     00F5                     l957:
  1269                           
  1270                           ;configADC.c: 67:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1271     00F5  3020               	movlw	32
  1272     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1273     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1274     00F8  00A0               	movwf	??_readADC
  1275     00F9                     u477:
  1276     00F9  0BA0               	decfsz	??_readADC,f
  1277     00FA  28F9               	goto	u477
  1278     00FB  0000               	nop
  1279     00FC                     l959:
  1280                           
  1281                           ;configADC.c: 69:     ADCON0bits.GO = 1;
  1282     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1283     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1284     00FE  149F               	bsf	31,1	;volatile
  1285     00FF                     l25:	
  1286                           ;configADC.c: 70:     while (ADCON0bits.GO == 1){};
  1287                           
  1288     00FF  189F               	btfsc	31,1	;volatile
  1289     0100  2902               	goto	u291
  1290     0101  2903               	goto	u290
  1291     0102                     u291:
  1292     0102  28FF               	goto	l25
  1293     0103                     u290:
  1294     0103                     l27:
  1295                           
  1296                           ;configADC.c: 71:     ADIF = 0;
  1297     0103  130C               	bcf	12,6	;volatile
  1298     0104                     l961:
  1299                           
  1300                           ;configADC.c: 72:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1301     0104  300D               	movlw	13
  1302     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1303     0106  1303               	bcf	3,6	;RP1=0, select bank0
  1304     0107  00A1               	movwf	??_readADC+1
  1305     0108  30FB               	movlw	251
  1306     0109  00A0               	movwf	??_readADC
  1307     010A                     u487:
  1308     010A  0BA0               	decfsz	??_readADC,f
  1309     010B  290A               	goto	u487
  1310     010C  0BA1               	decfsz	??_readADC+1,f
  1311     010D  290A               	goto	u487
  1312     010E                     l28:
  1313     010E  0008               	return
  1314     010F                     __end_of_readADC:
  1315                           
  1316                           	psect	text6
  1317     001A                     __ptext6:	
  1318 ;; *************** function _isr *****************
  1319 ;; Defined at:
  1320 ;;		line 57 in file "main_S2.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0
  1336 ;;      Temps:          4       0       0       0       0
  1337 ;;      Totals:         4       0       0       0       0
  1338 ;;Total ram usage:        4 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; Hardware stack levels required when called: 2
  1341 ;; This function calls:
  1342 ;;		_spiRead
  1343 ;;		_spiWrite
  1344 ;;		i1_readADC
  1345 ;; This function is called by:
  1346 ;;		Interrupt level 1
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350     001A                     _isr:	
  1351                           ;psect for function _isr
  1352                           
  1353     001A                     i1l1031:
  1354                           
  1355                           ;main_S2.c: 59:    if(SSPIF == 1 && FLAG_B == 0)
  1356     001A  1283               	bcf	3,5	;RP0=0, select bank0
  1357     001B  1303               	bcf	3,6	;RP1=0, select bank0
  1358     001C  1D8C               	btfss	12,3	;volatile
  1359     001D  281F               	goto	u34_21
  1360     001E  2820               	goto	u34_20
  1361     001F                     u34_21:
  1362     001F  2850               	goto	i1l1045
  1363     0020                     u34_20:
  1364     0020                     i1l1033:
  1365     0020  0877               	movf	_FLAG_B,w
  1366     0021  0478               	iorwf	_FLAG_B+1,w
  1367     0022  1D03               	btfss	3,2
  1368     0023  2825               	goto	u35_21
  1369     0024  2826               	goto	u35_20
  1370     0025                     u35_21:
  1371     0025  2850               	goto	i1l1045
  1372     0026                     u35_20:
  1373     0026                     i1l1035:
  1374                           
  1375                           ;main_S2.c: 60:    {;main_S2.c: 61:        readADC(0);
  1376     0026  3000               	movlw	0
  1377     0027  120A  118A  210F  120A  118A  	fcall	i1_readADC
  1378                           
  1379                           ;main_S2.c: 62:        VAL_READ = spiRead();
  1380     002C  120A  118A  2201  120A  118A  	fcall	_spiRead
  1381     0031  00F9               	movwf	_VAL_READ
  1382                           
  1383                           ;main_S2.c: 63:         spiWrite('A');
  1384     0032  3041               	movlw	65
  1385     0033  120A  118A  2211  120A  118A  	fcall	_spiWrite
  1386     0038                     i1l1037:
  1387                           
  1388                           ;main_S2.c: 64:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1389     0038  30C7               	movlw	199
  1390     0039  00F3               	movwf	??_isr
  1391     003A                     u49_27:
  1392     003A  283B               	nop2
  1393     003B  0BF3               	decfsz	??_isr,f
  1394     003C  283A               	goto	u49_27
  1395     003D  283E               	nop2
  1396     003E  283F               	nop2
  1397     003F                     i1l1039:
  1398                           
  1399                           ;main_S2.c: 65:         VAL_READ = spiRead();
  1400     003F  120A  118A  2201  120A  118A  	fcall	_spiRead
  1401     0044  00F9               	movwf	_VAL_READ
  1402     0045                     i1l1041:
  1403                           
  1404                           ;main_S2.c: 66:         spiWrite(ADRESH);
  1405     0045  1283               	bcf	3,5	;RP0=0, select bank0
  1406     0046  1303               	bcf	3,6	;RP1=0, select bank0
  1407     0047  081E               	movf	30,w	;volatile
  1408     0048  120A  118A  2211  120A  118A  	fcall	_spiWrite
  1409     004D                     i1l1043:
  1410                           
  1411                           ;main_S2.c: 68:         SSPIF = 0;
  1412     004D  1283               	bcf	3,5	;RP0=0, select bank0
  1413     004E  1303               	bcf	3,6	;RP1=0, select bank0
  1414     004F  118C               	bcf	12,3	;volatile
  1415     0050                     i1l1045:
  1416                           
  1417                           ;main_S2.c: 71:    if(SSPIF == 1 && FLAG_B == 1)
  1418     0050  1D8C               	btfss	12,3	;volatile
  1419     0051  2853               	goto	u36_21
  1420     0052  2854               	goto	u36_20
  1421     0053                     u36_21:
  1422     0053  2880               	goto	i1l1061
  1423     0054                     u36_20:
  1424     0054                     i1l1047:
  1425     0054  0377               	decf	_FLAG_B,w
  1426     0055  0478               	iorwf	_FLAG_B+1,w
  1427     0056  1D03               	btfss	3,2
  1428     0057  2859               	goto	u37_21
  1429     0058  285A               	goto	u37_20
  1430     0059                     u37_21:
  1431     0059  2880               	goto	i1l1061
  1432     005A                     u37_20:
  1433     005A                     i1l1049:
  1434                           
  1435                           ;main_S2.c: 72:    {;main_S2.c: 73:         VAL_READ = spiRead();
  1436     005A  120A  118A  2201  120A  118A  	fcall	_spiRead
  1437     005F  00F9               	movwf	_VAL_READ
  1438                           
  1439                           ;main_S2.c: 74:         spiWrite('C');
  1440     0060  3043               	movlw	67
  1441     0061  120A  118A  2211  120A  118A  	fcall	_spiWrite
  1442     0066                     i1l1051:
  1443                           
  1444                           ;main_S2.c: 75:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1445     0066  30C7               	movlw	199
  1446     0067  00F3               	movwf	??_isr
  1447     0068                     u50_27:
  1448     0068  2869               	nop2
  1449     0069  0BF3               	decfsz	??_isr,f
  1450     006A  2868               	goto	u50_27
  1451     006B  286C               	nop2
  1452     006C  286D               	nop2
  1453     006D                     i1l1053:
  1454                           
  1455                           ;main_S2.c: 76:         VAL_READ = spiRead();
  1456     006D  120A  118A  2201  120A  118A  	fcall	_spiRead
  1457     0072  00F9               	movwf	_VAL_READ
  1458     0073                     i1l1055:
  1459                           
  1460                           ;main_S2.c: 77:         spiWrite(CONT);
  1461     0073  1283               	bcf	3,5	;RP0=0, select bank0
  1462     0074  1303               	bcf	3,6	;RP1=0, select bank0
  1463     0075  0824               	movf	_CONT,w
  1464     0076  120A  118A  2211  120A  118A  	fcall	_spiWrite
  1465     007B                     i1l1057:
  1466                           
  1467                           ;main_S2.c: 79:         FLAG_B = 0;
  1468     007B  01F7               	clrf	_FLAG_B
  1469     007C  01F8               	clrf	_FLAG_B+1
  1470     007D                     i1l1059:
  1471                           
  1472                           ;main_S2.c: 80:         SSPIF = 0;
  1473     007D  1283               	bcf	3,5	;RP0=0, select bank0
  1474     007E  1303               	bcf	3,6	;RP1=0, select bank0
  1475     007F  118C               	bcf	12,3	;volatile
  1476     0080                     i1l1061:
  1477                           
  1478                           ;main_S2.c: 83:    if (INTCONbits.RBIF == 1)
  1479     0080  1C0B               	btfss	11,0	;volatile
  1480     0081  2883               	goto	u38_21
  1481     0082  2884               	goto	u38_20
  1482     0083                     u38_21:
  1483     0083  28C0               	goto	i1l138
  1484     0084                     u38_20:
  1485     0084                     i1l1063:
  1486                           
  1487                           ;main_S2.c: 84:     {;main_S2.c: 85:         if(!PORTBbits.RB0)
  1488     0084  1806               	btfsc	6,0	;volatile
  1489     0085  2887               	goto	u39_21
  1490     0086  2888               	goto	u39_20
  1491     0087                     u39_21:
  1492     0087  28A2               	goto	i1l133
  1493     0088                     u39_20:
  1494     0088                     i1l1065:
  1495                           
  1496                           ;main_S2.c: 86:         {;main_S2.c: 87:             _delay((unsigned long)((20)*(400000
      +                          0/4000.0)));
  1497     0088  301A               	movlw	26
  1498     0089  00F4               	movwf	??_isr+1
  1499     008A  30F8               	movlw	248
  1500     008B  00F3               	movwf	??_isr
  1501     008C                     u51_27:
  1502     008C  0BF3               	decfsz	??_isr,f
  1503     008D  288C               	goto	u51_27
  1504     008E  0BF4               	decfsz	??_isr+1,f
  1505     008F  288C               	goto	u51_27
  1506     0090  0000               	nop
  1507     0091                     i1l1067:
  1508                           
  1509                           ;main_S2.c: 88:             if(!PORTBbits.RB0)
  1510     0091  1283               	bcf	3,5	;RP0=0, select bank0
  1511     0092  1303               	bcf	3,6	;RP1=0, select bank0
  1512     0093  1806               	btfsc	6,0	;volatile
  1513     0094  2896               	goto	u40_21
  1514     0095  2897               	goto	u40_20
  1515     0096                     u40_21:
  1516     0096  28BF               	goto	i1l1077
  1517     0097                     u40_20:
  1518     0097                     i1l1069:
  1519                           
  1520                           ;main_S2.c: 89:             {;main_S2.c: 90:                 CONT ++;
  1521     0097  3001               	movlw	1
  1522     0098  07A4               	addwf	_CONT,f
  1523     0099  1803               	skipnc
  1524     009A  0AA5               	incf	_CONT+1,f
  1525     009B  3000               	movlw	0
  1526     009C  07A5               	addwf	_CONT+1,f
  1527                           
  1528                           ;main_S2.c: 91:                 FLAG_B = 1;
  1529     009D  3001               	movlw	1
  1530     009E  00F7               	movwf	_FLAG_B
  1531     009F  3000               	movlw	0
  1532     00A0  00F8               	movwf	_FLAG_B+1
  1533     00A1  28BF               	goto	i1l1077
  1534     00A2                     i1l133:	
  1535                           ;main_S2.c: 94:         else if(!PORTBbits.RB1)
  1536                           
  1537     00A2  1886               	btfsc	6,1	;volatile
  1538     00A3  28A5               	goto	u41_21
  1539     00A4  28A6               	goto	u41_20
  1540     00A5                     u41_21:
  1541     00A5  28BF               	goto	i1l1077
  1542     00A6                     u41_20:
  1543     00A6                     i1l1071:
  1544                           
  1545                           ;main_S2.c: 95:         {;main_S2.c: 96:             _delay((unsigned long)((20)*(400000
      +                          0/4000.0)));
  1546     00A6  301A               	movlw	26
  1547     00A7  00F4               	movwf	??_isr+1
  1548     00A8  30F8               	movlw	248
  1549     00A9  00F3               	movwf	??_isr
  1550     00AA                     u52_27:
  1551     00AA  0BF3               	decfsz	??_isr,f
  1552     00AB  28AA               	goto	u52_27
  1553     00AC  0BF4               	decfsz	??_isr+1,f
  1554     00AD  28AA               	goto	u52_27
  1555     00AE  0000               	nop
  1556     00AF                     i1l1073:
  1557                           
  1558                           ;main_S2.c: 97:             if(!PORTBbits.RB1)
  1559     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1560     00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1561     00B1  1886               	btfsc	6,1	;volatile
  1562     00B2  28B4               	goto	u42_21
  1563     00B3  28B5               	goto	u42_20
  1564     00B4                     u42_21:
  1565     00B4  28BF               	goto	i1l1077
  1566     00B5                     u42_20:
  1567     00B5                     i1l1075:
  1568                           
  1569                           ;main_S2.c: 98:             {;main_S2.c: 99:                 CONT --;
  1570     00B5  30FF               	movlw	255
  1571     00B6  07A4               	addwf	_CONT,f
  1572     00B7  1803               	skipnc
  1573     00B8  0AA5               	incf	_CONT+1,f
  1574     00B9  30FF               	movlw	255
  1575     00BA  07A5               	addwf	_CONT+1,f
  1576                           
  1577                           ;main_S2.c: 100:                 FLAG_B = 1;
  1578     00BB  3001               	movlw	1
  1579     00BC  00F7               	movwf	_FLAG_B
  1580     00BD  3000               	movlw	0
  1581     00BE  00F8               	movwf	_FLAG_B+1
  1582     00BF                     i1l1077:
  1583                           
  1584                           ;main_S2.c: 103:         INTCONbits.RBIF = 0;
  1585     00BF  100B               	bcf	11,0	;volatile
  1586     00C0                     i1l138:
  1587     00C0  0876               	movf	??_isr+3,w
  1588     00C1  008A               	movwf	10
  1589     00C2  0E75               	swapf	??_isr+2,w
  1590     00C3  0083               	movwf	3
  1591     00C4  0EFE               	swapf	btemp,f
  1592     00C5  0E7E               	swapf	btemp,w
  1593     00C6  0009               	retfie
  1594     00C7                     __end_of_isr:
  1595                           
  1596                           	psect	intentry
  1597     0004                     __pintentry:	
  1598                           ;incstack = 0
  1599                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1600                           
  1601     0004                     interrupt_function:
  1602     007E                     saved_w	set	btemp
  1603     0004  00FE               	movwf	btemp
  1604     0005  0E03               	swapf	3,w
  1605     0006  00F5               	movwf	??_isr+2
  1606     0007  080A               	movf	10,w
  1607     0008  00F6               	movwf	??_isr+3
  1608     0009  120A  118A  281A   	ljmp	_isr
  1609                           
  1610                           	psect	text7
  1611     010F                     __ptext7:	
  1612 ;; *************** function i1_readADC *****************
  1613 ;; Defined at:
  1614 ;;		line 49 in file "configADC.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  canal           1    wreg     unsigned char 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  canal           1    2[COMMON] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         0       0       0       0       0
  1629 ;;      Locals:         1       0       0       0       0
  1630 ;;      Temps:          2       0       0       0       0
  1631 ;;      Totals:         3       0       0       0       0
  1632 ;;Total ram usage:        3 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_isr
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641     010F                     i1_readADC:	
  1642                           ;psect for function i1_readADC
  1643                           
  1644                           
  1645                           ;incstack = 0
  1646                           ; Regs used in i1_readADC: [wreg+status,2+status,0]
  1647                           ;i1readADC@canal stored from wreg
  1648     010F  00F2               	movwf	i1readADC@canal
  1649     0110                     i1l1011:
  1650                           
  1651                           ;configADC.c: 51:     if(canal == 0)
  1652     0110  0872               	movf	i1readADC@canal,w
  1653     0111  1D03               	btfss	3,2
  1654     0112  2914               	goto	u30_21
  1655     0113  2915               	goto	u30_20
  1656     0114                     u30_21:
  1657     0114  292E               	goto	i1l1021
  1658     0115                     u30_20:
  1659     0115                     i1l1013:
  1660                           
  1661                           ;configADC.c: 52:     {;configADC.c: 53:     ADCON0bits.CHS = 0b0000;
  1662     0115  30C3               	movlw	-61
  1663     0116  1283               	bcf	3,5	;RP0=0, select bank0
  1664     0117  1303               	bcf	3,6	;RP1=0, select bank0
  1665     0118  059F               	andwf	31,f	;volatile
  1666     0119                     i1l1015:
  1667                           
  1668                           ;configADC.c: 55:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1669     0119  3021               	movlw	33
  1670     011A  00F0               	movwf	??i1_readADC
  1671     011B                     u53_27:
  1672     011B  0BF0               	decfsz	??i1_readADC,f
  1673     011C  291B               	goto	u53_27
  1674     011D                     i1l1017:
  1675                           
  1676                           ;configADC.c: 57:     ADCON0bits.GO = 1;
  1677     011D  1283               	bcf	3,5	;RP0=0, select bank0
  1678     011E  1303               	bcf	3,6	;RP1=0, select bank0
  1679     011F  149F               	bsf	31,1	;volatile
  1680     0120                     i1l21:	
  1681                           ;configADC.c: 58:     while (ADCON0bits.GO == 1){};
  1682                           
  1683     0120  189F               	btfsc	31,1	;volatile
  1684     0121  2923               	goto	u31_21
  1685     0122  2924               	goto	u31_20
  1686     0123                     u31_21:
  1687     0123  2920               	goto	i1l21
  1688     0124                     u31_20:
  1689     0124                     i1l23:
  1690                           
  1691                           ;configADC.c: 59:     ADIF = 0;
  1692     0124  130C               	bcf	12,6	;volatile
  1693     0125                     i1l1019:
  1694                           
  1695                           ;configADC.c: 60:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1696     0125  300D               	movlw	13
  1697     0126  00F1               	movwf	??i1_readADC+1
  1698     0127  30FB               	movlw	251
  1699     0128  00F0               	movwf	??i1_readADC
  1700     0129                     u54_27:
  1701     0129  0BF0               	decfsz	??i1_readADC,f
  1702     012A  2929               	goto	u54_27
  1703     012B  0BF1               	decfsz	??i1_readADC+1,f
  1704     012C  2929               	goto	u54_27
  1705     012D  292E               	nop2
  1706     012E                     i1l1021:
  1707                           
  1708                           ;configADC.c: 63:     if(canal == 1)
  1709     012E  0372               	decf	i1readADC@canal,w
  1710     012F  1D03               	btfss	3,2
  1711     0130  2932               	goto	u32_21
  1712     0131  2933               	goto	u32_20
  1713     0132                     u32_21:
  1714     0132  294E               	goto	i1l28
  1715     0133                     u32_20:
  1716     0133                     i1l1023:
  1717                           
  1718                           ;configADC.c: 64:     {;configADC.c: 65:     ADCON0bits.CHS = 0b0001;
  1719     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1720     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1721     0135  081F               	movf	31,w	;volatile
  1722     0136  39C3               	andlw	-61
  1723     0137  3804               	iorlw	4
  1724     0138  009F               	movwf	31	;volatile
  1725     0139                     i1l1025:
  1726                           
  1727                           ;configADC.c: 67:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1728     0139  3021               	movlw	33
  1729     013A  00F0               	movwf	??i1_readADC
  1730     013B                     u55_27:
  1731     013B  0BF0               	decfsz	??i1_readADC,f
  1732     013C  293B               	goto	u55_27
  1733     013D                     i1l1027:
  1734                           
  1735                           ;configADC.c: 69:     ADCON0bits.GO = 1;
  1736     013D  1283               	bcf	3,5	;RP0=0, select bank0
  1737     013E  1303               	bcf	3,6	;RP1=0, select bank0
  1738     013F  149F               	bsf	31,1	;volatile
  1739     0140                     i1l25:	
  1740                           ;configADC.c: 70:     while (ADCON0bits.GO == 1){};
  1741                           
  1742     0140  189F               	btfsc	31,1	;volatile
  1743     0141  2943               	goto	u33_21
  1744     0142  2944               	goto	u33_20
  1745     0143                     u33_21:
  1746     0143  2940               	goto	i1l25
  1747     0144                     u33_20:
  1748     0144                     i1l27:
  1749                           
  1750                           ;configADC.c: 71:     ADIF = 0;
  1751     0144  130C               	bcf	12,6	;volatile
  1752     0145                     i1l1029:
  1753                           
  1754                           ;configADC.c: 72:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1755     0145  300D               	movlw	13
  1756     0146  00F1               	movwf	??i1_readADC+1
  1757     0147  30FB               	movlw	251
  1758     0148  00F0               	movwf	??i1_readADC
  1759     0149                     u56_27:
  1760     0149  0BF0               	decfsz	??i1_readADC,f
  1761     014A  2949               	goto	u56_27
  1762     014B  0BF1               	decfsz	??i1_readADC+1,f
  1763     014C  2949               	goto	u56_27
  1764     014D  294E               	nop2
  1765     014E                     i1l28:
  1766     014E  0008               	return
  1767     014F                     __end_ofi1_readADC:
  1768                           
  1769                           	psect	text8
  1770     0211                     __ptext8:	
  1771 ;; *************** function _spiWrite *****************
  1772 ;; Defined at:
  1773 ;;		line 34 in file "configSPI.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  dat             1    wreg     unsigned char 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  dat             1    0[COMMON] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       0       0       0       0
  1788 ;;      Locals:         1       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0
  1790 ;;      Totals:         1       0       0       0       0
  1791 ;;Total ram usage:        1 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_isr
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800     0211                     _spiWrite:	
  1801                           ;psect for function _spiWrite
  1802                           
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _spiWrite: [wreg]
  1806                           ;spiWrite@dat stored from wreg
  1807     0211  00F0               	movwf	spiWrite@dat
  1808     0212                     i1l963:
  1809                           
  1810                           ;configSPI.c: 34: void spiWrite(char dat);configSPI.c: 35: {;configSPI.c: 36:     SSPBUF
      +                           = dat;
  1811     0212  0870               	movf	spiWrite@dat,w
  1812     0213  1283               	bcf	3,5	;RP0=0, select bank0
  1813     0214  1303               	bcf	3,6	;RP1=0, select bank0
  1814     0215  0093               	movwf	19	;volatile
  1815     0216                     i1l59:
  1816     0216  0008               	return
  1817     0217                     __end_of_spiWrite:
  1818                           
  1819                           	psect	text9
  1820     0201                     __ptext9:	
  1821 ;; *************** function _spiRead *****************
  1822 ;; Defined at:
  1823 ;;		line 47 in file "configSPI.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      unsigned char 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0
  1840 ;;      Totals:         0       0       0       0       0
  1841 ;;Total ram usage:        0 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 1
  1844 ;; This function calls:
  1845 ;;		_spiReceiveWait
  1846 ;; This function is called by:
  1847 ;;		_isr
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851     0201                     _spiRead:	
  1852                           ;psect for function _spiRead
  1853                           
  1854     0201                     i1l965:	
  1855                           ;incstack = 0
  1856                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1857                           
  1858                           
  1859                           ;configSPI.c: 49:     spiReceiveWait();
  1860     0201  120A  118A  220A  120A  118A  	fcall	_spiReceiveWait
  1861     0206                     i1l967:
  1862                           
  1863                           ;configSPI.c: 50:     return(SSPBUF);
  1864     0206  1283               	bcf	3,5	;RP0=0, select bank0
  1865     0207  1303               	bcf	3,6	;RP1=0, select bank0
  1866     0208  0813               	movf	19,w	;volatile
  1867     0209                     i1l67:
  1868     0209  0008               	return
  1869     020A                     __end_of_spiRead:
  1870                           
  1871                           	psect	text10
  1872     020A                     __ptext10:	
  1873 ;; *************** function _spiReceiveWait *****************
  1874 ;; Defined at:
  1875 ;;		line 29 in file "configSPI.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		None
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0
  1892 ;;      Totals:         0       0       0       0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_spiRead
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902     020A                     _spiReceiveWait:	
  1903                           ;psect for function _spiReceiveWait
  1904                           
  1905     020A                     i1l941:	
  1906                           ;incstack = 0
  1907                           ; Regs used in _spiReceiveWait: []
  1908                           
  1909     020A                     i1l53:	
  1910                           ;configSPI.c: 31:     while ( !SSPSTATbits.BF );
  1911                           
  1912     020A  1683               	bsf	3,5	;RP0=1, select bank1
  1913     020B  1303               	bcf	3,6	;RP1=0, select bank1
  1914     020C  1C14               	btfss	20,0	;volatile
  1915     020D  2A0F               	goto	u25_21
  1916     020E  2A10               	goto	u25_20
  1917     020F                     u25_21:
  1918     020F  2A0A               	goto	i1l53
  1919     0210                     u25_20:
  1920     0210                     i1l56:
  1921     0210  0008               	return
  1922     0211                     __end_of_spiReceiveWait:
  1923     007E                     btemp	set	126	;btemp
  1924     007E                     wtemp0	set	126
  1925                           
  1926                           	psect	idloc
  1927                           
  1928                           ;Config register IDLOC0 @ 0x2000
  1929                           ;	unspecified, using default values
  1930     2000                     	org	8192
  1931     2000  3FFF               	dw	16383
  1932                           
  1933                           ;Config register IDLOC1 @ 0x2001
  1934                           ;	unspecified, using default values
  1935     2001                     	org	8193
  1936     2001  3FFF               	dw	16383
  1937                           
  1938                           ;Config register IDLOC2 @ 0x2002
  1939                           ;	unspecified, using default values
  1940     2002                     	org	8194
  1941     2002  3FFF               	dw	16383
  1942                           
  1943                           ;Config register IDLOC3 @ 0x2003
  1944                           ;	unspecified, using default values
  1945     2003                     	org	8195
  1946     2003  3FFF               	dw	16383
  1947                           
  1948                           	psect	config
  1949                           
  1950                           ;Config register CONFIG1 @ 0x2007
  1951                           ;	Oscillator Selection bits
  1952                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1953                           ;	Watchdog Timer Enable bit
  1954                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1955                           ;	Power-up Timer Enable bit
  1956                           ;	PWRTE = OFF, PWRT disabled
  1957                           ;	RE3/MCLR pin function select bit
  1958                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1959                           ;	Code Protection bit
  1960                           ;	CP = OFF, Program memory code protection is disabled
  1961                           ;	Data Code Protection bit
  1962                           ;	CPD = OFF, Data memory code protection is disabled
  1963                           ;	Brown Out Reset Selection bits
  1964                           ;	BOREN = OFF, BOR disabled
  1965                           ;	Internal External Switchover bit
  1966                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1967                           ;	Fail-Safe Clock Monitor Enabled bit
  1968                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1969                           ;	Low Voltage Programming Enable bit
  1970                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1971                           ;	In-Circuit Debugger Mode bit
  1972                           ;	DEBUG = 0x1, unprogramme  1973     2007                     	org	8199
  1974     2007  20D4               	dw	8404
  1975                           
  1976                           ;Config register CONFIG2 @ 0x2008
  1977                           ;	Brown-out Reset Selection bit
  1978                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1979                           ;	Flash Program Memory Self Write Enable bits
  1980                           ;	WRT = OFF, Write protection off
  1981     2008                     	org	8200
  1982     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      4       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_readADC

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     566
                            _readADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     522
                           _setupADC
                        _setupINTOSC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      66
                                              3 COMMON     4     4      0
                            _spiRead
                           _spiWrite
                          i1_readADC
 ---------------------------------------------------------------------------------
 (4) i1_readADC                                            3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _readADC
   _setup
     _setupADC
     _setupINTOSC
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite
   i1_readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 06 00:04:48 2023

            _SSPSTATbits 0094                       l21 00DB                       l23 00DF  
                     l16 01A3                       l25 00FF                       l17 01BA  
                     l33 0200                       l50 01D8                       l27 0103  
                     l28 010E                       l49 01D3                      l143 01DE  
                    l149 0187                      l921 0196                      l923 019D  
                    l925 01B3                      l917 018B                      l951 00E0  
                    l943 00CA                      l919 0190                      l927 01F1  
                    l961 0104                      l945 00CF                      l953 00EA  
                    l929 01FF                      l955 00F1                      l947 00D1  
                    l957 00F5                      l949 00D8                      l959 00FC  
                    u220 0190                      u221 018F                      u230 019D  
                    u231 019C                      u260 00CF                      u261 00CE  
                    u270 00DF                      u430 01C7                      u271 00DE  
                    u431 01C6                      u280 00F1                      u281 00F0  
                    u290 0103                      u291 0102                      u447 01B7  
                    u457 00D5                      u467 00E6                      u477 00F9  
                    u487 010A                      _isr 001A                     l1101 0157  
                   l1111 015E                     l1103 0158                     l1121 0167  
                   l1113 0161                     l1105 0159                     l1131 0170  
                   l1123 0168                     l1115 0162                     l1107 015C  
                   l1133 0176                     l1125 0169                     l1117 0165  
                   l1109 015D                     l1141 01E8                     l1135 017C  
                   l1127 016C                     l1119 0166                     l1129 016F  
                   l1137 01D9                     l1091 01CB                     l1139 01E4  
                   l1093 01CD                     l1095 01D2                     l1087 01BE  
                   l1089 01C7                     l1097 014F                     l1099 0153  
                   _ADIF 0066                     ?_isr 0070                     _CONT 0024  
                   _IOCB 0096                     i1l21 0120                     i1l23 0124  
                   i1l25 0140                     i1l27 0144                     i1l28 014E  
                   i1l53 020A                     i1l56 0210                     i1l67 0209  
                   i1l59 0216                     _main 01D9                     btemp 007E  
                   start 000C                    ??_isr 0073                    ?_main 0070  
                  _ANSEL 0188                    i1l133 00A2                    i1l138 00C0  
                  i1l941 020A                    i1l963 0212                    i1l965 0201  
                  i1l967 0206                    u30_20 0115                    u30_21 0114  
                  u31_20 0124                    u31_21 0123                    u32_20 0133  
                  u40_20 0097                    u32_21 0132                    u40_21 0096  
                  u25_20 0210                    u33_20 0144                    u41_20 00A6  
                  u25_21 020F                    u33_21 0143                    u41_21 00A5  
                  u42_20 00B5                    u34_20 0020                    u42_21 00B4  
                  u34_21 001F                    u50_27 0068                    u35_20 0026  
                  u35_21 0025                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    u51_27 008C                    u36_20 0054  
                  u36_21 0053                    u52_27 00AA                    u37_20 005A  
                  u37_21 0059                    u53_27 011B                    u38_20 0084  
                  u38_21 0083                    u54_27 0129                    u39_20 0088  
                  u39_21 0087                    u55_27 013B                    u56_27 0149  
                  _TRISB 0086                    _TRISD 0088                    u49_27 003A  
                  _TRISE 0089                    _SSPIF 0063          __end_of_readADC 010F  
                  _setup 014F                    pclath 000A          __end_of_spiInit 01D9  
        __end_of_spiRead 020A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 01EE                   ??_main 0024  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _FLAG_B 0077                   i1l1011 0110                   i1l1013 0115  
                 i1l1021 012E                   i1l1023 0133                   i1l1015 0119  
                 i1l1031 001A                   i1l1025 0139                   i1l1017 011D  
                 i1l1041 0045                   i1l1033 0020                   i1l1027 013D  
                 i1l1019 0125                   i1l1051 0066                   i1l1043 004D  
                 i1l1035 0026                   i1l1029 0145                   i1l1053 006D  
                 i1l1061 0080                   i1l1037 0038                   i1l1045 0050  
                 i1l1071 00A6                   i1l1063 0084                   i1l1055 0073  
                 i1l1047 0054                   i1l1039 003F                   i1l1073 00AF  
                 i1l1065 0088                   i1l1057 007B                   i1l1049 005A  
                 i1l1075 00B5                   i1l1067 0091                   i1l1059 007D  
                 i1l1069 0097                   i1l1077 00BF                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
           readADC@canal 0022             ?_setupINTOSC 0070                ??_readADC 0020  
       __end_of_setupADC 01BB                   saved_w 007E         __end_of_spiWrite 0217  
              ??_spiInit 0023                ??_spiRead 0070        __end_ofi1_readADC 014F  
__end_of__initialization 0016           __pcstackCOMMON 0070           i1readADC@canal 0072  
          __end_of_setup 0188           _OPTION_REGbits 0081                  ??_setup 0024  
             __pbssBANK0 0024               __pmaintext 01D9               __pintentry 0004  
                _SSPSTAT 0094                ?_setupADC 0070                ?_spiWrite 0070  
              _ANSELbits 0188                  __ptext1 014F                  __ptext2 01BB  
                __ptext3 01EE                  __ptext4 0188                  __ptext5 00C7  
                __ptext6 001A                  __ptext7 010F                  __ptext8 0211  
                __ptext9 0201                  _readADC 00C7                  _spiInit 01BB  
                _spiRead 0201     end_of_initialization 0016               ??_setupADC 0020  
             ??_spiWrite 0070                _PORTBbits 0006                _TRISAbits 0085  
            spiWrite@dat 0070                i1_readADC 010F           _spiReceiveWait 020A  
    start_initialization 000F              __end_of_isr 00C7               ?i1_readADC 0070  
 __end_of_spiReceiveWait 0211              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070                 ?_readADC 0070  
               ?_spiInit 0020                 ?_spiRead 0070     spiInit@sTransmitEdge 0022  
      interrupt_function 0004              ??i1_readADC 0070                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C                 _VAL_READ 0079  
             _ADCON0bits 001F               _ADCON1bits 009F            ??_setupINTOSC 0020  
               _WPUBbits 0095                 __ptext10 020A      __end_of_setupINTOSC 0201  
          setupADC@canal 0021                 _setupADC 0188                 _spiWrite 0211  
           spiInit@sType 0023        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
            _setupINTOSC 01EE             setupINTOSC@F 0021  
