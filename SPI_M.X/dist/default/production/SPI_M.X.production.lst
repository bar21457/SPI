

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 00:30:13 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0088                     	;# 
   418     0089                     	;# 
   419     008C                     	;# 
   420     008D                     	;# 
   421     008E                     	;# 
   422     008F                     	;# 
   423     0090                     	;# 
   424     0091                     	;# 
   425     0092                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0094                     	;# 
   430     0095                     	;# 
   431     0096                     	;# 
   432     0097                     	;# 
   433     0098                     	;# 
   434     0099                     	;# 
   435     009A                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     0105                     	;# 
   442     0107                     	;# 
   443     0108                     	;# 
   444     0109                     	;# 
   445     010C                     	;# 
   446     010C                     	;# 
   447     010D                     	;# 
   448     010E                     	;# 
   449     010F                     	;# 
   450     0185                     	;# 
   451     0187                     	;# 
   452     0188                     	;# 
   453     0189                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456                           
   457                           	psect	strings
   458     0003                     __pstrings:
   459     0003                     stringtab:
   460     0003                     __stringtab:
   461                           
   462                           ;	String table - string pointers are 1 byte each
   463     0003  1BFF               	btfsc	btemp+1,7
   464     0004  280D               	ljmp	stringcode
   465     0005  1383               	bcf	3,7
   466     0006  187F               	btfsc	btemp+1,0
   467     0007  1783               	bsf	3,7
   468     0008  0800               	movf	0,w
   469     0009  0A84               	incf	4,f
   470     000A  1903               	skipnz
   471     000B  0AFF               	incf	btemp+1,f
   472     000C  0008               	return
   473     000D                     stringcode:
   474     000D                     stringdir:
   475     000D  3000               	movlw	high stringdir
   476     000E  008A               	movwf	10
   477     000F  0804               	movf	4,w
   478     0010  0A84               	incf	4,f
   479     0011  0782               	addwf	2,f
   480     0012                     __stringbase:
   481     0012  3400               	retlw	0
   482     0013                     __end_of__stringtab:
   483     0013                     _dpowers:
   484     0013  3401               	retlw	1
   485     0014  3400               	retlw	0
   486     0015  340A               	retlw	10
   487     0016  3400               	retlw	0
   488     0017  3464               	retlw	100
   489     0018  3400               	retlw	0
   490     0019  34E8               	retlw	232
   491     001A  3403               	retlw	3
   492     001B  3410               	retlw	16
   493     001C  3427               	retlw	39
   494     001D                     __end_of_dpowers:
   495     0006                     _PORTB	set	6
   496     0008                     _PORTD	set	8
   497     0007                     _PORTCbits	set	7
   498     0008                     _PORTDbits	set	8
   499     0013                     _SSPBUF	set	19
   500     0014                     _SSPCON	set	20
   501     0088                     _TRISD	set	136
   502     0086                     _TRISB	set	134
   503     008F                     _OSCCONbits	set	143
   504     0094                     _SSPSTATbits	set	148
   505     0094                     _SSPSTAT	set	148
   506     043A                     _TRISC2	set	1082
   507     043B                     _TRISC3	set	1083
   508     043D                     _TRISC5	set	1085
   509     0189                     _ANSELH	set	393
   510     0188                     _ANSEL	set	392
   511     001D                     STR_1:
   512     001D  3453               	retlw	83	;'S'
   513     001E  3431               	retlw	49	;'1'
   514     001F  343A               	retlw	58	;':'
   515     0020  3400               	retlw	0
   516     0021                     STR_2:
   517     0021  3453               	retlw	83	;'S'
   518     0022  3432               	retlw	50	;'2'
   519     0023  343A               	retlw	58	;':'
   520     0024  3400               	retlw	0
   521     0025                     STR_3:
   522     0025  3453               	retlw	83	;'S'
   523     0026  3433               	retlw	51	;'3'
   524     0027  343A               	retlw	58	;':'
   525     0028  3400               	retlw	0
   526     0029                     STR_4:
   527     0029  3425               	retlw	37	;'%'
   528     002A  3475               	retlw	117	;'u'
   529     002B  3400               	retlw	0
   530     0029                     
   531                           	psect	cinit
   532     07FC                     start_initialization:	
   533                           ; #config settings
   534                           
   535     07FC                     __initialization:
   536     07FC                     end_of_initialization:	
   537                           ;End of C runtime variable initialization code
   538                           
   539     07FC                     __end_of__initialization:
   540     07FC  0183               	clrf	3
   541     07FD  120A  118A  2EE6   	ljmp	_main	;jump to C main() function
   542                           
   543                           	psect	cstackCOMMON
   544     0070                     __pcstackCOMMON:
   545     0070                     ?_setup:
   546     0070                     ?_spiInit:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_spiReceiveWait:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ??_spiReceiveWait:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_spiWrite:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ??_spiWrite:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_spiRead:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ??_spiRead:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_setupINTOSC:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ??_setupINTOSC:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_Lcd_Port_4bits:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ??_Lcd_Port_4bits:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_Lcd_Cmd_4bits:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_Lcd_Clear_4bits:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_Lcd_Init_4bits:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ?_Lcd_Write_Char_4bits:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_main:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ?___awdiv:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?___lwdiv:	
   598                           ; 2 bytes @ 0x0
   599                           
   600     0070                     spiInit@sDataSample:	
   601                           ; 2 bytes @ 0x0
   602                           
   603     0070                     spiWrite@dat:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     Lcd_Port_4bits@a:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ___awdiv@divisor:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ___lwdiv@divisor:	
   613                           ; 2 bytes @ 0x0
   614                           
   615                           
   616                           ; 2 bytes @ 0x0
   617     0070                     	ds	1
   618     0071                     ??_Lcd_Cmd_4bits:
   619     0071                     ??_Lcd_Write_Char_4bits:	
   620                           ; 1 bytes @ 0x1
   621                           
   622     0071                     spiInit@sClockIdle:	
   623                           ; 1 bytes @ 0x1
   624                           
   625     0071                     setupINTOSC@F:	
   626                           ; 1 bytes @ 0x1
   627                           
   628                           
   629                           ; 1 bytes @ 0x1
   630     0071                     	ds	1
   631     0072                     spiInit@sTransmitEdge:
   632     0072                     Lcd_Write_Char_4bits@temp:	
   633                           ; 1 bytes @ 0x2
   634                           
   635     0072                     ___awdiv@dividend:	
   636                           ; 1 bytes @ 0x2
   637                           
   638     0072                     ___lwdiv@dividend:	
   639                           ; 2 bytes @ 0x2
   640                           
   641                           
   642                           ; 2 bytes @ 0x2
   643     0072                     	ds	1
   644     0073                     ??_spiInit:
   645     0073                     spiInit@sType:	
   646                           ; 1 bytes @ 0x3
   647                           
   648     0073                     Lcd_Cmd_4bits@a:	
   649                           ; 1 bytes @ 0x3
   650                           
   651     0073                     Lcd_Write_Char_4bits@y:	
   652                           ; 1 bytes @ 0x3
   653                           
   654                           
   655                           ; 1 bytes @ 0x3
   656     0073                     	ds	1
   657     0074                     ??_Lcd_Clear_4bits:
   658     0074                     ?_Lcd_Set_Cursor_4bits:	
   659                           ; 1 bytes @ 0x4
   660                           
   661     0074                     ??_Lcd_Init_4bits:	
   662                           ; 1 bytes @ 0x4
   663                           
   664     0074                     ??___awdiv:	
   665                           ; 1 bytes @ 0x4
   666                           
   667     0074                     ??___lwdiv:	
   668                           ; 1 bytes @ 0x4
   669                           
   670     0074                     Lcd_Set_Cursor_4bits@b:	
   671                           ; 1 bytes @ 0x4
   672                           
   673     0074                     Lcd_Write_Char_4bits@a:	
   674                           ; 1 bytes @ 0x4
   675                           
   676                           
   677                           ; 1 bytes @ 0x4
   678     0074                     	ds	1
   679     0075                     ??_Lcd_Set_Cursor_4bits:
   680     0075                     ?_Lcd_Write_String_4bits:	
   681                           ; 1 bytes @ 0x5
   682                           
   683     0075                     ___awdiv@counter:	
   684                           ; 1 bytes @ 0x5
   685                           
   686     0075                     Lcd_Write_String_4bits@a:	
   687                           ; 1 bytes @ 0x5
   688                           
   689     0075                     ___lwdiv@quotient:	
   690                           ; 2 bytes @ 0x5
   691                           
   692                           
   693                           ; 2 bytes @ 0x5
   694     0075                     	ds	1
   695     0076                     ??_setup:
   696     0076                     Lcd_Set_Cursor_4bits@a:	
   697                           ; 1 bytes @ 0x6
   698                           
   699     0076                     ___awdiv@sign:	
   700                           ; 1 bytes @ 0x6
   701                           
   702                           
   703                           ; 1 bytes @ 0x6
   704     0076                     	ds	1
   705     0077                     ??_Lcd_Write_String_4bits:
   706     0077                     Lcd_Set_Cursor_4bits@z:	
   707                           ; 1 bytes @ 0x7
   708                           
   709     0077                     ___lwdiv@counter:	
   710                           ; 1 bytes @ 0x7
   711                           
   712     0077                     ___awdiv@quotient:	
   713                           ; 1 bytes @ 0x7
   714                           
   715                           
   716                           ; 2 bytes @ 0x7
   717     0077                     	ds	1
   718     0078                     ?___lwmod:
   719     0078                     Lcd_Set_Cursor_4bits@y:	
   720                           ; 2 bytes @ 0x8
   721                           
   722     0078                     ___lwmod@divisor:	
   723                           ; 1 bytes @ 0x8
   724                           
   725                           
   726                           ; 2 bytes @ 0x8
   727     0078                     	ds	1
   728     0079                     ?___awmod:
   729     0079                     Lcd_Set_Cursor_4bits@temp:	
   730                           ; 2 bytes @ 0x9
   731                           
   732     0079                     ___awmod@divisor:	
   733                           ; 1 bytes @ 0x9
   734                           
   735                           
   736                           ; 2 bytes @ 0x9
   737     0079                     	ds	1
   738     007A                     Lcd_Write_String_4bits@i:
   739     007A                     ___lwmod@dividend:	
   740                           ; 2 bytes @ 0xA
   741                           
   742                           
   743                           ; 2 bytes @ 0xA
   744     007A                     	ds	1
   745     007B                     ___awmod@dividend:
   746                           
   747                           ; 2 bytes @ 0xB
   748     007B                     	ds	1
   749     007C                     ??___lwmod:
   750                           
   751                           ; 1 bytes @ 0xC
   752     007C                     	ds	1
   753     007D                     ??___awmod:
   754     007D                     ___lwmod@counter:	
   755                           ; 1 bytes @ 0xD
   756                           
   757                           
   758                           ; 1 bytes @ 0xD
   759     007D                     	ds	1
   760                           
   761                           	psect	cstackBANK0
   762     0020                     __pcstackBANK0:
   763     0020                     ?_sprintf:
   764     0020                     sprintf@f:	
   765                           ; 2 bytes @ 0x0
   766                           
   767     0020                     ___awmod@counter:	
   768                           ; 1 bytes @ 0x0
   769                           
   770                           
   771                           ; 1 bytes @ 0x0
   772     0020                     	ds	1
   773     0021                     ___awmod@sign:
   774                           
   775                           ; 1 bytes @ 0x1
   776     0021                     	ds	2
   777     0023                     ??_sprintf:
   778                           
   779                           ; 1 bytes @ 0x3
   780     0023                     	ds	3
   781     0026                     sprintf@flag:
   782                           
   783                           ; 1 bytes @ 0x6
   784     0026                     	ds	1
   785     0027                     sprintf@ap:
   786                           
   787                           ; 1 bytes @ 0x7
   788     0027                     	ds	1
   789     0028                     sprintf@val:
   790                           
   791                           ; 2 bytes @ 0x8
   792     0028                     	ds	2
   793     002A                     sprintf@prec:
   794                           
   795                           ; 1 bytes @ 0xA
   796     002A                     	ds	1
   797     002B                     sprintf@sp:
   798                           
   799                           ; 1 bytes @ 0xB
   800     002B                     	ds	1
   801     002C                     sprintf@c:
   802                           
   803                           ; 1 bytes @ 0xC
   804     002C                     	ds	1
   805     002D                     ??_main:
   806                           
   807                           ; 1 bytes @ 0xD
   808     002D                     	ds	2
   809     002F                     main@ADC1:
   810                           
   811                           ; 9 bytes @ 0xF
   812     002F                     	ds	9
   813     0038                     main@VAL1_U:
   814                           
   815                           ; 1 bytes @ 0x18
   816     0038                     	ds	1
   817     0039                     main@VAL1_D:
   818                           
   819                           ; 1 bytes @ 0x19
   820     0039                     	ds	1
   821     003A                     main@VAL1_C:
   822                           
   823                           ; 1 bytes @ 0x1A
   824     003A                     	ds	1
   825     003B                     main@VAL1:
   826                           
   827                           ; 1 bytes @ 0x1B
   828     003B                     	ds	1
   829                           
   830                           	psect	maintext
   831     06E6                     __pmaintext:	
   832 ;;
   833 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   834 ;;
   835 ;; *************** function _main *****************
   836 ;; Defined at:
   837 ;;		line 60 in file "main_M.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  ADC1            9   15[BANK0 ] unsigned char [9]
   842 ;;  VAL1            1   27[BANK0 ] unsigned char 
   843 ;;  VAL1_C          1   26[BANK0 ] unsigned char 
   844 ;;  VAL1_D          1   25[BANK0 ] unsigned char 
   845 ;;  VAL1_U          1   24[BANK0 ] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : B00/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         0      13       0       0       0
   857 ;;      Temps:          0       2       0       0       0
   858 ;;      Totals:         0      15       0       0       0
   859 ;;Total ram usage:       15 bytes
   860 ;; Hardware stack levels required when called: 4
   861 ;; This function calls:
   862 ;;		_Lcd_Clear_4bits
   863 ;;		_Lcd_Set_Cursor_4bits
   864 ;;		_Lcd_Write_String_4bits
   865 ;;		___awdiv
   866 ;;		___awmod
   867 ;;		_setup
   868 ;;		_spiRead
   869 ;;		_spiWrite
   870 ;;		_sprintf
   871 ;; This function is called by:
   872 ;;		Startup code after reset
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876     06E6                     _main:	
   877                           ;psect for function _main
   878                           
   879     06E6                     l1428:	
   880                           ;incstack = 0
   881                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   882                           
   883                           
   884                           ;main_M.c: 62:     setup();
   885     06E6  120A  118A  23A4  120A  118A  	fcall	_setup
   886                           
   887                           ;main_M.c: 64:     uint8_t VAL1;;main_M.c: 65:     uint8_t VAL1_U;;main_M.c: 66:     uin
      +                          t8_t VAL1_D;;main_M.c: 67:     uint8_t VAL1_C;;main_M.c: 69:     char ADC1[9];;main_M.c:
      +                           71:     Lcd_Clear_4bits();
   888     06EB  120A  118A  2338  120A  118A  	fcall	_Lcd_Clear_4bits
   889                           
   890                           ;main_M.c: 72:     Lcd_Set_Cursor_4bits(1,1);
   891     06F0  01F4               	clrf	Lcd_Set_Cursor_4bits@b
   892     06F1  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
   893     06F2  3001               	movlw	1
   894     06F3  120A  118A  24C0  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   895     06F8                     l1430:
   896                           
   897                           ;main_M.c: 73:     Lcd_Write_String_4bits("S1:");
   898     06F8  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   899     06F9  00F5               	movwf	Lcd_Write_String_4bits@a
   900     06FA  3080               	movlw	128
   901     06FB  00F6               	movwf	Lcd_Write_String_4bits@a+1
   902     06FC  120A  118A  243A  120A  118A  	fcall	_Lcd_Write_String_4bits
   903     0701                     l1432:
   904                           
   905                           ;main_M.c: 74:     Lcd_Set_Cursor_4bits(1,7);
   906     0701  3007               	movlw	7
   907     0702  00F4               	movwf	Lcd_Set_Cursor_4bits@b
   908     0703  3001               	movlw	1
   909     0704  120A  118A  24C0  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   910                           
   911                           ;main_M.c: 75:     Lcd_Write_String_4bits("S2:");
   912     0709  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   913     070A  00F5               	movwf	Lcd_Write_String_4bits@a
   914     070B  3080               	movlw	128
   915     070C  00F6               	movwf	Lcd_Write_String_4bits@a+1
   916     070D  120A  118A  243A  120A  118A  	fcall	_Lcd_Write_String_4bits
   917     0712                     l1434:
   918                           
   919                           ;main_M.c: 76:     Lcd_Set_Cursor_4bits(1,13);
   920     0712  300D               	movlw	13
   921     0713  00F4               	movwf	Lcd_Set_Cursor_4bits@b
   922     0714  3001               	movlw	1
   923     0715  120A  118A  24C0  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   924     071A                     l1436:
   925                           
   926                           ;main_M.c: 77:     Lcd_Write_String_4bits("S3:");
   927     071A  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   928     071B  00F5               	movwf	Lcd_Write_String_4bits@a
   929     071C  3080               	movlw	128
   930     071D  00F6               	movwf	Lcd_Write_String_4bits@a+1
   931     071E  120A  118A  243A  120A  118A  	fcall	_Lcd_Write_String_4bits
   932     0723                     l1438:
   933                           
   934                           ;main_M.c: 80:     {;main_M.c: 81:        PORTCbits.RC2 = 0;
   935     0723  1283               	bcf	3,5	;RP0=0, select bank0
   936     0724  1303               	bcf	3,6	;RP1=0, select bank0
   937     0725  1107               	bcf	7,2	;volatile
   938     0726                     l1440:
   939                           
   940                           ;main_M.c: 82:        _delay((unsigned long)((1)*(4000000/4000.0)));
   941     0726  30C7               	movlw	199
   942     0727  1283               	bcf	3,5	;RP0=0, select bank0
   943     0728  1303               	bcf	3,6	;RP1=0, select bank0
   944     0729  00AD               	movwf	??_main
   945     072A                     u1037:
   946     072A  2F2B               	nop2
   947     072B  0BAD               	decfsz	??_main,f
   948     072C  2F2A               	goto	u1037
   949     072D  2F2E               	nop2
   950     072E                     l1442:
   951                           
   952                           ;main_M.c: 84:        spiWrite(PORTD);
   953     072E  1283               	bcf	3,5	;RP0=0, select bank0
   954     072F  1303               	bcf	3,6	;RP1=0, select bank0
   955     0730  0808               	movf	8,w	;volatile
   956     0731  120A  118A  2322  120A  118A  	fcall	_spiWrite
   957     0736                     l1444:
   958                           
   959                           ;main_M.c: 85:        VAL1 = spiRead();
   960     0736  120A  118A  232F  120A  118A  	fcall	_spiRead
   961     073B  1283               	bcf	3,5	;RP0=0, select bank0
   962     073C  1303               	bcf	3,6	;RP1=0, select bank0
   963     073D  00BB               	movwf	main@VAL1
   964     073E                     l1446:
   965                           
   966                           ;main_M.c: 86:        PORTB = VAL1;
   967     073E  083B               	movf	main@VAL1,w
   968     073F  0086               	movwf	6	;volatile
   969     0740                     l1448:
   970                           
   971                           ;main_M.c: 88:        _delay((unsigned long)((1)*(4000000/4000.0)));
   972     0740  30C7               	movlw	199
   973     0741  1283               	bcf	3,5	;RP0=0, select bank0
   974     0742  1303               	bcf	3,6	;RP1=0, select bank0
   975     0743  00AD               	movwf	??_main
   976     0744                     u1047:
   977     0744  2F45               	nop2
   978     0745  0BAD               	decfsz	??_main,f
   979     0746  2F44               	goto	u1047
   980     0747  2F48               	nop2
   981     0748                     l1450:
   982                           
   983                           ;main_M.c: 89:        PORTCbits.RC2 = 1;
   984     0748  1283               	bcf	3,5	;RP0=0, select bank0
   985     0749  1303               	bcf	3,6	;RP1=0, select bank0
   986     074A  1507               	bsf	7,2	;volatile
   987     074B                     l1452:
   988                           
   989                           ;main_M.c: 91:       VAL1_C = (VAL1/100);
   990     074B  3064               	movlw	100
   991     074C  00F0               	movwf	___awdiv@divisor
   992     074D  3000               	movlw	0
   993     074E  00F1               	movwf	___awdiv@divisor+1
   994     074F  083B               	movf	main@VAL1,w
   995     0750  00AD               	movwf	??_main
   996     0751  01AE               	clrf	??_main+1
   997     0752  082D               	movf	??_main,w
   998     0753  00F2               	movwf	___awdiv@dividend
   999     0754  082E               	movf	??_main+1,w
  1000     0755  00F3               	movwf	___awdiv@dividend+1
  1001     0756  120A  118A  25BE  120A  118A  	fcall	___awdiv
  1002     075B  0870               	movf	?___awdiv,w
  1003     075C  1283               	bcf	3,5	;RP0=0, select bank0
  1004     075D  1303               	bcf	3,6	;RP1=0, select bank0
  1005     075E  00BA               	movwf	main@VAL1_C
  1006     075F                     l1454:
  1007                           
  1008                           ;main_M.c: 92:       VAL1_D = (VAL1/10)%10;
  1009     075F  300A               	movlw	10
  1010     0760  00F9               	movwf	___awmod@divisor
  1011     0761  3000               	movlw	0
  1012     0762  00FA               	movwf	___awmod@divisor+1
  1013     0763  300A               	movlw	10
  1014     0764  00F0               	movwf	___awdiv@divisor
  1015     0765  3000               	movlw	0
  1016     0766  00F1               	movwf	___awdiv@divisor+1
  1017     0767  083B               	movf	main@VAL1,w
  1018     0768  00AD               	movwf	??_main
  1019     0769  01AE               	clrf	??_main+1
  1020     076A  082D               	movf	??_main,w
  1021     076B  00F2               	movwf	___awdiv@dividend
  1022     076C  082E               	movf	??_main+1,w
  1023     076D  00F3               	movwf	___awdiv@dividend+1
  1024     076E  120A  118A  25BE  120A  118A  	fcall	___awdiv
  1025     0773  0871               	movf	?___awdiv+1,w
  1026     0774  00FC               	movwf	___awmod@dividend+1
  1027     0775  0870               	movf	?___awdiv,w
  1028     0776  00FB               	movwf	___awmod@dividend
  1029     0777  120A  118A  2506  120A  118A  	fcall	___awmod
  1030     077C  0879               	movf	?___awmod,w
  1031     077D  1283               	bcf	3,5	;RP0=0, select bank0
  1032     077E  1303               	bcf	3,6	;RP1=0, select bank0
  1033     077F  00B9               	movwf	main@VAL1_D
  1034     0780                     l1456:
  1035                           
  1036                           ;main_M.c: 93:       VAL1_U = VAL1%10;
  1037     0780  300A               	movlw	10
  1038     0781  00F9               	movwf	___awmod@divisor
  1039     0782  3000               	movlw	0
  1040     0783  00FA               	movwf	___awmod@divisor+1
  1041     0784  083B               	movf	main@VAL1,w
  1042     0785  00AD               	movwf	??_main
  1043     0786  01AE               	clrf	??_main+1
  1044     0787  082D               	movf	??_main,w
  1045     0788  00FB               	movwf	___awmod@dividend
  1046     0789  082E               	movf	??_main+1,w
  1047     078A  00FC               	movwf	___awmod@dividend+1
  1048     078B  120A  118A  2506  120A  118A  	fcall	___awmod
  1049     0790  0879               	movf	?___awmod,w
  1050     0791  1283               	bcf	3,5	;RP0=0, select bank0
  1051     0792  1303               	bcf	3,6	;RP1=0, select bank0
  1052     0793  00B8               	movwf	main@VAL1_U
  1053     0794                     l1458:
  1054                           
  1055                           ;main_M.c: 95:       sprintf(ADC1, "%u", VAL1_C);
  1056     0794  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1057     0795  00A0               	movwf	sprintf@f
  1058     0796  083A               	movf	main@VAL1_C,w
  1059     0797  00AD               	movwf	??_main
  1060     0798  01AE               	clrf	??_main+1
  1061     0799  082D               	movf	??_main,w
  1062     079A  00A1               	movwf	?_sprintf+1
  1063     079B  082E               	movf	??_main+1,w
  1064     079C  00A2               	movwf	?_sprintf+2
  1065     079D  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1066     079E  120A  118A  2625  120A  118A  	fcall	_sprintf
  1067     07A3                     l1460:
  1068                           
  1069                           ;main_M.c: 96:       Lcd_Set_Cursor_4bits(2,1);
  1070     07A3  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1071     07A4  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1072     07A5  3002               	movlw	2
  1073     07A6  120A  118A  24C0  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1074     07AB                     l1462:
  1075                           
  1076                           ;main_M.c: 97:       Lcd_Write_String_4bits(ADC1);
  1077     07AB  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1078     07AC  00F5               	movwf	Lcd_Write_String_4bits@a
  1079     07AD  3000               	movlw	0
  1080     07AE  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1081     07AF  120A  118A  243A  120A  118A  	fcall	_Lcd_Write_String_4bits
  1082     07B4                     l1464:
  1083                           
  1084                           ;main_M.c: 99:       sprintf(ADC1, "%u", VAL1_D);
  1085     07B4  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1086     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1087     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1088     07B7  00A0               	movwf	sprintf@f
  1089     07B8  0839               	movf	main@VAL1_D,w
  1090     07B9  00AD               	movwf	??_main
  1091     07BA  01AE               	clrf	??_main+1
  1092     07BB  082D               	movf	??_main,w
  1093     07BC  00A1               	movwf	?_sprintf+1
  1094     07BD  082E               	movf	??_main+1,w
  1095     07BE  00A2               	movwf	?_sprintf+2
  1096     07BF  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1097     07C0  120A  118A  2625  120A  118A  	fcall	_sprintf
  1098     07C5                     l1466:
  1099                           
  1100                           ;main_M.c: 100:       Lcd_Set_Cursor_4bits(2,2);
  1101     07C5  3002               	movlw	2
  1102     07C6  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1103     07C7  3002               	movlw	2
  1104     07C8  120A  118A  24C0  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1105     07CD                     l1468:
  1106                           
  1107                           ;main_M.c: 101:       Lcd_Write_String_4bits(ADC1);
  1108     07CD  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1109     07CE  00F5               	movwf	Lcd_Write_String_4bits@a
  1110     07CF  3000               	movlw	0
  1111     07D0  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1112     07D1  120A  118A  243A  120A  118A  	fcall	_Lcd_Write_String_4bits
  1113     07D6                     l1470:
  1114                           
  1115                           ;main_M.c: 103:       sprintf(ADC1, "%u", VAL1_U);
  1116     07D6  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1117     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1118     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1119     07D9  00A0               	movwf	sprintf@f
  1120     07DA  0838               	movf	main@VAL1_U,w
  1121     07DB  00AD               	movwf	??_main
  1122     07DC  01AE               	clrf	??_main+1
  1123     07DD  082D               	movf	??_main,w
  1124     07DE  00A1               	movwf	?_sprintf+1
  1125     07DF  082E               	movf	??_main+1,w
  1126     07E0  00A2               	movwf	?_sprintf+2
  1127     07E1  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1128     07E2  120A  118A  2625  120A  118A  	fcall	_sprintf
  1129     07E7                     l1472:
  1130                           
  1131                           ;main_M.c: 104:       Lcd_Set_Cursor_4bits(2,3);
  1132     07E7  3003               	movlw	3
  1133     07E8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1134     07E9  3002               	movlw	2
  1135     07EA  120A  118A  24C0  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1136     07EF                     l1474:
  1137                           
  1138                           ;main_M.c: 105:       Lcd_Write_String_4bits(ADC1);
  1139     07EF  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1140     07F0  00F5               	movwf	Lcd_Write_String_4bits@a
  1141     07F1  3000               	movlw	0
  1142     07F2  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1143     07F3  120A  118A  243A  120A  118A  	fcall	_Lcd_Write_String_4bits
  1144     07F8  2F23               	goto	l1438
  1145     07F9  120A  118A  2800   	ljmp	start
  1146     07FC                     __end_of_main:
  1147                           
  1148                           	psect	text1
  1149     0625                     __ptext1:	
  1150 ;; *************** function _sprintf *****************
  1151 ;; Defined at:
  1152 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  sp              1    wreg     PTR unsigned char 
  1155 ;;		 -> main@ADC1(9), 
  1156 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1157 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1160 ;;		 -> main@ADC1(9), 
  1161 ;;  tmpval          4    0        struct .
  1162 ;;  val             2    8[BANK0 ] unsigned int 
  1163 ;;  cp              2    0        PTR const unsigned char 
  1164 ;;  len             2    0        unsigned int 
  1165 ;;  c               1   12[BANK0 ] unsigned char 
  1166 ;;  prec            1   10[BANK0 ] char 
  1167 ;;  ap              1    7[BANK0 ] PTR void [1]
  1168 ;;		 -> ?_sprintf(2), 
  1169 ;;  flag            1    6[BANK0 ] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2    0[BANK0 ] int 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       3       0       0       0
  1180 ;;      Locals:         0       7       0       0       0
  1181 ;;      Temps:          0       3       0       0       0
  1182 ;;      Totals:         0      13       0       0       0
  1183 ;;Total ram usage:       13 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 1
  1186 ;; This function calls:
  1187 ;;		___lwdiv
  1188 ;;		___lwmod
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194     0625                     _sprintf:	
  1195                           ;psect for function _sprintf
  1196                           
  1197                           
  1198                           ;incstack = 0
  1199                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1200                           ;sprintf@sp stored from wreg
  1201     0625  1283               	bcf	3,5	;RP0=0, select bank0
  1202     0626  1303               	bcf	3,6	;RP1=0, select bank0
  1203     0627  00AB               	movwf	sprintf@sp
  1204     0628                     l1290:
  1205                           
  1206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1207     0628  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1208     0629  00A7               	movwf	sprintf@ap
  1209                           
  1210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1211     062A  2ED1               	goto	l1332
  1212     062B                     l1292:
  1213                           
  1214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1215     062B  3025               	movlw	37
  1216     062C  062C               	xorwf	sprintf@c,w
  1217     062D  1903               	btfsc	3,2
  1218     062E  2E30               	goto	u791
  1219     062F  2E31               	goto	u790
  1220     0630                     u791:
  1221     0630  2E3B               	goto	l1298
  1222     0631                     u790:
  1223     0631                     l1294:
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1226     0631  082B               	movf	sprintf@sp,w
  1227     0632  0084               	movwf	4
  1228     0633  082C               	movf	sprintf@c,w
  1229     0634  1383               	bcf	3,7	;select IRP bank0
  1230     0635  0080               	movwf	0
  1231     0636                     l1296:
  1232     0636  3001               	movlw	1
  1233     0637  00A3               	movwf	??_sprintf
  1234     0638  0823               	movf	??_sprintf,w
  1235     0639  07AB               	addwf	sprintf@sp,f
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1238     063A  2ED1               	goto	l1332
  1239     063B                     l1298:
  1240                           
  1241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1242     063B  01A6               	clrf	sprintf@flag
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1245     063C  2E42               	goto	l1304
  1246     063D                     l1300:
  1247                           
  1248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1249     063D  30C0               	movlw	192
  1250     063E  00A3               	movwf	??_sprintf
  1251     063F  0823               	movf	??_sprintf,w
  1252     0640  04A6               	iorwf	sprintf@flag,f
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1255     0641  2E5C               	goto	l1306
  1256     0642                     l1304:
  1257     0642  3001               	movlw	1
  1258     0643  07A0               	addwf	sprintf@f,f
  1259     0644  30FF               	movlw	-1
  1260     0645  0720               	addwf	sprintf@f,w
  1261     0646  0084               	movwf	4
  1262     0647  120A  118A  200D  120A  118A  	fcall	stringdir
  1263     064C  00AC               	movwf	sprintf@c
  1264     064D  00A3               	movwf	??_sprintf
  1265     064E  01A4               	clrf	??_sprintf+1
  1266                           
  1267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1268                           ; Switch size 1, requested type "simple"
  1269                           ; Number of cases is 1, Range of values is 0 to 0
  1270                           ; switch strategies available:
  1271                           ; Name         Instructions Cycles
  1272                           ; simple_byte            4     3 (average)
  1273                           ; direct_byte           11     8 (fixed)
  1274                           ; jumptable            260     6 (fixed)
  1275                           ;	Chosen strategy is simple_byte
  1276     064F  0824               	movf	??_sprintf+1,w
  1277     0650  3A00               	xorlw	0	; case 0
  1278     0651  1903               	skipnz
  1279     0652  2E54               	goto	l1496
  1280     0653  2ED1               	goto	l1332
  1281     0654                     l1496:
  1282                           
  1283                           ; Switch size 1, requested type "simple"
  1284                           ; Number of cases is 2, Range of values is 0 to 117
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte            7     4 (average)
  1288                           ; jumptable            260     6 (fixed)
  1289                           ;	Chosen strategy is simple_byte
  1290     0654  0823               	movf	??_sprintf,w
  1291     0655  3A00               	xorlw	0	; case 0
  1292     0656  1903               	skipnz
  1293     0657  2EE1               	goto	l1334
  1294     0658  3A75               	xorlw	117	; case 117
  1295     0659  1903               	skipnz
  1296     065A  2E3D               	goto	l1300
  1297     065B  2ED1               	goto	l1332
  1298     065C                     l1306:
  1299                           
  1300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1301     065C  0827               	movf	sprintf@ap,w
  1302     065D  0084               	movwf	4
  1303     065E  1383               	bcf	3,7	;select IRP bank0
  1304     065F  0800               	movf	0,w
  1305     0660  00A8               	movwf	sprintf@val
  1306     0661  0A84               	incf	4,f
  1307     0662  0800               	movf	0,w
  1308     0663  00A9               	movwf	sprintf@val+1
  1309     0664                     l1308:
  1310     0664  3002               	movlw	2
  1311     0665  00A3               	movwf	??_sprintf
  1312     0666  0823               	movf	??_sprintf,w
  1313     0667  07A7               	addwf	sprintf@ap,f
  1314     0668                     l1310:
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1317     0668  01AC               	clrf	sprintf@c
  1318     0669  0AAC               	incf	sprintf@c,f
  1319     066A                     l1316:
  1320                           
  1321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1322     066A  082C               	movf	sprintf@c,w
  1323     066B  00A3               	movwf	??_sprintf
  1324     066C  0723               	addwf	??_sprintf,w
  1325     066D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1326     066E  0084               	movwf	4
  1327     066F  120A  118A  200D  120A  118A  	fcall	stringdir
  1328     0674  00A4               	movwf	??_sprintf+1
  1329     0675  120A  118A  200D  120A  118A  	fcall	stringdir
  1330     067A  00A5               	movwf	??_sprintf+2
  1331     067B  0825               	movf	??_sprintf+2,w
  1332     067C  0229               	subwf	sprintf@val+1,w
  1333     067D  1D03               	skipz
  1334     067E  2E81               	goto	u805
  1335     067F  0824               	movf	??_sprintf+1,w
  1336     0680  0228               	subwf	sprintf@val,w
  1337     0681                     u805:
  1338     0681  1803               	skipnc
  1339     0682  2E84               	goto	u801
  1340     0683  2E85               	goto	u800
  1341     0684                     u801:
  1342     0684  2E86               	goto	l1320
  1343     0685                     u800:
  1344     0685  2E90               	goto	l1322
  1345     0686                     l1320:
  1346     0686  3001               	movlw	1
  1347     0687  00A3               	movwf	??_sprintf
  1348     0688  0823               	movf	??_sprintf,w
  1349     0689  07AC               	addwf	sprintf@c,f
  1350     068A  3005               	movlw	5
  1351     068B  062C               	xorwf	sprintf@c,w
  1352     068C  1D03               	btfss	3,2
  1353     068D  2E8F               	goto	u811
  1354     068E  2E90               	goto	u810
  1355     068F                     u811:
  1356     068F  2E6A               	goto	l1316
  1357     0690                     u810:
  1358     0690                     l1322:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1361     0690  082C               	movf	sprintf@c,w
  1362     0691  00AA               	movwf	sprintf@prec
  1363                           
  1364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1365     0692  2EC8               	goto	l1330
  1366     0693                     l1324:
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1369     0693  300A               	movlw	10
  1370     0694  00F8               	movwf	___lwmod@divisor
  1371     0695  3000               	movlw	0
  1372     0696  00F9               	movwf	___lwmod@divisor+1
  1373     0697  082A               	movf	sprintf@prec,w
  1374     0698  00A3               	movwf	??_sprintf
  1375     0699  0723               	addwf	??_sprintf,w
  1376     069A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1377     069B  0084               	movwf	4
  1378     069C  120A  118A  200D  120A  118A  	fcall	stringdir
  1379     06A1  00F0               	movwf	___lwdiv@divisor
  1380     06A2  120A  118A  200D  120A  118A  	fcall	stringdir
  1381     06A7  00F1               	movwf	___lwdiv@divisor+1
  1382     06A8  0829               	movf	sprintf@val+1,w
  1383     06A9  00F3               	movwf	___lwdiv@dividend+1
  1384     06AA  0828               	movf	sprintf@val,w
  1385     06AB  00F2               	movwf	___lwdiv@dividend
  1386     06AC  120A  118A  247C  120A  118A  	fcall	___lwdiv
  1387     06B1  0871               	movf	?___lwdiv+1,w
  1388     06B2  00FB               	movwf	___lwmod@dividend+1
  1389     06B3  0870               	movf	?___lwdiv,w
  1390     06B4  00FA               	movwf	___lwmod@dividend
  1391     06B5  120A  118A  2400  120A  118A  	fcall	___lwmod
  1392     06BA  0878               	movf	?___lwmod,w
  1393     06BB  3E30               	addlw	48
  1394     06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1395     06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1396     06BE  00AC               	movwf	sprintf@c
  1397     06BF                     l1326:
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1400     06BF  082B               	movf	sprintf@sp,w
  1401     06C0  0084               	movwf	4
  1402     06C1  082C               	movf	sprintf@c,w
  1403     06C2  1383               	bcf	3,7	;select IRP bank0
  1404     06C3  0080               	movwf	0
  1405     06C4                     l1328:
  1406     06C4  3001               	movlw	1
  1407     06C5  00A3               	movwf	??_sprintf
  1408     06C6  0823               	movf	??_sprintf,w
  1409     06C7  07AB               	addwf	sprintf@sp,f
  1410     06C8                     l1330:
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1413     06C8  30FF               	movlw	255
  1414     06C9  00A3               	movwf	??_sprintf
  1415     06CA  0823               	movf	??_sprintf,w
  1416     06CB  07AA               	addwf	sprintf@prec,f
  1417     06CC  0A2A               	incf	sprintf@prec,w
  1418     06CD  1D03               	btfss	3,2
  1419     06CE  2ED0               	goto	u821
  1420     06CF  2ED1               	goto	u820
  1421     06D0                     u821:
  1422     06D0  2E93               	goto	l1324
  1423     06D1                     u820:
  1424     06D1                     l1332:
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1427     06D1  3001               	movlw	1
  1428     06D2  07A0               	addwf	sprintf@f,f
  1429     06D3  30FF               	movlw	-1
  1430     06D4  0720               	addwf	sprintf@f,w
  1431     06D5  0084               	movwf	4
  1432     06D6  120A  118A  200D  120A  118A  	fcall	stringdir
  1433     06DB  00AC               	movwf	sprintf@c
  1434     06DC  082C               	movf	sprintf@c,w
  1435     06DD  1D03               	btfss	3,2
  1436     06DE  2EE0               	goto	u831
  1437     06DF  2EE1               	goto	u830
  1438     06E0                     u831:
  1439     06E0  2E2B               	goto	l1292
  1440     06E1                     u830:
  1441     06E1                     l1334:
  1442                           
  1443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1444     06E1  082B               	movf	sprintf@sp,w
  1445     06E2  0084               	movwf	4
  1446     06E3  1383               	bcf	3,7	;select IRP bank0
  1447     06E4  0180               	clrf	0
  1448     06E5                     l240:
  1449     06E5  0008               	return
  1450     06E6                     __end_of_sprintf:
  1451                           
  1452                           	psect	text2
  1453     0400                     __ptext2:	
  1454 ;; *************** function ___lwmod *****************
  1455 ;; Defined at:
  1456 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  divisor         2    8[COMMON] unsigned int 
  1459 ;;  dividend        2   10[COMMON] unsigned int 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  counter         1   13[COMMON] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  2    8[COMMON] unsigned int 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         4       0       0       0       0
  1472 ;;      Locals:         1       0       0       0       0
  1473 ;;      Temps:          1       0       0       0       0
  1474 ;;      Totals:         6       0       0       0       0
  1475 ;;Total ram usage:        6 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_sprintf
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484     0400                     ___lwmod:	
  1485                           ;psect for function ___lwmod
  1486                           
  1487     0400                     l1218:	
  1488                           ;incstack = 0
  1489                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1490                           
  1491     0400  0878               	movf	___lwmod@divisor,w
  1492     0401  0479               	iorwf	___lwmod@divisor+1,w
  1493     0402  1903               	btfsc	3,2
  1494     0403  2C05               	goto	u661
  1495     0404  2C06               	goto	u660
  1496     0405                     u661:
  1497     0405  2C35               	goto	l1236
  1498     0406                     u660:
  1499     0406                     l1220:
  1500     0406  01FD               	clrf	___lwmod@counter
  1501     0407  0AFD               	incf	___lwmod@counter,f
  1502     0408  2C14               	goto	l1226
  1503     0409                     l1222:
  1504     0409  3001               	movlw	1
  1505     040A                     u675:
  1506     040A  1003               	clrc
  1507     040B  0DF8               	rlf	___lwmod@divisor,f
  1508     040C  0DF9               	rlf	___lwmod@divisor+1,f
  1509     040D  3EFF               	addlw	-1
  1510     040E  1D03               	skipz
  1511     040F  2C0A               	goto	u675
  1512     0410                     l1224:
  1513     0410  3001               	movlw	1
  1514     0411  00FC               	movwf	??___lwmod
  1515     0412  087C               	movf	??___lwmod,w
  1516     0413  07FD               	addwf	___lwmod@counter,f
  1517     0414                     l1226:
  1518     0414  1FF9               	btfss	___lwmod@divisor+1,7
  1519     0415  2C17               	goto	u681
  1520     0416  2C18               	goto	u680
  1521     0417                     u681:
  1522     0417  2C09               	goto	l1222
  1523     0418                     u680:
  1524     0418                     l1228:
  1525     0418  0879               	movf	___lwmod@divisor+1,w
  1526     0419  027B               	subwf	___lwmod@dividend+1,w
  1527     041A  1D03               	skipz
  1528     041B  2C1E               	goto	u695
  1529     041C  0878               	movf	___lwmod@divisor,w
  1530     041D  027A               	subwf	___lwmod@dividend,w
  1531     041E                     u695:
  1532     041E  1C03               	skipc
  1533     041F  2C21               	goto	u691
  1534     0420  2C22               	goto	u690
  1535     0421                     u691:
  1536     0421  2C28               	goto	l1232
  1537     0422                     u690:
  1538     0422                     l1230:
  1539     0422  0878               	movf	___lwmod@divisor,w
  1540     0423  02FA               	subwf	___lwmod@dividend,f
  1541     0424  0879               	movf	___lwmod@divisor+1,w
  1542     0425  1C03               	skipc
  1543     0426  03FB               	decf	___lwmod@dividend+1,f
  1544     0427  02FB               	subwf	___lwmod@dividend+1,f
  1545     0428                     l1232:
  1546     0428  3001               	movlw	1
  1547     0429                     u705:
  1548     0429  1003               	clrc
  1549     042A  0CF9               	rrf	___lwmod@divisor+1,f
  1550     042B  0CF8               	rrf	___lwmod@divisor,f
  1551     042C  3EFF               	addlw	-1
  1552     042D  1D03               	skipz
  1553     042E  2C29               	goto	u705
  1554     042F                     l1234:
  1555     042F  3001               	movlw	1
  1556     0430  02FD               	subwf	___lwmod@counter,f
  1557     0431  1D03               	btfss	3,2
  1558     0432  2C34               	goto	u711
  1559     0433  2C35               	goto	u710
  1560     0434                     u711:
  1561     0434  2C18               	goto	l1228
  1562     0435                     u710:
  1563     0435                     l1236:
  1564     0435  087B               	movf	___lwmod@dividend+1,w
  1565     0436  00F9               	movwf	?___lwmod+1
  1566     0437  087A               	movf	___lwmod@dividend,w
  1567     0438  00F8               	movwf	?___lwmod
  1568     0439                     l526:
  1569     0439  0008               	return
  1570     043A                     __end_of___lwmod:
  1571                           
  1572                           	psect	text3
  1573     047C                     __ptext3:	
  1574 ;; *************** function ___lwdiv *****************
  1575 ;; Defined at:
  1576 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  divisor         2    0[COMMON] unsigned int 
  1579 ;;  dividend        2    2[COMMON] unsigned int 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  quotient        2    5[COMMON] unsigned int 
  1582 ;;  counter         1    7[COMMON] unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2    0[COMMON] unsigned int 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1592 ;;      Params:         4       0       0       0       0
  1593 ;;      Locals:         3       0       0       0       0
  1594 ;;      Temps:          1       0       0       0       0
  1595 ;;      Totals:         8       0       0       0       0
  1596 ;;Total ram usage:        8 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_sprintf
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605     047C                     ___lwdiv:	
  1606                           ;psect for function ___lwdiv
  1607                           
  1608     047C                     l1192:	
  1609                           ;incstack = 0
  1610                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1611                           
  1612     047C  01F5               	clrf	___lwdiv@quotient
  1613     047D  01F6               	clrf	___lwdiv@quotient+1
  1614     047E                     l1194:
  1615     047E  0870               	movf	___lwdiv@divisor,w
  1616     047F  0471               	iorwf	___lwdiv@divisor+1,w
  1617     0480  1903               	btfsc	3,2
  1618     0481  2C83               	goto	u591
  1619     0482  2C84               	goto	u590
  1620     0483                     u591:
  1621     0483  2CBB               	goto	l1214
  1622     0484                     u590:
  1623     0484                     l1196:
  1624     0484  01F7               	clrf	___lwdiv@counter
  1625     0485  0AF7               	incf	___lwdiv@counter,f
  1626     0486  2C92               	goto	l1202
  1627     0487                     l1198:
  1628     0487  3001               	movlw	1
  1629     0488                     u605:
  1630     0488  1003               	clrc
  1631     0489  0DF0               	rlf	___lwdiv@divisor,f
  1632     048A  0DF1               	rlf	___lwdiv@divisor+1,f
  1633     048B  3EFF               	addlw	-1
  1634     048C  1D03               	skipz
  1635     048D  2C88               	goto	u605
  1636     048E                     l1200:
  1637     048E  3001               	movlw	1
  1638     048F  00F4               	movwf	??___lwdiv
  1639     0490  0874               	movf	??___lwdiv,w
  1640     0491  07F7               	addwf	___lwdiv@counter,f
  1641     0492                     l1202:
  1642     0492  1FF1               	btfss	___lwdiv@divisor+1,7
  1643     0493  2C95               	goto	u611
  1644     0494  2C96               	goto	u610
  1645     0495                     u611:
  1646     0495  2C87               	goto	l1198
  1647     0496                     u610:
  1648     0496                     l1204:
  1649     0496  3001               	movlw	1
  1650     0497                     u625:
  1651     0497  1003               	clrc
  1652     0498  0DF5               	rlf	___lwdiv@quotient,f
  1653     0499  0DF6               	rlf	___lwdiv@quotient+1,f
  1654     049A  3EFF               	addlw	-1
  1655     049B  1D03               	skipz
  1656     049C  2C97               	goto	u625
  1657     049D  0871               	movf	___lwdiv@divisor+1,w
  1658     049E  0273               	subwf	___lwdiv@dividend+1,w
  1659     049F  1D03               	skipz
  1660     04A0  2CA3               	goto	u635
  1661     04A1  0870               	movf	___lwdiv@divisor,w
  1662     04A2  0272               	subwf	___lwdiv@dividend,w
  1663     04A3                     u635:
  1664     04A3  1C03               	skipc
  1665     04A4  2CA6               	goto	u631
  1666     04A5  2CA7               	goto	u630
  1667     04A6                     u631:
  1668     04A6  2CAE               	goto	l1210
  1669     04A7                     u630:
  1670     04A7                     l1206:
  1671     04A7  0870               	movf	___lwdiv@divisor,w
  1672     04A8  02F2               	subwf	___lwdiv@dividend,f
  1673     04A9  0871               	movf	___lwdiv@divisor+1,w
  1674     04AA  1C03               	skipc
  1675     04AB  03F3               	decf	___lwdiv@dividend+1,f
  1676     04AC  02F3               	subwf	___lwdiv@dividend+1,f
  1677     04AD                     l1208:
  1678     04AD  1475               	bsf	___lwdiv@quotient,0
  1679     04AE                     l1210:
  1680     04AE  3001               	movlw	1
  1681     04AF                     u645:
  1682     04AF  1003               	clrc
  1683     04B0  0CF1               	rrf	___lwdiv@divisor+1,f
  1684     04B1  0CF0               	rrf	___lwdiv@divisor,f
  1685     04B2  3EFF               	addlw	-1
  1686     04B3  1D03               	skipz
  1687     04B4  2CAF               	goto	u645
  1688     04B5                     l1212:
  1689     04B5  3001               	movlw	1
  1690     04B6  02F7               	subwf	___lwdiv@counter,f
  1691     04B7  1D03               	btfss	3,2
  1692     04B8  2CBA               	goto	u651
  1693     04B9  2CBB               	goto	u650
  1694     04BA                     u651:
  1695     04BA  2C96               	goto	l1204
  1696     04BB                     u650:
  1697     04BB                     l1214:
  1698     04BB  0876               	movf	___lwdiv@quotient+1,w
  1699     04BC  00F1               	movwf	?___lwdiv+1
  1700     04BD  0875               	movf	___lwdiv@quotient,w
  1701     04BE  00F0               	movwf	?___lwdiv
  1702     04BF                     l516:
  1703     04BF  0008               	return
  1704     04C0                     __end_of___lwdiv:
  1705                           
  1706                           	psect	text4
  1707     0322                     __ptext4:	
  1708 ;; *************** function _spiWrite *****************
  1709 ;; Defined at:
  1710 ;;		line 34 in file "configSPI.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  dat             1    wreg     unsigned char 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  dat             1    0[COMMON] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1724 ;;      Params:         0       0       0       0       0
  1725 ;;      Locals:         1       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0
  1727 ;;      Totals:         1       0       0       0       0
  1728 ;;Total ram usage:        1 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737     0322                     _spiWrite:	
  1738                           ;psect for function _spiWrite
  1739                           
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _spiWrite: [wreg]
  1743                           ;spiWrite@dat stored from wreg
  1744     0322  00F0               	movwf	spiWrite@dat
  1745     0323                     l1240:
  1746                           
  1747                           ;configSPI.c: 34: void spiWrite(char dat);configSPI.c: 35: {;configSPI.c: 36:     SSPBUF
      +                           = dat;
  1748     0323  0870               	movf	spiWrite@dat,w
  1749     0324  1283               	bcf	3,5	;RP0=0, select bank0
  1750     0325  1303               	bcf	3,6	;RP1=0, select bank0
  1751     0326  0093               	movwf	19	;volatile
  1752     0327                     l26:
  1753     0327  0008               	return
  1754     0328                     __end_of_spiWrite:
  1755                           
  1756                           	psect	text5
  1757     032F                     __ptext5:	
  1758 ;; *************** function _spiRead *****************
  1759 ;; Defined at:
  1760 ;;		line 47 in file "configSPI.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      unsigned char 
  1767 ;; Registers used:
  1768 ;;		wreg, status,2, status,0, pclath, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1774 ;;      Params:         0       0       0       0       0
  1775 ;;      Locals:         0       0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0
  1777 ;;      Totals:         0       0       0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 1
  1781 ;; This function calls:
  1782 ;;		_spiReceiveWait
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788     032F                     _spiRead:	
  1789                           ;psect for function _spiRead
  1790                           
  1791     032F                     l1242:	
  1792                           ;incstack = 0
  1793                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1794                           
  1795                           
  1796                           ;configSPI.c: 49:     spiReceiveWait();
  1797     032F  120A  118A  2328  120A  118A  	fcall	_spiReceiveWait
  1798     0334                     l1244:
  1799                           
  1800                           ;configSPI.c: 50:     return(SSPBUF);
  1801     0334  1283               	bcf	3,5	;RP0=0, select bank0
  1802     0335  1303               	bcf	3,6	;RP1=0, select bank0
  1803     0336  0813               	movf	19,w	;volatile
  1804     0337                     l34:
  1805     0337  0008               	return
  1806     0338                     __end_of_spiRead:
  1807                           
  1808                           	psect	text6
  1809     0328                     __ptext6:	
  1810 ;; *************** function _spiReceiveWait *****************
  1811 ;; Defined at:
  1812 ;;		line 29 in file "configSPI.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		None
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0
  1829 ;;      Totals:         0       0       0       0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_spiRead
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839     0328                     _spiReceiveWait:	
  1840                           ;psect for function _spiReceiveWait
  1841                           
  1842     0328                     l1156:	
  1843                           ;incstack = 0
  1844                           ; Regs used in _spiReceiveWait: []
  1845                           
  1846     0328                     l20:	
  1847                           ;configSPI.c: 31:     while ( !SSPSTATbits.BF );
  1848                           
  1849     0328  1683               	bsf	3,5	;RP0=1, select bank1
  1850     0329  1303               	bcf	3,6	;RP1=0, select bank1
  1851     032A  1C14               	btfss	20,0	;volatile
  1852     032B  2B2D               	goto	u571
  1853     032C  2B2E               	goto	u570
  1854     032D                     u571:
  1855     032D  2B28               	goto	l20
  1856     032E                     u570:
  1857     032E                     l23:
  1858     032E  0008               	return
  1859     032F                     __end_of_spiReceiveWait:
  1860                           
  1861                           	psect	text7
  1862     03A4                     __ptext7:	
  1863 ;; *************** function _setup *****************
  1864 ;; Defined at:
  1865 ;;		line 114 in file "main_M.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0, pclath, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1879 ;;      Params:         0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 3
  1886 ;; This function calls:
  1887 ;;		_Lcd_Init_4bits
  1888 ;;		_setupINTOSC
  1889 ;;		_spiInit
  1890 ;; This function is called by:
  1891 ;;		_main
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895     03A4                     _setup:	
  1896                           ;psect for function _setup
  1897                           
  1898     03A4                     l1278:	
  1899                           ;incstack = 0
  1900                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1901                           
  1902                           
  1903                           ;main_M.c: 116:     ANSEL = 0;
  1904     03A4  1683               	bsf	3,5	;RP0=1, select bank3
  1905     03A5  1703               	bsf	3,6	;RP1=1, select bank3
  1906     03A6  0188               	clrf	8	;volatile
  1907                           
  1908                           ;main_M.c: 117:     ANSELH = 0;
  1909     03A7  0189               	clrf	9	;volatile
  1910                           
  1911                           ;main_M.c: 119:     TRISB = 0;
  1912     03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1913     03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1914     03AA  0186               	clrf	6	;volatile
  1915                           
  1916                           ;main_M.c: 120:     TRISD = 0;
  1917     03AB  0188               	clrf	8	;volatile
  1918                           
  1919                           ;main_M.c: 122:     PORTB = 0;
  1920     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1921     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1922     03AE  0186               	clrf	6	;volatile
  1923                           
  1924                           ;main_M.c: 123:     PORTD = 0;
  1925     03AF  0188               	clrf	8	;volatile
  1926     03B0                     l1280:
  1927                           
  1928                           ;main_M.c: 125:     setupINTOSC(FOSC_4MHZ);
  1929     03B0  3006               	movlw	6
  1930     03B1  120A  118A  2345  120A  118A  	fcall	_setupINTOSC
  1931     03B6                     l1282:
  1932                           
  1933                           ;main_M.c: 126:     Lcd_Init_4bits();
  1934     03B6  120A  118A  2561  120A  118A  	fcall	_Lcd_Init_4bits
  1935     03BB                     l1284:
  1936                           
  1937                           ;main_M.c: 129:     TRISC2 = 0;
  1938     03BB  1683               	bsf	3,5	;RP0=1, select bank1
  1939     03BC  1303               	bcf	3,6	;RP1=0, select bank1
  1940     03BD  1107               	bcf	7,2	;volatile
  1941     03BE                     l1286:
  1942                           
  1943                           ;main_M.c: 130:     PORTCbits.RC2 = 1;
  1944     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1945     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1946     03C0  1507               	bsf	7,2	;volatile
  1947     03C1                     l1288:
  1948                           
  1949                           ;main_M.c: 131:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
  1950     03C1  01F0               	clrf	spiInit@sDataSample
  1951     03C2  01F1               	clrf	spiInit@sClockIdle
  1952     03C3  01F2               	clrf	spiInit@sTransmitEdge
  1953     03C4  3020               	movlw	32
  1954     03C5  120A  118A  2352  120A  118A  	fcall	_spiInit
  1955     03CA                     l133:
  1956     03CA  0008               	return
  1957     03CB                     __end_of_setup:
  1958                           
  1959                           	psect	text8
  1960     0352                     __ptext8:	
  1961 ;; *************** function _spiInit *****************
  1962 ;; Defined at:
  1963 ;;		line 12 in file "configSPI.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  sType           1    wreg     enum E1292
  1966 ;;  sDataSample     1    0[COMMON] enum E1300
  1967 ;;  sClockIdle      1    1[COMMON] enum E1304
  1968 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  sType           1    3[COMMON] enum E1292
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         3       0       0       0       0
  1981 ;;      Locals:         1       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0
  1983 ;;      Totals:         4       0       0       0       0
  1984 ;;Total ram usage:        4 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_setup
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993     0352                     _spiInit:	
  1994                           ;psect for function _spiInit
  1995                           
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1999                           ;spiInit@sType stored from wreg
  2000     0352  00F3               	movwf	spiInit@sType
  2001     0353                     l1146:
  2002                           
  2003                           ;configSPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);configSPI.c: 13: {;configSPI.c: 14:     
      +                          TRISC5 = 0;
  2004     0353  1683               	bsf	3,5	;RP0=1, select bank1
  2005     0354  1303               	bcf	3,6	;RP1=0, select bank1
  2006     0355  1287               	bcf	7,5	;volatile
  2007                           
  2008                           ;configSPI.c: 15:     if(sType & 0b00000100)
  2009     0356  1D73               	btfss	spiInit@sType,2
  2010     0357  2B59               	goto	u561
  2011     0358  2B5A               	goto	u560
  2012     0359                     u561:
  2013     0359  2B5E               	goto	l1152
  2014     035A                     u560:
  2015     035A                     l1148:
  2016                           
  2017                           ;configSPI.c: 16:     {;configSPI.c: 17:         SSPSTAT = sTransmitEdge;
  2018     035A  0872               	movf	spiInit@sTransmitEdge,w
  2019     035B  0094               	movwf	20	;volatile
  2020     035C                     l1150:
  2021                           
  2022                           ;configSPI.c: 18:         TRISC3 = 1;
  2023     035C  1587               	bsf	7,3	;volatile
  2024                           
  2025                           ;configSPI.c: 19:     }
  2026     035D  2B62               	goto	l16
  2027     035E                     l1152:
  2028                           
  2029                           ;configSPI.c: 21:     {;configSPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2030     035E  0870               	movf	spiInit@sDataSample,w
  2031     035F  0472               	iorwf	spiInit@sTransmitEdge,w
  2032     0360  0094               	movwf	20	;volatile
  2033     0361                     l1154:
  2034                           
  2035                           ;configSPI.c: 23:         TRISC3 = 0;
  2036     0361  1187               	bcf	7,3	;volatile
  2037     0362                     l16:	
  2038                           ;configSPI.c: 24:     }
  2039                           
  2040                           
  2041                           ;configSPI.c: 26:     SSPCON = sType | sClockIdle;
  2042     0362  0873               	movf	spiInit@sType,w
  2043     0363  0471               	iorwf	spiInit@sClockIdle,w
  2044     0364  1283               	bcf	3,5	;RP0=0, select bank0
  2045     0365  1303               	bcf	3,6	;RP1=0, select bank0
  2046     0366  0094               	movwf	20	;volatile
  2047     0367                     l17:
  2048     0367  0008               	return
  2049     0368                     __end_of_spiInit:
  2050                           
  2051                           	psect	text9
  2052     0345                     __ptext9:	
  2053 ;; *************** function _setupINTOSC *****************
  2054 ;; Defined at:
  2055 ;;		line 11 in file "configINTOSC.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  F               1    wreg     enum E1292
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  F               1    1[COMMON] enum E1292
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2069 ;;      Params:         0       0       0       0       0
  2070 ;;      Locals:         1       0       0       0       0
  2071 ;;      Temps:          1       0       0       0       0
  2072 ;;      Totals:         2       0       0       0       0
  2073 ;;Total ram usage:        2 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_setup
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082     0345                     _setupINTOSC:	
  2083                           ;psect for function _setupINTOSC
  2084                           
  2085                           
  2086                           ;incstack = 0
  2087                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  2088                           ;setupINTOSC@F stored from wreg
  2089     0345  00F1               	movwf	setupINTOSC@F
  2090     0346                     l1158:
  2091                           
  2092                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  2093     0346  0871               	movf	setupINTOSC@F,w
  2094     0347  00F0               	movwf	??_setupINTOSC
  2095     0348  0EF0               	swapf	??_setupINTOSC,f
  2096     0349  1683               	bsf	3,5	;RP0=1, select bank1
  2097     034A  1303               	bcf	3,6	;RP1=0, select bank1
  2098     034B  080F               	movf	15,w	;volatile
  2099     034C  0670               	xorwf	??_setupINTOSC,w
  2100     034D  398F               	andlw	-113
  2101     034E  0670               	xorwf	??_setupINTOSC,w
  2102     034F  008F               	movwf	15	;volatile
  2103     0350                     l1160:
  2104                           
  2105                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  2106     0350  140F               	bsf	15,0	;volatile
  2107     0351                     l39:
  2108     0351  0008               	return
  2109     0352                     __end_of_setupINTOSC:
  2110                           
  2111                           	psect	text10
  2112     0561                     __ptext10:	
  2113 ;; *************** function _Lcd_Init_4bits *****************
  2114 ;; Defined at:
  2115 ;;		line 66 in file "configLCD_4bits.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0
  2131 ;;      Temps:          2       0       0       0       0
  2132 ;;      Totals:         2       0       0       0       0
  2133 ;;Total ram usage:        2 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 2
  2136 ;; This function calls:
  2137 ;;		_Lcd_Cmd_4bits
  2138 ;;		_Lcd_Port_4bits
  2139 ;; This function is called by:
  2140 ;;		_setup
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144     0561                     _Lcd_Init_4bits:	
  2145                           ;psect for function _Lcd_Init_4bits
  2146                           
  2147     0561                     l1162:	
  2148                           ;incstack = 0
  2149                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  2150                           
  2151                           
  2152                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  2153     0561  3000               	movlw	0
  2154     0562  120A  118A  2382  120A  118A  	fcall	_Lcd_Port_4bits
  2155     0567                     l1164:
  2156                           
  2157                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2158     0567  3034               	movlw	52
  2159     0568  00F5               	movwf	??_Lcd_Init_4bits+1
  2160     0569  30F1               	movlw	241
  2161     056A  00F4               	movwf	??_Lcd_Init_4bits
  2162     056B                     u1057:
  2163     056B  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2164     056C  2D6B               	goto	u1057
  2165     056D  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2166     056E  2D6B               	goto	u1057
  2167     056F  2D70               	nop2
  2168     0570                     l1166:
  2169                           
  2170                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  2171     0570  3003               	movlw	3
  2172     0571  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2173                           
  2174                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2175     0576  300D               	movlw	13
  2176     0577  00F5               	movwf	??_Lcd_Init_4bits+1
  2177     0578  30FB               	movlw	251
  2178     0579  00F4               	movwf	??_Lcd_Init_4bits
  2179     057A                     u1067:
  2180     057A  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2181     057B  2D7A               	goto	u1067
  2182     057C  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2183     057D  2D7A               	goto	u1067
  2184     057E  2D7F               	nop2
  2185     057F                     l1168:
  2186                           
  2187                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  2188     057F  3003               	movlw	3
  2189     0580  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2190     0585                     l1170:
  2191                           
  2192                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2193     0585  301D               	movlw	29
  2194     0586  00F5               	movwf	??_Lcd_Init_4bits+1
  2195     0587  3091               	movlw	145
  2196     0588  00F4               	movwf	??_Lcd_Init_4bits
  2197     0589                     u1077:
  2198     0589  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2199     058A  2D89               	goto	u1077
  2200     058B  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2201     058C  2D89               	goto	u1077
  2202                           
  2203                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  2204     058D  3003               	movlw	3
  2205     058E  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2206                           
  2207                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  2208     0593  3002               	movlw	2
  2209     0594  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2210                           
  2211                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  2212     0599  3002               	movlw	2
  2213     059A  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2214                           
  2215                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  2216     059F  3008               	movlw	8
  2217     05A0  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2218                           
  2219                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  2220     05A5  3000               	movlw	0
  2221     05A6  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2222                           
  2223                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  2224     05AB  300C               	movlw	12
  2225     05AC  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2226                           
  2227                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  2228     05B1  3000               	movlw	0
  2229     05B2  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2230                           
  2231                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  2232     05B7  3006               	movlw	6
  2233     05B8  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2234     05BD                     l69:
  2235     05BD  0008               	return
  2236     05BE                     __end_of_Lcd_Init_4bits:
  2237                           
  2238                           	psect	text11
  2239     0506                     __ptext11:	
  2240 ;; *************** function ___awmod *****************
  2241 ;; Defined at:
  2242 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  divisor         2    9[COMMON] int 
  2245 ;;  dividend        2   11[COMMON] int 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  sign            1    1[BANK0 ] unsigned char 
  2248 ;;  counter         1    0[BANK0 ] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  2    9[COMMON] int 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2258 ;;      Params:         4       0       0       0       0
  2259 ;;      Locals:         0       2       0       0       0
  2260 ;;      Temps:          1       0       0       0       0
  2261 ;;      Totals:         5       2       0       0       0
  2262 ;;Total ram usage:        7 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271     0506                     ___awmod:	
  2272                           ;psect for function ___awmod
  2273                           
  2274     0506                     l1386:	
  2275                           ;incstack = 0
  2276                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2277                           
  2278     0506  1283               	bcf	3,5	;RP0=0, select bank0
  2279     0507  1303               	bcf	3,6	;RP1=0, select bank0
  2280     0508  01A1               	clrf	___awmod@sign
  2281     0509                     l1388:
  2282     0509  1FFC               	btfss	___awmod@dividend+1,7
  2283     050A  2D0C               	goto	u941
  2284     050B  2D0D               	goto	u940
  2285     050C                     u941:
  2286     050C  2D14               	goto	l1394
  2287     050D                     u940:
  2288     050D                     l1390:
  2289     050D  09FB               	comf	___awmod@dividend,f
  2290     050E  09FC               	comf	___awmod@dividend+1,f
  2291     050F  0AFB               	incf	___awmod@dividend,f
  2292     0510  1903               	skipnz
  2293     0511  0AFC               	incf	___awmod@dividend+1,f
  2294     0512                     l1392:
  2295     0512  01A1               	clrf	___awmod@sign
  2296     0513  0AA1               	incf	___awmod@sign,f
  2297     0514                     l1394:
  2298     0514  1FFA               	btfss	___awmod@divisor+1,7
  2299     0515  2D17               	goto	u951
  2300     0516  2D18               	goto	u950
  2301     0517                     u951:
  2302     0517  2D1D               	goto	l1398
  2303     0518                     u950:
  2304     0518                     l1396:
  2305     0518  09F9               	comf	___awmod@divisor,f
  2306     0519  09FA               	comf	___awmod@divisor+1,f
  2307     051A  0AF9               	incf	___awmod@divisor,f
  2308     051B  1903               	skipnz
  2309     051C  0AFA               	incf	___awmod@divisor+1,f
  2310     051D                     l1398:
  2311     051D  0879               	movf	___awmod@divisor,w
  2312     051E  047A               	iorwf	___awmod@divisor+1,w
  2313     051F  1903               	btfsc	3,2
  2314     0520  2D22               	goto	u961
  2315     0521  2D23               	goto	u960
  2316     0522                     u961:
  2317     0522  2D52               	goto	l1416
  2318     0523                     u960:
  2319     0523                     l1400:
  2320     0523  01A0               	clrf	___awmod@counter
  2321     0524  0AA0               	incf	___awmod@counter,f
  2322     0525  2D31               	goto	l1406
  2323     0526                     l1402:
  2324     0526  3001               	movlw	1
  2325     0527                     u975:
  2326     0527  1003               	clrc
  2327     0528  0DF9               	rlf	___awmod@divisor,f
  2328     0529  0DFA               	rlf	___awmod@divisor+1,f
  2329     052A  3EFF               	addlw	-1
  2330     052B  1D03               	skipz
  2331     052C  2D27               	goto	u975
  2332     052D                     l1404:
  2333     052D  3001               	movlw	1
  2334     052E  00FD               	movwf	??___awmod
  2335     052F  087D               	movf	??___awmod,w
  2336     0530  07A0               	addwf	___awmod@counter,f
  2337     0531                     l1406:
  2338     0531  1FFA               	btfss	___awmod@divisor+1,7
  2339     0532  2D34               	goto	u981
  2340     0533  2D35               	goto	u980
  2341     0534                     u981:
  2342     0534  2D26               	goto	l1402
  2343     0535                     u980:
  2344     0535                     l1408:
  2345     0535  087A               	movf	___awmod@divisor+1,w
  2346     0536  027C               	subwf	___awmod@dividend+1,w
  2347     0537  1D03               	skipz
  2348     0538  2D3B               	goto	u995
  2349     0539  0879               	movf	___awmod@divisor,w
  2350     053A  027B               	subwf	___awmod@dividend,w
  2351     053B                     u995:
  2352     053B  1C03               	skipc
  2353     053C  2D3E               	goto	u991
  2354     053D  2D3F               	goto	u990
  2355     053E                     u991:
  2356     053E  2D45               	goto	l1412
  2357     053F                     u990:
  2358     053F                     l1410:
  2359     053F  0879               	movf	___awmod@divisor,w
  2360     0540  02FB               	subwf	___awmod@dividend,f
  2361     0541  087A               	movf	___awmod@divisor+1,w
  2362     0542  1C03               	skipc
  2363     0543  03FC               	decf	___awmod@dividend+1,f
  2364     0544  02FC               	subwf	___awmod@dividend+1,f
  2365     0545                     l1412:
  2366     0545  3001               	movlw	1
  2367     0546                     u1005:
  2368     0546  1003               	clrc
  2369     0547  0CFA               	rrf	___awmod@divisor+1,f
  2370     0548  0CF9               	rrf	___awmod@divisor,f
  2371     0549  3EFF               	addlw	-1
  2372     054A  1D03               	skipz
  2373     054B  2D46               	goto	u1005
  2374     054C                     l1414:
  2375     054C  3001               	movlw	1
  2376     054D  02A0               	subwf	___awmod@counter,f
  2377     054E  1D03               	btfss	3,2
  2378     054F  2D51               	goto	u1011
  2379     0550  2D52               	goto	u1010
  2380     0551                     u1011:
  2381     0551  2D35               	goto	l1408
  2382     0552                     u1010:
  2383     0552                     l1416:
  2384     0552  0821               	movf	___awmod@sign,w
  2385     0553  1903               	btfsc	3,2
  2386     0554  2D56               	goto	u1021
  2387     0555  2D57               	goto	u1020
  2388     0556                     u1021:
  2389     0556  2D5C               	goto	l1420
  2390     0557                     u1020:
  2391     0557                     l1418:
  2392     0557  09FB               	comf	___awmod@dividend,f
  2393     0558  09FC               	comf	___awmod@dividend+1,f
  2394     0559  0AFB               	incf	___awmod@dividend,f
  2395     055A  1903               	skipnz
  2396     055B  0AFC               	incf	___awmod@dividend+1,f
  2397     055C                     l1420:
  2398     055C  087C               	movf	___awmod@dividend+1,w
  2399     055D  00FA               	movwf	?___awmod+1
  2400     055E  087B               	movf	___awmod@dividend,w
  2401     055F  00F9               	movwf	?___awmod
  2402     0560                     l410:
  2403     0560  0008               	return
  2404     0561                     __end_of___awmod:
  2405                           
  2406                           	psect	text12
  2407     05BE                     __ptext12:	
  2408 ;; *************** function ___awdiv *****************
  2409 ;; Defined at:
  2410 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  divisor         2    0[COMMON] int 
  2413 ;;  dividend        2    2[COMMON] int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  quotient        2    7[COMMON] int 
  2416 ;;  sign            1    6[COMMON] unsigned char 
  2417 ;;  counter         1    5[COMMON] unsigned char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  2    0[COMMON] int 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2427 ;;      Params:         4       0       0       0       0
  2428 ;;      Locals:         4       0       0       0       0
  2429 ;;      Temps:          1       0       0       0       0
  2430 ;;      Totals:         9       0       0       0       0
  2431 ;;Total ram usage:        9 bytes
  2432 ;; Hardware stack levels used: 1
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_main
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440     05BE                     ___awdiv:	
  2441                           ;psect for function ___awdiv
  2442                           
  2443     05BE                     l1342:	
  2444                           ;incstack = 0
  2445                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2446                           
  2447     05BE  01F6               	clrf	___awdiv@sign
  2448     05BF                     l1344:
  2449     05BF  1FF1               	btfss	___awdiv@divisor+1,7
  2450     05C0  2DC2               	goto	u841
  2451     05C1  2DC3               	goto	u840
  2452     05C2                     u841:
  2453     05C2  2DCA               	goto	l1350
  2454     05C3                     u840:
  2455     05C3                     l1346:
  2456     05C3  09F0               	comf	___awdiv@divisor,f
  2457     05C4  09F1               	comf	___awdiv@divisor+1,f
  2458     05C5  0AF0               	incf	___awdiv@divisor,f
  2459     05C6  1903               	skipnz
  2460     05C7  0AF1               	incf	___awdiv@divisor+1,f
  2461     05C8                     l1348:
  2462     05C8  01F6               	clrf	___awdiv@sign
  2463     05C9  0AF6               	incf	___awdiv@sign,f
  2464     05CA                     l1350:
  2465     05CA  1FF3               	btfss	___awdiv@dividend+1,7
  2466     05CB  2DCD               	goto	u851
  2467     05CC  2DCE               	goto	u850
  2468     05CD                     u851:
  2469     05CD  2DD7               	goto	l1356
  2470     05CE                     u850:
  2471     05CE                     l1352:
  2472     05CE  09F2               	comf	___awdiv@dividend,f
  2473     05CF  09F3               	comf	___awdiv@dividend+1,f
  2474     05D0  0AF2               	incf	___awdiv@dividend,f
  2475     05D1  1903               	skipnz
  2476     05D2  0AF3               	incf	___awdiv@dividend+1,f
  2477     05D3                     l1354:
  2478     05D3  3001               	movlw	1
  2479     05D4  00F4               	movwf	??___awdiv
  2480     05D5  0874               	movf	??___awdiv,w
  2481     05D6  06F6               	xorwf	___awdiv@sign,f
  2482     05D7                     l1356:
  2483     05D7  01F7               	clrf	___awdiv@quotient
  2484     05D8  01F8               	clrf	___awdiv@quotient+1
  2485     05D9                     l1358:
  2486     05D9  0870               	movf	___awdiv@divisor,w
  2487     05DA  0471               	iorwf	___awdiv@divisor+1,w
  2488     05DB  1903               	btfsc	3,2
  2489     05DC  2DDE               	goto	u861
  2490     05DD  2DDF               	goto	u860
  2491     05DE                     u861:
  2492     05DE  2E16               	goto	l1378
  2493     05DF                     u860:
  2494     05DF                     l1360:
  2495     05DF  01F5               	clrf	___awdiv@counter
  2496     05E0  0AF5               	incf	___awdiv@counter,f
  2497     05E1  2DED               	goto	l1366
  2498     05E2                     l1362:
  2499     05E2  3001               	movlw	1
  2500     05E3                     u875:
  2501     05E3  1003               	clrc
  2502     05E4  0DF0               	rlf	___awdiv@divisor,f
  2503     05E5  0DF1               	rlf	___awdiv@divisor+1,f
  2504     05E6  3EFF               	addlw	-1
  2505     05E7  1D03               	skipz
  2506     05E8  2DE3               	goto	u875
  2507     05E9                     l1364:
  2508     05E9  3001               	movlw	1
  2509     05EA  00F4               	movwf	??___awdiv
  2510     05EB  0874               	movf	??___awdiv,w
  2511     05EC  07F5               	addwf	___awdiv@counter,f
  2512     05ED                     l1366:
  2513     05ED  1FF1               	btfss	___awdiv@divisor+1,7
  2514     05EE  2DF0               	goto	u881
  2515     05EF  2DF1               	goto	u880
  2516     05F0                     u881:
  2517     05F0  2DE2               	goto	l1362
  2518     05F1                     u880:
  2519     05F1                     l1368:
  2520     05F1  3001               	movlw	1
  2521     05F2                     u895:
  2522     05F2  1003               	clrc
  2523     05F3  0DF7               	rlf	___awdiv@quotient,f
  2524     05F4  0DF8               	rlf	___awdiv@quotient+1,f
  2525     05F5  3EFF               	addlw	-1
  2526     05F6  1D03               	skipz
  2527     05F7  2DF2               	goto	u895
  2528     05F8  0871               	movf	___awdiv@divisor+1,w
  2529     05F9  0273               	subwf	___awdiv@dividend+1,w
  2530     05FA  1D03               	skipz
  2531     05FB  2DFE               	goto	u905
  2532     05FC  0870               	movf	___awdiv@divisor,w
  2533     05FD  0272               	subwf	___awdiv@dividend,w
  2534     05FE                     u905:
  2535     05FE  1C03               	skipc
  2536     05FF  2E01               	goto	u901
  2537     0600  2E02               	goto	u900
  2538     0601                     u901:
  2539     0601  2E09               	goto	l1374
  2540     0602                     u900:
  2541     0602                     l1370:
  2542     0602  0870               	movf	___awdiv@divisor,w
  2543     0603  02F2               	subwf	___awdiv@dividend,f
  2544     0604  0871               	movf	___awdiv@divisor+1,w
  2545     0605  1C03               	skipc
  2546     0606  03F3               	decf	___awdiv@dividend+1,f
  2547     0607  02F3               	subwf	___awdiv@dividend+1,f
  2548     0608                     l1372:
  2549     0608  1477               	bsf	___awdiv@quotient,0
  2550     0609                     l1374:
  2551     0609  3001               	movlw	1
  2552     060A                     u915:
  2553     060A  1003               	clrc
  2554     060B  0CF1               	rrf	___awdiv@divisor+1,f
  2555     060C  0CF0               	rrf	___awdiv@divisor,f
  2556     060D  3EFF               	addlw	-1
  2557     060E  1D03               	skipz
  2558     060F  2E0A               	goto	u915
  2559     0610                     l1376:
  2560     0610  3001               	movlw	1
  2561     0611  02F5               	subwf	___awdiv@counter,f
  2562     0612  1D03               	btfss	3,2
  2563     0613  2E15               	goto	u921
  2564     0614  2E16               	goto	u920
  2565     0615                     u921:
  2566     0615  2DF1               	goto	l1368
  2567     0616                     u920:
  2568     0616                     l1378:
  2569     0616  0876               	movf	___awdiv@sign,w
  2570     0617  1903               	btfsc	3,2
  2571     0618  2E1A               	goto	u931
  2572     0619  2E1B               	goto	u930
  2573     061A                     u931:
  2574     061A  2E20               	goto	l1382
  2575     061B                     u930:
  2576     061B                     l1380:
  2577     061B  09F7               	comf	___awdiv@quotient,f
  2578     061C  09F8               	comf	___awdiv@quotient+1,f
  2579     061D  0AF7               	incf	___awdiv@quotient,f
  2580     061E  1903               	skipnz
  2581     061F  0AF8               	incf	___awdiv@quotient+1,f
  2582     0620                     l1382:
  2583     0620  0878               	movf	___awdiv@quotient+1,w
  2584     0621  00F1               	movwf	?___awdiv+1
  2585     0622  0877               	movf	___awdiv@quotient,w
  2586     0623  00F0               	movwf	?___awdiv
  2587     0624                     l397:
  2588     0624  0008               	return
  2589     0625                     __end_of___awdiv:
  2590                           
  2591                           	psect	text13
  2592     043A                     __ptext13:	
  2593 ;; *************** function _Lcd_Write_String_4bits *****************
  2594 ;; Defined at:
  2595 ;;		line 99 in file "configLCD_4bits.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  a               2    5[COMMON] PTR unsigned char 
  2598 ;;		 -> main@ADC1(9), STR_3(4), STR_2(4), STR_1(4), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  i               2   10[COMMON] int 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2610 ;;      Params:         2       0       0       0       0
  2611 ;;      Locals:         2       0       0       0       0
  2612 ;;      Temps:          3       0       0       0       0
  2613 ;;      Totals:         7       0       0       0       0
  2614 ;;Total ram usage:        7 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 2
  2617 ;; This function calls:
  2618 ;;		_Lcd_Write_Char_4bits
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624     043A                     _Lcd_Write_String_4bits:	
  2625                           ;psect for function _Lcd_Write_String_4bits
  2626                           
  2627     043A                     l1270:	
  2628                           ;incstack = 0
  2629                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2630                           
  2631                           
  2632                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  2633     043A  01FA               	clrf	Lcd_Write_String_4bits@i
  2634     043B  01FB               	clrf	Lcd_Write_String_4bits@i+1
  2635     043C  2C5F               	goto	l1276
  2636     043D                     l1272:
  2637                           
  2638                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  2639     043D  087A               	movf	Lcd_Write_String_4bits@i,w
  2640     043E  0775               	addwf	Lcd_Write_String_4bits@a,w
  2641     043F  00F8               	movwf	??_Lcd_Write_String_4bits+1
  2642     0440  0876               	movf	Lcd_Write_String_4bits@a+1,w
  2643     0441  00F7               	movwf	??_Lcd_Write_String_4bits
  2644     0442  1803               	skipnc
  2645     0443  0AF7               	incf	??_Lcd_Write_String_4bits,f
  2646     0444  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  2647     0445  2C47               	goto	u760
  2648     0446  03F7               	decf	??_Lcd_Write_String_4bits,f
  2649     0447                     u760:
  2650     0447  0877               	movf	??_Lcd_Write_String_4bits,w
  2651     0448  00F9               	movwf	??_Lcd_Write_String_4bits+2
  2652     0449  0879               	movf	??_Lcd_Write_String_4bits+2,w
  2653     044A  1283               	bcf	3,5	;RP0=0, select bank0
  2654     044B  1303               	bcf	3,6	;RP1=0, select bank0
  2655     044C  00FF               	movwf	btemp+1
  2656     044D  0878               	movf	??_Lcd_Write_String_4bits+1,w
  2657     044E  0084               	movwf	4
  2658     044F  120A  118A  2003  120A  118A  	fcall	stringtab
  2659     0454  120A  118A  23CB  120A  118A  	fcall	_Lcd_Write_Char_4bits
  2660     0459                     l1274:
  2661     0459  3001               	movlw	1
  2662     045A  07FA               	addwf	Lcd_Write_String_4bits@i,f
  2663     045B  1803               	skipnc
  2664     045C  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
  2665     045D  3000               	movlw	0
  2666     045E  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
  2667     045F                     l1276:
  2668     045F  087A               	movf	Lcd_Write_String_4bits@i,w
  2669     0460  0775               	addwf	Lcd_Write_String_4bits@a,w
  2670     0461  00F8               	movwf	??_Lcd_Write_String_4bits+1
  2671     0462  0876               	movf	Lcd_Write_String_4bits@a+1,w
  2672     0463  00F7               	movwf	??_Lcd_Write_String_4bits
  2673     0464  1803               	skipnc
  2674     0465  0AF7               	incf	??_Lcd_Write_String_4bits,f
  2675     0466  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  2676     0467  2C69               	goto	u770
  2677     0468  03F7               	decf	??_Lcd_Write_String_4bits,f
  2678     0469                     u770:
  2679     0469  0877               	movf	??_Lcd_Write_String_4bits,w
  2680     046A  00F9               	movwf	??_Lcd_Write_String_4bits+2
  2681     046B  0879               	movf	??_Lcd_Write_String_4bits+2,w
  2682     046C  1283               	bcf	3,5	;RP0=0, select bank0
  2683     046D  1303               	bcf	3,6	;RP1=0, select bank0
  2684     046E  00FF               	movwf	btemp+1
  2685     046F  0878               	movf	??_Lcd_Write_String_4bits+1,w
  2686     0470  0084               	movwf	4
  2687     0471  120A  118A  2003  120A  118A  	fcall	stringtab
  2688     0476  3A00               	xorlw	0
  2689     0477  1D03               	skipz
  2690     0478  2C7A               	goto	u781
  2691     0479  2C7B               	goto	u780
  2692     047A                     u781:
  2693     047A  2C3D               	goto	l1272
  2694     047B                     u780:
  2695     047B                     l78:
  2696     047B  0008               	return
  2697     047C                     __end_of_Lcd_Write_String_4bits:
  2698                           
  2699                           	psect	text14
  2700     03CB                     __ptext14:	
  2701 ;; *************** function _Lcd_Write_Char_4bits *****************
  2702 ;; Defined at:
  2703 ;;		line 84 in file "configLCD_4bits.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  a               1    wreg     unsigned char 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  a               1    4[COMMON] unsigned char 
  2708 ;;  y               1    3[COMMON] unsigned char 
  2709 ;;  temp            1    2[COMMON] unsigned char 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0, pclath, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2719 ;;      Params:         0       0       0       0       0
  2720 ;;      Locals:         3       0       0       0       0
  2721 ;;      Temps:          1       0       0       0       0
  2722 ;;      Totals:         4       0       0       0       0
  2723 ;;Total ram usage:        4 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; Hardware stack levels required when called: 1
  2726 ;; This function calls:
  2727 ;;		_Lcd_Port_4bits
  2728 ;; This function is called by:
  2729 ;;		_Lcd_Write_String_4bits
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733     03CB                     _Lcd_Write_Char_4bits:	
  2734                           ;psect for function _Lcd_Write_Char_4bits
  2735                           
  2736                           
  2737                           ;incstack = 0
  2738                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  2739                           ;Lcd_Write_Char_4bits@a stored from wreg
  2740     03CB  00F4               	movwf	Lcd_Write_Char_4bits@a
  2741     03CC                     l1172:
  2742                           
  2743                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  2744     03CC  0874               	movf	Lcd_Write_Char_4bits@a,w
  2745     03CD  390F               	andlw	15
  2746     03CE  00F2               	movwf	Lcd_Write_Char_4bits@temp
  2747                           
  2748                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  2749     03CF  0874               	movf	Lcd_Write_Char_4bits@a,w
  2750     03D0  39F0               	andlw	240
  2751     03D1  00F3               	movwf	Lcd_Write_Char_4bits@y
  2752     03D2                     l1174:
  2753                           
  2754                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  2755     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2756     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2757     03D4  1508               	bsf	8,2	;volatile
  2758     03D5                     l1176:
  2759                           
  2760                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  2761     03D5  0873               	movf	Lcd_Write_Char_4bits@y,w
  2762     03D6  00F1               	movwf	??_Lcd_Write_Char_4bits
  2763     03D7  3004               	movlw	4
  2764     03D8                     u585:
  2765     03D8  1003               	clrc
  2766     03D9  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
  2767     03DA  3EFF               	addlw	-1
  2768     03DB  1D03               	skipz
  2769     03DC  2BD8               	goto	u585
  2770     03DD  0871               	movf	??_Lcd_Write_Char_4bits,w
  2771     03DE  120A  118A  2382  120A  118A  	fcall	_Lcd_Port_4bits
  2772     03E3                     l1178:
  2773                           
  2774                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  2775     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2776     03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2777     03E5  1588               	bsf	8,3	;volatile
  2778     03E6                     l1180:
  2779                           
  2780                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2781     03E6  301A               	movlw	26
  2782     03E7  00F1               	movwf	??_Lcd_Write_Char_4bits
  2783     03E8                     u1087:
  2784     03E8  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  2785     03E9  2BE8               	goto	u1087
  2786     03EA  0000               	nop
  2787     03EB                     l1182:
  2788                           
  2789                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  2790     03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2791     03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2792     03ED  1188               	bcf	8,3	;volatile
  2793     03EE                     l1184:
  2794                           
  2795                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  2796     03EE  0872               	movf	Lcd_Write_Char_4bits@temp,w
  2797     03EF  120A  118A  2382  120A  118A  	fcall	_Lcd_Port_4bits
  2798     03F4                     l1186:
  2799                           
  2800                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  2801     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2802     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2803     03F6  1588               	bsf	8,3	;volatile
  2804     03F7                     l1188:
  2805                           
  2806                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2807     03F7  301A               	movlw	26
  2808     03F8  00F1               	movwf	??_Lcd_Write_Char_4bits
  2809     03F9                     u1097:
  2810     03F9  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  2811     03FA  2BF9               	goto	u1097
  2812     03FB  0000               	nop
  2813     03FC                     l1190:
  2814                           
  2815                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  2816     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2817     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2818     03FE  1188               	bcf	8,3	;volatile
  2819     03FF                     l72:
  2820     03FF  0008               	return
  2821     0400                     __end_of_Lcd_Write_Char_4bits:
  2822                           
  2823                           	psect	text15
  2824     04C0                     __ptext15:	
  2825 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  2826 ;; Defined at:
  2827 ;;		line 49 in file "configLCD_4bits.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  a               1    wreg     unsigned char 
  2830 ;;  b               1    4[COMMON] unsigned char 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  a               1    6[COMMON] unsigned char 
  2833 ;;  temp            1    9[COMMON] unsigned char 
  2834 ;;  y               1    8[COMMON] unsigned char 
  2835 ;;  z               1    7[COMMON] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2845 ;;      Params:         1       0       0       0       0
  2846 ;;      Locals:         4       0       0       0       0
  2847 ;;      Temps:          1       0       0       0       0
  2848 ;;      Totals:         6       0       0       0       0
  2849 ;;Total ram usage:        6 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 2
  2852 ;; This function calls:
  2853 ;;		_Lcd_Cmd_4bits
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859     04C0                     _Lcd_Set_Cursor_4bits:	
  2860                           ;psect for function _Lcd_Set_Cursor_4bits
  2861                           
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  2865                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  2866     04C0  00F6               	movwf	Lcd_Set_Cursor_4bits@a
  2867     04C1                     l1250:
  2868                           
  2869                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  2870     04C1  0376               	decf	Lcd_Set_Cursor_4bits@a,w
  2871     04C2  1D03               	btfss	3,2
  2872     04C3  2CC5               	goto	u721
  2873     04C4  2CC6               	goto	u720
  2874     04C5                     u721:
  2875     04C5  2CE3               	goto	l1260
  2876     04C6                     u720:
  2877     04C6                     l1252:
  2878                           
  2879                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  2880     04C6  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  2881     04C7  3E7F               	addlw	127
  2882     04C8  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  2883                           
  2884                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  2885     04C9  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  2886     04CA  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  2887     04CB  3004               	movlw	4
  2888     04CC                     u735:
  2889     04CC  1003               	clrc
  2890     04CD  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  2891     04CE  3EFF               	addlw	-1
  2892     04CF  1D03               	skipz
  2893     04D0  2CCC               	goto	u735
  2894     04D1  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  2895     04D2  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  2896     04D3                     l1254:
  2897                           
  2898                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  2899     04D3  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  2900     04D4  390F               	andlw	15
  2901     04D5  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  2902     04D6                     l1256:
  2903                           
  2904                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  2905     04D6  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  2906     04D7  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2907     04DC                     l1258:
  2908                           
  2909                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  2910     04DC  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  2911     04DD  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2912                           
  2913                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  2914     04E2  2D05               	goto	l66
  2915     04E3                     l1260:
  2916     04E3  3002               	movlw	2
  2917     04E4  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
  2918     04E5  1D03               	btfss	3,2
  2919     04E6  2CE8               	goto	u741
  2920     04E7  2CE9               	goto	u740
  2921     04E8                     u741:
  2922     04E8  2D05               	goto	l66
  2923     04E9                     u740:
  2924     04E9                     l1262:
  2925                           
  2926                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  2927     04E9  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  2928     04EA  3EBF               	addlw	191
  2929     04EB  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  2930                           
  2931                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  2932     04EC  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  2933     04ED  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  2934     04EE  3004               	movlw	4
  2935     04EF                     u755:
  2936     04EF  1003               	clrc
  2937     04F0  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  2938     04F1  3EFF               	addlw	-1
  2939     04F2  1D03               	skipz
  2940     04F3  2CEF               	goto	u755
  2941     04F4  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  2942     04F5  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  2943     04F6                     l1264:
  2944                           
  2945                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  2946     04F6  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  2947     04F7  390F               	andlw	15
  2948     04F8  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  2949     04F9                     l1266:
  2950                           
  2951                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  2952     04F9  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  2953     04FA  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2954     04FF                     l1268:
  2955                           
  2956                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  2957     04FF  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  2958     0500  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  2959     0505                     l66:
  2960     0505  0008               	return
  2961     0506                     __end_of_Lcd_Set_Cursor_4bits:
  2962                           
  2963                           	psect	text16
  2964     0338                     __ptext16:	
  2965 ;; *************** function _Lcd_Clear_4bits *****************
  2966 ;; Defined at:
  2967 ;;		line 44 in file "configLCD_4bits.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;		None
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0, pclath, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2981 ;;      Params:         0       0       0       0       0
  2982 ;;      Locals:         0       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0
  2984 ;;      Totals:         0       0       0       0       0
  2985 ;;Total ram usage:        0 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; Hardware stack levels required when called: 2
  2988 ;; This function calls:
  2989 ;;		_Lcd_Cmd_4bits
  2990 ;; This function is called by:
  2991 ;;		_main
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995     0338                     _Lcd_Clear_4bits:	
  2996                           ;psect for function _Lcd_Clear_4bits
  2997                           
  2998     0338                     l1248:	
  2999                           ;incstack = 0
  3000                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  3001                           
  3002                           
  3003                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  3004     0338  3000               	movlw	0
  3005     0339  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  3006                           
  3007                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  3008     033E  3001               	movlw	1
  3009     033F  120A  118A  2368  120A  118A  	fcall	_Lcd_Cmd_4bits
  3010     0344                     l60:
  3011     0344  0008               	return
  3012     0345                     __end_of_Lcd_Clear_4bits:
  3013                           
  3014                           	psect	text17
  3015     0368                     __ptext17:	
  3016 ;; *************** function _Lcd_Cmd_4bits *****************
  3017 ;; Defined at:
  3018 ;;		line 36 in file "configLCD_4bits.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  a               1    wreg     unsigned char 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  a               1    3[COMMON] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         0       0       0       0       0
  3033 ;;      Locals:         1       0       0       0       0
  3034 ;;      Temps:          2       0       0       0       0
  3035 ;;      Totals:         3       0       0       0       0
  3036 ;;Total ram usage:        3 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 1
  3039 ;; This function calls:
  3040 ;;		_Lcd_Port_4bits
  3041 ;; This function is called by:
  3042 ;;		_Lcd_Clear_4bits
  3043 ;;		_Lcd_Set_Cursor_4bits
  3044 ;;		_Lcd_Init_4bits
  3045 ;;		_Lcd_Shift_Right_4bits
  3046 ;;		_Lcd_Shift_Left_4bits
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050     0368                     _Lcd_Cmd_4bits:	
  3051                           ;psect for function _Lcd_Cmd_4bits
  3052                           
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  3056                           ;Lcd_Cmd_4bits@a stored from wreg
  3057     0368  00F3               	movwf	Lcd_Cmd_4bits@a
  3058     0369                     l1136:
  3059                           
  3060                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  3061     0369  1283               	bcf	3,5	;RP0=0, select bank0
  3062     036A  1303               	bcf	3,6	;RP1=0, select bank0
  3063     036B  1108               	bcf	8,2	;volatile
  3064     036C                     l1138:
  3065                           
  3066                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  3067     036C  0873               	movf	Lcd_Cmd_4bits@a,w
  3068     036D  120A  118A  2382  120A  118A  	fcall	_Lcd_Port_4bits
  3069     0372                     l1140:
  3070                           
  3071                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  3072     0372  1283               	bcf	3,5	;RP0=0, select bank0
  3073     0373  1303               	bcf	3,6	;RP1=0, select bank0
  3074     0374  1588               	bsf	8,3	;volatile
  3075     0375                     l1142:
  3076                           
  3077                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3078     0375  300B               	movlw	11
  3079     0376  00F2               	movwf	??_Lcd_Cmd_4bits+1
  3080     0377  3062               	movlw	98
  3081     0378  00F1               	movwf	??_Lcd_Cmd_4bits
  3082     0379                     u1107:
  3083     0379  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
  3084     037A  2B79               	goto	u1107
  3085     037B  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
  3086     037C  2B79               	goto	u1107
  3087     037D  0000               	nop
  3088     037E                     l1144:
  3089                           
  3090                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  3091     037E  1283               	bcf	3,5	;RP0=0, select bank0
  3092     037F  1303               	bcf	3,6	;RP1=0, select bank0
  3093     0380  1188               	bcf	8,3	;volatile
  3094     0381                     l57:
  3095     0381  0008               	return
  3096     0382                     __end_of_Lcd_Cmd_4bits:
  3097                           
  3098                           	psect	text18
  3099     0382                     __ptext18:	
  3100 ;; *************** function _Lcd_Port_4bits *****************
  3101 ;; Defined at:
  3102 ;;		line 14 in file "configLCD_4bits.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  a               1    wreg     unsigned char 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  a               1    0[COMMON] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3116 ;;      Params:         0       0       0       0       0
  3117 ;;      Locals:         1       0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0
  3119 ;;      Totals:         1       0       0       0       0
  3120 ;;Total ram usage:        1 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_Lcd_Cmd_4bits
  3126 ;;		_Lcd_Init_4bits
  3127 ;;		_Lcd_Write_Char_4bits
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131     0382                     _Lcd_Port_4bits:	
  3132                           ;psect for function _Lcd_Port_4bits
  3133                           
  3134                           
  3135                           ;incstack = 0
  3136                           ; Regs used in _Lcd_Port_4bits: [wreg]
  3137                           ;Lcd_Port_4bits@a stored from wreg
  3138     0382  00F0               	movwf	Lcd_Port_4bits@a
  3139     0383                     l1126:
  3140                           
  3141                           ;configLCD_4bits.c: 15:     if (a & 1)
  3142     0383  1C70               	btfss	Lcd_Port_4bits@a,0
  3143     0384  2B86               	goto	u521
  3144     0385  2B87               	goto	u520
  3145     0386                     u521:
  3146     0386  2B8B               	goto	l46
  3147     0387                     u520:
  3148     0387                     l1128:
  3149                           
  3150                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  3151     0387  1283               	bcf	3,5	;RP0=0, select bank0
  3152     0388  1303               	bcf	3,6	;RP1=0, select bank0
  3153     0389  1608               	bsf	8,4	;volatile
  3154     038A  2B8E               	goto	l47
  3155     038B                     l46:	
  3156                           ;configLCD_4bits.c: 17:     else
  3157                           
  3158                           
  3159                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  3160     038B  1283               	bcf	3,5	;RP0=0, select bank0
  3161     038C  1303               	bcf	3,6	;RP1=0, select bank0
  3162     038D  1208               	bcf	8,4	;volatile
  3163     038E                     l47:
  3164                           
  3165                           ;configLCD_4bits.c: 20:     if (a & 2)
  3166     038E  1CF0               	btfss	Lcd_Port_4bits@a,1
  3167     038F  2B91               	goto	u531
  3168     0390  2B92               	goto	u530
  3169     0391                     u531:
  3170     0391  2B94               	goto	l48
  3171     0392                     u530:
  3172     0392                     l1130:
  3173                           
  3174                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  3175     0392  1688               	bsf	8,5	;volatile
  3176     0393  2B95               	goto	l49
  3177     0394                     l48:	
  3178                           ;configLCD_4bits.c: 22:     else
  3179                           
  3180                           
  3181                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  3182     0394  1288               	bcf	8,5	;volatile
  3183     0395                     l49:
  3184                           
  3185                           ;configLCD_4bits.c: 25:     if (a & 4)
  3186     0395  1D70               	btfss	Lcd_Port_4bits@a,2
  3187     0396  2B98               	goto	u541
  3188     0397  2B99               	goto	u540
  3189     0398                     u541:
  3190     0398  2B9B               	goto	l50
  3191     0399                     u540:
  3192     0399                     l1132:
  3193                           
  3194                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  3195     0399  1708               	bsf	8,6	;volatile
  3196     039A  2B9C               	goto	l51
  3197     039B                     l50:	
  3198                           ;configLCD_4bits.c: 27:     else
  3199                           
  3200                           
  3201                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  3202     039B  1308               	bcf	8,6	;volatile
  3203     039C                     l51:
  3204                           
  3205                           ;configLCD_4bits.c: 30:     if (a & 8)
  3206     039C  1DF0               	btfss	Lcd_Port_4bits@a,3
  3207     039D  2B9F               	goto	u551
  3208     039E  2BA0               	goto	u550
  3209     039F                     u551:
  3210     039F  2BA2               	goto	l52
  3211     03A0                     u550:
  3212     03A0                     l1134:
  3213                           
  3214                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  3215     03A0  1788               	bsf	8,7	;volatile
  3216     03A1  2BA3               	goto	l54
  3217     03A2                     l52:	
  3218                           ;configLCD_4bits.c: 32:     else
  3219                           
  3220                           
  3221                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  3222     03A2  1388               	bcf	8,7	;volatile
  3223     03A3                     l54:
  3224     03A3  0008               	return
  3225     03A4                     __end_of_Lcd_Port_4bits:
  3226     007E                     btemp	set	126	;btemp
  3227     007E                     wtemp0	set	126
  3228                           
  3229                           	psect	idloc
  3230                           
  3231                           ;Config register IDLOC0 @ 0x2000
  3232                           ;	unspecified, using default values
  3233     2000                     	org	8192
  3234     2000  3FFF               	dw	16383
  3235                           
  3236                           ;Config register IDLOC1 @ 0x2001
  3237                           ;	unspecified, using default values
  3238     2001                     	org	8193
  3239     2001  3FFF               	dw	16383
  3240                           
  3241                           ;Config register IDLOC2 @ 0x2002
  3242                           ;	unspecified, using default values
  3243     2002                     	org	8194
  3244     2002  3FFF               	dw	16383
  3245                           
  3246                           ;Config register IDLOC3 @ 0x2003
  3247                           ;	unspecified, using default values
  3248     2003                     	org	8195
  3249     2003  3FFF               	dw	16383
  3250                           
  3251                           	psect	config
  3252                           
  3253                           ;Config register CONFIG1 @ 0x2007
  3254                           ;	Oscillator Selection bits
  3255                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3256                           ;	Watchdog Timer Enable bit
  3257                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3258                           ;	Power-up Timer Enable bit
  3259                           ;	PWRTE = OFF, PWRT disabled
  3260                           ;	RE3/MCLR pin function select bit
  3261                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3262                           ;	Code Protection bit
  3263                           ;	CP = OFF, Program memory code protection is disabled
  3264                           ;	Data Code Protection bit
  3265                           ;	CPD = OFF, Data memory code protection is disabled
  3266                           ;	Brown Out Reset Selection bits
  3267                           ;	BOREN = OFF, BOR disabled
  3268                           ;	Internal External Switchover bit
  3269                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3270                           ;	Fail-Safe Clock Monitor Enabled bit
  3271                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3272                           ;	Low Voltage Programming Enable bit
  3273                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3274                           ;	In-Circuit Debugger Mode bit
  3275                           ;	DEBUG = 0x1, unprogramme  3276     2007                     	org	8199
  3277     2007  20D4               	dw	8404
  3278                           
  3279                           ;Config register CONFIG2 @ 0x2008
  3280                           ;	Brown-out Reset Selection bit
  3281                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3282                           ;	Flash Program Memory Self Write Enable bits
  3283                           ;	WRT = OFF, Write protection off
  3284     2008                     	org	8200
  3285     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@ADC1(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 9
		 -> main@ADC1(BANK0[9]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init_4bits
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    ___awmod->___awdiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    5113
                                             13 BANK0     15    15      0
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     580
                     _Lcd_Init_4bits
                        _setupINTOSC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2     724
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1     836
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 00:30:13 2023

                             pc 0002                     _SSPSTATbits 0094                              l20 0328  
                            l23 032E                              l16 0362                              l17 0367  
                            l50 039B                              l34 0337                              l26 0327  
                            l51 039C                              l52 03A2                              l60 0344  
                            l54 03A3                              l46 038B                              l47 038E  
                            l39 0351                              l48 0394                              l72 03FF  
                            l49 0395                              l57 0381                              l66 0505  
                            l69 05BD                              l78 047B                    ___awdiv@sign 0076  
                            fsr 0004                             l133 03CA                             l240 06E5  
                           l410 0560                             l516 04BF                             l526 0439  
                           l397 0624                             u520 0387                             u521 0386  
                           u530 0392                             u610 0496                             u531 0391  
                           u611 0495                             u540 0399                             u541 0398  
                           u605 0488                             u550 03A0                             u630 04A7  
                           u710 0435                             u551 039F                             u631 04A6  
                           u711 0434                             u720 04C6                             u560 035A  
                           u800 0685                             u721 04C5                             u561 0359  
                           u625 0497                             u705 0429                             u801 0684  
                           u570 032E                             u650 04BB                             u810 0690  
                           u571 032D                             u651 04BA                             u635 04A3  
                           u811 068F                             u740 04E9                             u900 0602  
                           u660 0406                             u820 06D1                             u741 04E8  
                           u901 0601                             u645 04AF                             u661 0405  
                           u821 06D0                             u805 0681                             u590 0484  
                           u830 06E1                             u735 04CC                             u591 0483  
                           u831 06E0                             u760 0447                             u920 0616  
                           u840 05C3                             u680 0418                             u585 03D8  
                           u921 0615                             u905 05FE                             u841 05C2  
                           u681 0417                             u770 0469                             u930 061B  
                           u850 05CE                             u690 0422                             u755 04EF  
                           u931 061A                             u915 060A                             u851 05CD  
                           u691 0421                             u675 040A                             u780 047B  
                           u860 05DF                             u940 050D                             u781 047A  
                           u861 05DE                             u941 050C                             u950 0518  
                           u790 0631                             u951 0517                             u695 041E  
                           u791 0630                             u880 05F1                             u960 0523  
                           u881 05F0                             u961 0522                             u875 05E3  
                           u980 0535                             u981 0534                             u990 053F  
                           u895 05F2                             u991 053E                             u975 0527  
                           u995 053B                             fsr0 0004                             indf 0000  
                  ___awmod@sign 0021                            l1200 048E                            l1130 0392  
                          l1210 04AE                            l1202 0492                            l1132 0399  
                          l1140 0372                            l1212 04B5                            l1204 0496  
                          l1220 0406                            l1300 063D                            l1134 03A0  
                          l1126 0383                            l1142 0375                            l1150 035C  
                          l1206 04A7                            l1214 04BB                            l1230 0422  
                          l1222 0409                            l1310 0668                            l1128 0387  
                          l1144 037E                            l1136 0369                            l1400 0523  
                          l1160 0350                            l1152 035E                            l1240 0323  
                          l1208 04AD                            l1232 0428                            l1224 0410  
                          l1320 0686                            l1304 0642                            l1138 036C  
                          l1250 04C1                            l1410 053F                            l1402 0526  
                          l1170 0585                            l1162 0561                            l1154 0361  
                          l1146 0353                            l1242 032F                            l1234 042F  
                          l1226 0414                            l1218 0400                            l1330 06C8  
                          l1322 0690                            l1306 065C                            l1252 04C6  
                          l1260 04E3                            l1180 03E6                            l1172 03CC  
                          l1420 055C                            l1412 0545                            l1404 052D  
                          l1164 0567                            l1148 035A                            l1156 0328  
                          l1244 0334                            l1228 0418                            l1236 0435  
                          l1324 0693                            l1316 066A                            l1308 0664  
                          l1332 06D1                            l1262 04E9                            l1254 04D3  
                          l1190 03FC                            l1182 03EB                            l1174 03D2  
                          l1270 043A                            l1350 05CA                            l1342 05BE  
                          l1414 054C                            l1406 0531                            l1166 0570  
                          l1158 0346                            l1326 06BF                            l1334 06E1  
                          l1430 06F8                            l1248 0338                            l1264 04F6  
                          l1256 04D6                            l1184 03EE                            l1176 03D5  
                          l1272 043D                            l1360 05DF                            l1352 05CE  
                          l1344 05BF                            l1408 0535                            l1416 0552  
                          l1168 057F                            l1280 03B0                            l1192 047C  
                          l1328 06C4                            l1440 0726                            l1432 0701  
                          l1266 04F9                            l1258 04DC                            l1186 03F4  
                          l1178 03E3                            l1274 0459                            l1370 0602  
                          l1362 05E2                            l1354 05D3                            l1346 05C3  
                          l1418 0557                            l1282 03B6                            l1194 047E  
                          l1290 0628                            l1450 0748                            l1442 072E  
                          l1434 0712                            l1268 04FF                            l1188 03F7  
                          l1276 045F                            l1380 061B                            l1372 0608  
                          l1364 05E9                            l1356 05D7                            l1348 05C8  
                          l1284 03BB                            l1196 0484                            l1292 062B  
                          l1460 07A3                            l1452 074B                            l1444 0736  
                          l1436 071A                            l1428 06E6                            l1382 0620  
                          l1374 0609                            l1366 05ED                            l1358 05D9  
                          l1390 050D                            l1286 03BE                            l1278 03A4  
                          l1198 0487                            l1294 0631                            l1470 07D6  
                          l1462 07AB                            l1454 075F                            l1446 073E  
                          l1438 0723                            l1376 0610                            l1368 05F1  
                          l1392 0512                            l1288 03C1                            l1296 0636  
                          l1472 07E7                            l1464 07B4                            l1456 0780  
                          l1448 0740                            l1378 0616                            l1394 0514  
                          l1386 0506                            l1298 063B                            l1474 07EF  
                          l1466 07C5                            l1458 0794                            l1396 0518  
                          l1388 0509                            l1468 07CD                            l1398 051D  
                          l1496 0654                            STR_1 001D                            STR_2 0021  
                          STR_3 0025                            STR_4 0029                            STR_5 0029  
                          STR_6 0029                            u1010 0552                            u1011 0551  
                          u1020 0557                            u1021 0556                            u1005 0546  
                          u1107 0379                            u1037 072A                            u1047 0744  
                          u1057 056B                            u1067 057A                            u1077 0589  
                          u1087 03E8                            u1097 03F9                            _main 06E6  
        _Lcd_Write_String_4bits 043A                            btemp 007E                            start 0000  
                         ?_main 0070               ??_Lcd_Clear_4bits 0074                 __end_of___awdiv 0625  
               __end_of___awmod 0561                           _ANSEL 0188                 ___awdiv@divisor 0070  
               __end_of___lwdiv 04C0                 __end_of___lwmod 043A                 ___awdiv@counter 0075  
                         _PORTB 0006                           _PORTD 0008                           _TRISB 0086  
                         _TRISD 0088           __end_of_Lcd_Cmd_4bits 0382                 __end_of_dpowers 001D  
                         _setup 03A4                           pclath 000A                 __end_of_spiInit 0368  
               __end_of_spiRead 0338                           status 0003                           wtemp0 007E  
               __end_of_sprintf 06E6                 __initialization 07FC                    __end_of_main 07FC  
                        ??_main 002D                ___awdiv@dividend 0072                          ?_setup 0070  
                        _ANSELH 0189                          _TRISC2 043A                          _TRISC3 043B  
                        _TRISC5 043D                          _SSPCON 0014                          _SSPBUF 0013  
      Lcd_Write_Char_4bits@temp 0072                       ??___awdiv 0074                       ??___awmod 007D  
                     ??___lwdiv 0074                       ??___lwmod 007C                ___awdiv@quotient 0077  
               ___awmod@divisor 0079                 ___awmod@counter 0020                    ?_setupINTOSC 0070  
              __end_of_spiWrite 0328                       ??_spiInit 0073                       ??_spiRead 0070  
                _Lcd_Init_4bits 0561                       ??_sprintf 0023         __end_of__initialization 07FC  
                __pcstackCOMMON 0070           Lcd_Write_Char_4bits@a 0074           Lcd_Write_Char_4bits@y 0073  
                 __end_of_setup 03CB          __end_of_Lcd_Init_4bits 05BE         ?_Lcd_Write_String_4bits 0075  
                       ??_setup 0076                  _Lcd_Port_4bits 0382                 _Lcd_Clear_4bits 0338  
                    __pmaintext 06E6    __end_of_Lcd_Write_Char_4bits 0400                 Lcd_Port_4bits@a 0070  
               ?_Lcd_Init_4bits 0070  __end_of_Lcd_Write_String_4bits 047C                         _SSPSTAT 0094  
                    __stringtab 0003          __end_of_Lcd_Port_4bits 03A4                       ?_spiWrite 0070  
                       ___awdiv 05BE                         ___awmod 0506                         ___lwdiv 047C  
                       ___lwmod 0400                         __ptext1 0625                         __ptext2 0400  
                       __ptext3 047C                         __ptext4 0322                         __ptext5 032F  
                       __ptext6 0328                         __ptext7 03A4                         __ptext8 0352  
                       __ptext9 0345                         _dpowers 0013                ___awmod@dividend 007B  
                       _spiInit 0352                         _spiRead 032F    __end_of_Lcd_Set_Cursor_4bits 0506  
                       _sprintf 0625            end_of_initialization 07FC                 ?_Lcd_Port_4bits 0070  
       __end_of_Lcd_Clear_4bits 0345                      ??_spiWrite 0070                       _PORTCbits 0007  
                     _PORTDbits 0008                      main@VAL1_C 003A                      main@VAL1_D 0039  
                    main@VAL1_U 0038                     spiWrite@dat 0070            _Lcd_Write_Char_4bits 03CB  
                _spiReceiveWait 0328             start_initialization 07FC                   _Lcd_Cmd_4bits 0368  
         Lcd_Set_Cursor_4bits@a 0076           Lcd_Set_Cursor_4bits@b 0074           Lcd_Set_Cursor_4bits@y 0078  
         Lcd_Set_Cursor_4bits@z 0077                ?_Lcd_Clear_4bits 0070           ?_Lcd_Write_Char_4bits 0070  
        __end_of_spiReceiveWait 032F        Lcd_Set_Cursor_4bits@temp 0079            _Lcd_Set_Cursor_4bits 04C0  
              ??_Lcd_Init_4bits 0074                       ___latbits 0002                   __pcstackBANK0 0020  
                ?_Lcd_Cmd_4bits 0070                     sprintf@flag 0026                     sprintf@prec 002A  
              ___lwdiv@dividend 0072                 ?_spiReceiveWait 0070           ?_Lcd_Set_Cursor_4bits 0074  
                      ?___awdiv 0070                        ?___awmod 0079                        ?___lwdiv 0070  
                      ?___lwmod 0078                       __pstrings 0003                ??_Lcd_Port_4bits 0070  
                      ?_spiInit 0070                        ?_spiRead 0070                ___lwdiv@quotient 0075  
                      ?_sprintf 0020            spiInit@sTransmitEdge 0072          ??_Lcd_Write_Char_4bits 0071  
            spiInit@sDataSample 0070                     __stringbase 0012                   ??_setupINTOSC 0070  
               ??_Lcd_Cmd_4bits 0071         Lcd_Write_String_4bits@a 0075         Lcd_Write_String_4bits@i 007A  
        ??_Lcd_Set_Cursor_4bits 0075              __end_of__stringtab 0013        ??_Lcd_Write_String_4bits 0077  
                Lcd_Cmd_4bits@a 0073                      sprintf@val 0028                 ___lwdiv@divisor 0070  
               ___lwdiv@counter 0077                        __ptext10 0561                        __ptext11 0506  
                      __ptext12 05BE                        __ptext13 043A                        __ptext14 03CB  
                      __ptext15 04C0                        __ptext16 0338                        __ptext17 0368  
                      __ptext18 0382             __end_of_setupINTOSC 0352                        main@ADC1 002F  
                      _spiWrite 0322                        main@VAL1 003B                    spiInit@sType 0073  
             spiInit@sClockIdle 0071                       sprintf@ap 0027                       sprintf@sp 002B  
              ___lwmod@dividend 007A                ??_spiReceiveWait 0070                       stringcode 000D  
                    _OSCCONbits 008F                     _setupINTOSC 0345                        sprintf@c 002C  
                      sprintf@f 0020                    setupINTOSC@F 0071                 ___lwmod@divisor 0078  
               ___lwmod@counter 007D                        stringdir 000D                        stringtab 0003  
