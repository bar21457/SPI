

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Feb 05 23:55:01 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0088                     	;# 
   418     0089                     	;# 
   419     008C                     	;# 
   420     008D                     	;# 
   421     008E                     	;# 
   422     008F                     	;# 
   423     0090                     	;# 
   424     0091                     	;# 
   425     0092                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0094                     	;# 
   430     0095                     	;# 
   431     0096                     	;# 
   432     0097                     	;# 
   433     0098                     	;# 
   434     0099                     	;# 
   435     009A                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     0105                     	;# 
   442     0107                     	;# 
   443     0108                     	;# 
   444     0109                     	;# 
   445     010C                     	;# 
   446     010C                     	;# 
   447     010D                     	;# 
   448     010E                     	;# 
   449     010F                     	;# 
   450     0185                     	;# 
   451     0187                     	;# 
   452     0188                     	;# 
   453     0189                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456                           
   457                           	psect	strings
   458     0003                     __pstrings:
   459     0003                     stringtab:
   460     0003                     __stringtab:
   461                           
   462                           ;	String table - string pointers are 1 byte each
   463     0003  1BFF               	btfsc	btemp+1,7
   464     0004  280D               	ljmp	stringcode
   465     0005  1383               	bcf	3,7
   466     0006  187F               	btfsc	btemp+1,0
   467     0007  1783               	bsf	3,7
   468     0008  0800               	movf	0,w
   469     0009  0A84               	incf	4,f
   470     000A  1903               	skipnz
   471     000B  0AFF               	incf	btemp+1,f
   472     000C  0008               	return
   473     000D                     stringcode:
   474     000D                     stringdir:
   475     000D  3000               	movlw	high stringdir
   476     000E  008A               	movwf	10
   477     000F  0804               	movf	4,w
   478     0010  0A84               	incf	4,f
   479     0011  0782               	addwf	2,f
   480     0012                     __stringbase:
   481     0012  3400               	retlw	0
   482     0013                     __end_of__stringtab:
   483     0013                     _dpowers:
   484     0013  3401               	retlw	1
   485     0014  3400               	retlw	0
   486     0015  340A               	retlw	10
   487     0016  3400               	retlw	0
   488     0017  3464               	retlw	100
   489     0018  3400               	retlw	0
   490     0019  34E8               	retlw	232
   491     001A  3403               	retlw	3
   492     001B  3410               	retlw	16
   493     001C  3427               	retlw	39
   494     001D                     __end_of_dpowers:
   495     0008                     _PORTD	set	8
   496     0006                     _PORTB	set	6
   497     0007                     _PORTCbits	set	7
   498     0008                     _PORTDbits	set	8
   499     0013                     _SSPBUF	set	19
   500     0014                     _SSPCON	set	20
   501     0088                     _TRISD	set	136
   502     0086                     _TRISB	set	134
   503     008F                     _OSCCONbits	set	143
   504     0094                     _SSPSTATbits	set	148
   505     0094                     _SSPSTAT	set	148
   506     043A                     _TRISC2	set	1082
   507     0439                     _TRISC1	set	1081
   508     043B                     _TRISC3	set	1083
   509     043D                     _TRISC5	set	1085
   510     0189                     _ANSELH	set	393
   511     0188                     _ANSEL	set	392
   512     001D                     STR_1:
   513     001D  3453               	retlw	83	;'S'
   514     001E  3431               	retlw	49	;'1'
   515     001F  343A               	retlw	58	;':'
   516     0020  3400               	retlw	0
   517     0021                     STR_2:
   518     0021  3453               	retlw	83	;'S'
   519     0022  3432               	retlw	50	;'2'
   520     0023  343A               	retlw	58	;':'
   521     0024  3400               	retlw	0
   522     0025                     STR_3:
   523     0025  3453               	retlw	83	;'S'
   524     0026  3433               	retlw	51	;'3'
   525     0027  343A               	retlw	58	;':'
   526     0028  3400               	retlw	0
   527     0029                     STR_4:
   528     0029  3425               	retlw	37	;'%'
   529     002A  3475               	retlw	117	;'u'
   530     002B  3400               	retlw	0
   531     0029                     
   532                           	psect	cinit
   533     07FC                     start_initialization:	
   534                           ; #config settings
   535                           
   536     07FC                     __initialization:
   537     07FC                     end_of_initialization:	
   538                           ;End of C runtime variable initialization code
   539                           
   540     07FC                     __end_of__initialization:
   541     07FC  0183               	clrf	3
   542     07FD  120A  118A  2D3D   	ljmp	_main	;jump to C main() function
   543                           
   544                           	psect	cstackCOMMON
   545     0070                     __pcstackCOMMON:
   546     0070                     ?_setup:
   547     0070                     ?_spiInit:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_spiReceiveWait:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ??_spiReceiveWait:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_spiWrite:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ??_spiWrite:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_spiRead:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ??_spiRead:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_setupINTOSC:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ??_setupINTOSC:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_Lcd_Port_4bits:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ??_Lcd_Port_4bits:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_Lcd_Cmd_4bits:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_Lcd_Clear_4bits:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_Lcd_Init_4bits:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ?_Lcd_Write_Char_4bits:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?_main:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?___awdiv:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?___lwdiv:	
   599                           ; 2 bytes @ 0x0
   600                           
   601     0070                     spiInit@sDataSample:	
   602                           ; 2 bytes @ 0x0
   603                           
   604     0070                     spiWrite@dat:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     Lcd_Port_4bits@a:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ___awdiv@divisor:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ___lwdiv@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616                           
   617                           ; 2 bytes @ 0x0
   618     0070                     	ds	1
   619     0071                     ??_Lcd_Cmd_4bits:
   620     0071                     ??_Lcd_Write_Char_4bits:	
   621                           ; 1 bytes @ 0x1
   622                           
   623     0071                     spiInit@sClockIdle:	
   624                           ; 1 bytes @ 0x1
   625                           
   626     0071                     setupINTOSC@F:	
   627                           ; 1 bytes @ 0x1
   628                           
   629                           
   630                           ; 1 bytes @ 0x1
   631     0071                     	ds	1
   632     0072                     spiInit@sTransmitEdge:
   633     0072                     Lcd_Write_Char_4bits@temp:	
   634                           ; 1 bytes @ 0x2
   635                           
   636     0072                     ___awdiv@dividend:	
   637                           ; 1 bytes @ 0x2
   638                           
   639     0072                     ___lwdiv@dividend:	
   640                           ; 2 bytes @ 0x2
   641                           
   642                           
   643                           ; 2 bytes @ 0x2
   644     0072                     	ds	1
   645     0073                     ??_spiInit:
   646     0073                     spiInit@sType:	
   647                           ; 1 bytes @ 0x3
   648                           
   649     0073                     Lcd_Cmd_4bits@a:	
   650                           ; 1 bytes @ 0x3
   651                           
   652     0073                     Lcd_Write_Char_4bits@y:	
   653                           ; 1 bytes @ 0x3
   654                           
   655                           
   656                           ; 1 bytes @ 0x3
   657     0073                     	ds	1
   658     0074                     ??_Lcd_Clear_4bits:
   659     0074                     ?_Lcd_Set_Cursor_4bits:	
   660                           ; 1 bytes @ 0x4
   661                           
   662     0074                     ??_Lcd_Init_4bits:	
   663                           ; 1 bytes @ 0x4
   664                           
   665     0074                     ??___awdiv:	
   666                           ; 1 bytes @ 0x4
   667                           
   668     0074                     ??___lwdiv:	
   669                           ; 1 bytes @ 0x4
   670                           
   671     0074                     Lcd_Set_Cursor_4bits@b:	
   672                           ; 1 bytes @ 0x4
   673                           
   674     0074                     Lcd_Write_Char_4bits@a:	
   675                           ; 1 bytes @ 0x4
   676                           
   677                           
   678                           ; 1 bytes @ 0x4
   679     0074                     	ds	1
   680     0075                     ??_Lcd_Set_Cursor_4bits:
   681     0075                     ?_Lcd_Write_String_4bits:	
   682                           ; 1 bytes @ 0x5
   683                           
   684     0075                     ___awdiv@counter:	
   685                           ; 1 bytes @ 0x5
   686                           
   687     0075                     Lcd_Write_String_4bits@a:	
   688                           ; 1 bytes @ 0x5
   689                           
   690     0075                     ___lwdiv@quotient:	
   691                           ; 2 bytes @ 0x5
   692                           
   693                           
   694                           ; 2 bytes @ 0x5
   695     0075                     	ds	1
   696     0076                     ??_setup:
   697     0076                     Lcd_Set_Cursor_4bits@a:	
   698                           ; 1 bytes @ 0x6
   699                           
   700     0076                     ___awdiv@sign:	
   701                           ; 1 bytes @ 0x6
   702                           
   703                           
   704                           ; 1 bytes @ 0x6
   705     0076                     	ds	1
   706     0077                     ??_Lcd_Write_String_4bits:
   707     0077                     Lcd_Set_Cursor_4bits@z:	
   708                           ; 1 bytes @ 0x7
   709                           
   710     0077                     ___lwdiv@counter:	
   711                           ; 1 bytes @ 0x7
   712                           
   713     0077                     ___awdiv@quotient:	
   714                           ; 1 bytes @ 0x7
   715                           
   716                           
   717                           ; 2 bytes @ 0x7
   718     0077                     	ds	1
   719     0078                     ?___lwmod:
   720     0078                     Lcd_Set_Cursor_4bits@y:	
   721                           ; 2 bytes @ 0x8
   722                           
   723     0078                     ___lwmod@divisor:	
   724                           ; 1 bytes @ 0x8
   725                           
   726                           
   727                           ; 2 bytes @ 0x8
   728     0078                     	ds	1
   729     0079                     ?___awmod:
   730     0079                     Lcd_Set_Cursor_4bits@temp:	
   731                           ; 2 bytes @ 0x9
   732                           
   733     0079                     ___awmod@divisor:	
   734                           ; 1 bytes @ 0x9
   735                           
   736                           
   737                           ; 2 bytes @ 0x9
   738     0079                     	ds	1
   739     007A                     Lcd_Write_String_4bits@i:
   740     007A                     ___lwmod@dividend:	
   741                           ; 2 bytes @ 0xA
   742                           
   743                           
   744                           ; 2 bytes @ 0xA
   745     007A                     	ds	1
   746     007B                     ___awmod@dividend:
   747                           
   748                           ; 2 bytes @ 0xB
   749     007B                     	ds	1
   750     007C                     ??___lwmod:
   751                           
   752                           ; 1 bytes @ 0xC
   753     007C                     	ds	1
   754     007D                     ??___awmod:
   755     007D                     ___lwmod@counter:	
   756                           ; 1 bytes @ 0xD
   757                           
   758                           
   759                           ; 1 bytes @ 0xD
   760     007D                     	ds	1
   761                           
   762                           	psect	cstackBANK0
   763     0020                     __pcstackBANK0:
   764     0020                     ?_sprintf:
   765     0020                     sprintf@f:	
   766                           ; 2 bytes @ 0x0
   767                           
   768     0020                     ___awmod@counter:	
   769                           ; 1 bytes @ 0x0
   770                           
   771                           
   772                           ; 1 bytes @ 0x0
   773     0020                     	ds	1
   774     0021                     ___awmod@sign:
   775                           
   776                           ; 1 bytes @ 0x1
   777     0021                     	ds	2
   778     0023                     ??_sprintf:
   779                           
   780                           ; 1 bytes @ 0x3
   781     0023                     	ds	3
   782     0026                     sprintf@flag:
   783                           
   784                           ; 1 bytes @ 0x6
   785     0026                     	ds	1
   786     0027                     sprintf@ap:
   787                           
   788                           ; 1 bytes @ 0x7
   789     0027                     	ds	1
   790     0028                     sprintf@val:
   791                           
   792                           ; 2 bytes @ 0x8
   793     0028                     	ds	2
   794     002A                     sprintf@prec:
   795                           
   796                           ; 1 bytes @ 0xA
   797     002A                     	ds	1
   798     002B                     sprintf@sp:
   799                           
   800                           ; 1 bytes @ 0xB
   801     002B                     	ds	1
   802     002C                     sprintf@c:
   803                           
   804                           ; 1 bytes @ 0xC
   805     002C                     	ds	1
   806     002D                     ??_main:
   807                           
   808                           ; 1 bytes @ 0xD
   809     002D                     	ds	2
   810     002F                     main@ADC1:
   811                           
   812                           ; 9 bytes @ 0xF
   813     002F                     	ds	9
   814     0038                     main@ADC2:
   815                           
   816                           ; 9 bytes @ 0x18
   817     0038                     	ds	9
   818     0041                     main@CONT_S:
   819                           
   820                           ; 9 bytes @ 0x21
   821     0041                     	ds	9
   822     004A                     main@VAL1_U:
   823                           
   824                           ; 1 bytes @ 0x2A
   825     004A                     	ds	1
   826     004B                     main@VAL1_D:
   827                           
   828                           ; 1 bytes @ 0x2B
   829     004B                     	ds	1
   830     004C                     main@VAL1_C:
   831                           
   832                           ; 1 bytes @ 0x2C
   833     004C                     	ds	1
   834     004D                     main@VAL2_U:
   835                           
   836                           ; 1 bytes @ 0x2D
   837     004D                     	ds	1
   838     004E                     main@VAL2_D:
   839                           
   840                           ; 1 bytes @ 0x2E
   841     004E                     	ds	1
   842     004F                     main@VAL2_C:
   843                           
   844                           ; 1 bytes @ 0x2F
   845     004F                     	ds	1
   846     0050                     main@CONT_U:
   847                           
   848                           ; 1 bytes @ 0x30
   849     0050                     	ds	1
   850     0051                     main@CONT_D:
   851                           
   852                           ; 1 bytes @ 0x31
   853     0051                     	ds	1
   854     0052                     main@CONT_C:
   855                           
   856                           ; 1 bytes @ 0x32
   857     0052                     	ds	1
   858     0053                     main@VAL_W:
   859                           
   860                           ; 1 bytes @ 0x33
   861     0053                     	ds	1
   862     0054                     main@VAL1:
   863                           
   864                           ; 1 bytes @ 0x34
   865     0054                     	ds	1
   866     0055                     main@VAL2:
   867                           
   868                           ; 1 bytes @ 0x35
   869     0055                     	ds	1
   870     0056                     main@CONT:
   871                           
   872                           ; 1 bytes @ 0x36
   873     0056                     	ds	1
   874     0057                     main@VAL_READ:
   875                           
   876                           ; 1 bytes @ 0x37
   877     0057                     	ds	1
   878                           
   879                           	psect	maintext
   880     053D                     __pmaintext:	
   881 ;;
   882 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   883 ;;
   884 ;; *************** function _main *****************
   885 ;; Defined at:
   886 ;;		line 60 in file "main_M.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  CONT_S          9   33[BANK0 ] unsigned char [9]
   891 ;;  ADC2            9   24[BANK0 ] unsigned char [9]
   892 ;;  ADC1            9   15[BANK0 ] unsigned char [9]
   893 ;;  VAL_READ        1   55[BANK0 ] unsigned char 
   894 ;;  CONT            1   54[BANK0 ] unsigned char 
   895 ;;  VAL2            1   53[BANK0 ] unsigned char 
   896 ;;  VAL1            1   52[BANK0 ] unsigned char 
   897 ;;  VAL_W           1   51[BANK0 ] unsigned char 
   898 ;;  CONT_C          1   50[BANK0 ] unsigned char 
   899 ;;  CONT_D          1   49[BANK0 ] unsigned char 
   900 ;;  CONT_U          1   48[BANK0 ] unsigned char 
   901 ;;  VAL2_C          1   47[BANK0 ] unsigned char 
   902 ;;  VAL2_D          1   46[BANK0 ] unsigned char 
   903 ;;  VAL2_U          1   45[BANK0 ] unsigned char 
   904 ;;  VAL1_C          1   44[BANK0 ] unsigned char 
   905 ;;  VAL1_D          1   43[BANK0 ] unsigned char 
   906 ;;  VAL1_U          1   42[BANK0 ] unsigned char 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : B00/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       0       0       0       0
   917 ;;      Locals:         0      41       0       0       0
   918 ;;      Temps:          0       2       0       0       0
   919 ;;      Totals:         0      43       0       0       0
   920 ;;Total ram usage:       43 bytes
   921 ;; Hardware stack levels required when called: 4
   922 ;; This function calls:
   923 ;;		_Lcd_Clear_4bits
   924 ;;		_Lcd_Set_Cursor_4bits
   925 ;;		_Lcd_Write_String_4bits
   926 ;;		___awdiv
   927 ;;		___awmod
   928 ;;		_setup
   929 ;;		_spiRead
   930 ;;		_spiWrite
   931 ;;		_sprintf
   932 ;; This function is called by:
   933 ;;		Startup code after reset
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937     053D                     _main:	
   938                           ;psect for function _main
   939                           
   940     053D                     l1496:	
   941                           ;incstack = 0
   942                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   943                           
   944                           
   945                           ;main_M.c: 62:     setup();
   946     053D  120A  118A  21F5  120A  118A  	fcall	_setup
   947                           
   948                           ;main_M.c: 64:     uint8_t VAL_READ;;main_M.c: 65:     uint8_t VAL_W;;main_M.c: 67:     
      +                          uint8_t VAL1;;main_M.c: 68:     uint8_t VAL1_U;;main_M.c: 69:     uint8_t VAL1_D;;main_M
      +                          .c: 70:     uint8_t VAL1_C;;main_M.c: 72:     uint8_t VAL2;;main_M.c: 73:     uint8_t VA
      +                          L2_U;;main_M.c: 74:     uint8_t VAL2_D;;main_M.c: 75:     uint8_t VAL2_C;;main_M.c: 77: 
      +                              uint8_t CONT;;main_M.c: 78:     uint8_t CONT_U;;main_M.c: 79:     uint8_t CONT_D;;ma
      +                          in_M.c: 80:     uint8_t CONT_C;;main_M.c: 82:     char ADC1[9];;main_M.c: 83:     char A
      +                          DC2[9];
   949     0542  120A  118A  2189  120A  118A  	fcall	_Lcd_Clear_4bits
   950                           
   951                           ;main_M.c: 87:     Lcd_Set_Cursor_4bits(1,1);
   952     0547  01F4               	clrf	Lcd_Set_Cursor_4bits@b
   953     0548  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
   954     0549  3001               	movlw	1
   955     054A  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   956     054F                     l1498:
   957                           
   958                           ;main_M.c: 88:     Lcd_Write_String_4bits("S1:");
   959     054F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   960     0550  00F5               	movwf	Lcd_Write_String_4bits@a
   961     0551  3080               	movlw	128
   962     0552  00F6               	movwf	Lcd_Write_String_4bits@a+1
   963     0553  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
   964     0558                     l1500:
   965                           
   966                           ;main_M.c: 89:     Lcd_Set_Cursor_4bits(1,7);
   967     0558  3007               	movlw	7
   968     0559  00F4               	movwf	Lcd_Set_Cursor_4bits@b
   969     055A  3001               	movlw	1
   970     055B  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   971                           
   972                           ;main_M.c: 90:     Lcd_Write_String_4bits("S2:");
   973     0560  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   974     0561  00F5               	movwf	Lcd_Write_String_4bits@a
   975     0562  3080               	movlw	128
   976     0563  00F6               	movwf	Lcd_Write_String_4bits@a+1
   977     0564  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
   978     0569                     l1502:
   979                           
   980                           ;main_M.c: 91:     Lcd_Set_Cursor_4bits(1,13);
   981     0569  300D               	movlw	13
   982     056A  00F4               	movwf	Lcd_Set_Cursor_4bits@b
   983     056B  3001               	movlw	1
   984     056C  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   985     0571                     l1504:
   986                           
   987                           ;main_M.c: 92:     Lcd_Write_String_4bits("S3:");
   988     0571  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   989     0572  00F5               	movwf	Lcd_Write_String_4bits@a
   990     0573  3080               	movlw	128
   991     0574  00F6               	movwf	Lcd_Write_String_4bits@a+1
   992     0575  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
   993     057A                     l1506:
   994                           
   995                           ;main_M.c: 95:     {;main_M.c: 96:        PORTCbits.RC1 = 0;
   996     057A  1283               	bcf	3,5	;RP0=0, select bank0
   997     057B  1303               	bcf	3,6	;RP1=0, select bank0
   998     057C  1087               	bcf	7,1	;volatile
   999     057D                     l1508:
  1000                           
  1001                           ;main_M.c: 97:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1002     057D  30C7               	movlw	199
  1003     057E  1283               	bcf	3,5	;RP0=0, select bank0
  1004     057F  1303               	bcf	3,6	;RP1=0, select bank0
  1005     0580  00AD               	movwf	??_main
  1006     0581                     u1077:
  1007     0581  2D82               	nop2
  1008     0582  0BAD               	decfsz	??_main,f
  1009     0583  2D81               	goto	u1077
  1010     0584  2D85               	nop2
  1011     0585                     l1510:
  1012                           
  1013                           ;main_M.c: 99:        spiWrite(VAL_READ);
  1014     0585  1283               	bcf	3,5	;RP0=0, select bank0
  1015     0586  1303               	bcf	3,6	;RP1=0, select bank0
  1016     0587  0857               	movf	main@VAL_READ,w
  1017     0588  120A  118A  2173  120A  118A  	fcall	_spiWrite
  1018     058D                     l1512:
  1019                           
  1020                           ;main_M.c: 100:        VAL1 = spiRead();
  1021     058D  120A  118A  2180  120A  118A  	fcall	_spiRead
  1022     0592  1283               	bcf	3,5	;RP0=0, select bank0
  1023     0593  1303               	bcf	3,6	;RP1=0, select bank0
  1024     0594  00D4               	movwf	main@VAL1
  1025     0595                     l1514:
  1026                           
  1027                           ;main_M.c: 102:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1028     0595  30C7               	movlw	199
  1029     0596  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0597  1303               	bcf	3,6	;RP1=0, select bank0
  1031     0598  00AD               	movwf	??_main
  1032     0599                     u1087:
  1033     0599  2D9A               	nop2
  1034     059A  0BAD               	decfsz	??_main,f
  1035     059B  2D99               	goto	u1087
  1036     059C  2D9D               	nop2
  1037     059D                     l1516:
  1038                           
  1039                           ;main_M.c: 103:        PORTCbits.RC1 = 1;
  1040     059D  1283               	bcf	3,5	;RP0=0, select bank0
  1041     059E  1303               	bcf	3,6	;RP1=0, select bank0
  1042     059F  1487               	bsf	7,1	;volatile
  1043                           
  1044                           ;main_M.c: 105:       VAL1_C = (VAL1/100);
  1045     05A0  3064               	movlw	100
  1046     05A1  00F0               	movwf	___awdiv@divisor
  1047     05A2  3000               	movlw	0
  1048     05A3  00F1               	movwf	___awdiv@divisor+1
  1049     05A4  0854               	movf	main@VAL1,w
  1050     05A5  00AD               	movwf	??_main
  1051     05A6  01AE               	clrf	??_main+1
  1052     05A7  082D               	movf	??_main,w
  1053     05A8  00F2               	movwf	___awdiv@dividend
  1054     05A9  082E               	movf	??_main+1,w
  1055     05AA  00F3               	movwf	___awdiv@dividend+1
  1056     05AB  120A  118A  2415  120A  118A  	fcall	___awdiv
  1057     05B0  0870               	movf	?___awdiv,w
  1058     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1059     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1060     05B3  00CC               	movwf	main@VAL1_C
  1061                           
  1062                           ;main_M.c: 106:       VAL1_D = (VAL1/10)%10;
  1063     05B4  300A               	movlw	10
  1064     05B5  00F9               	movwf	___awmod@divisor
  1065     05B6  3000               	movlw	0
  1066     05B7  00FA               	movwf	___awmod@divisor+1
  1067     05B8  300A               	movlw	10
  1068     05B9  00F0               	movwf	___awdiv@divisor
  1069     05BA  3000               	movlw	0
  1070     05BB  00F1               	movwf	___awdiv@divisor+1
  1071     05BC  0854               	movf	main@VAL1,w
  1072     05BD  00AD               	movwf	??_main
  1073     05BE  01AE               	clrf	??_main+1
  1074     05BF  082D               	movf	??_main,w
  1075     05C0  00F2               	movwf	___awdiv@dividend
  1076     05C1  082E               	movf	??_main+1,w
  1077     05C2  00F3               	movwf	___awdiv@dividend+1
  1078     05C3  120A  118A  2415  120A  118A  	fcall	___awdiv
  1079     05C8  0871               	movf	?___awdiv+1,w
  1080     05C9  00FC               	movwf	___awmod@dividend+1
  1081     05CA  0870               	movf	?___awdiv,w
  1082     05CB  00FB               	movwf	___awmod@dividend
  1083     05CC  120A  118A  235D  120A  118A  	fcall	___awmod
  1084     05D1  0879               	movf	?___awmod,w
  1085     05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1086     05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1087     05D4  00CB               	movwf	main@VAL1_D
  1088                           
  1089                           ;main_M.c: 107:       VAL1_U = VAL1%10;
  1090     05D5  300A               	movlw	10
  1091     05D6  00F9               	movwf	___awmod@divisor
  1092     05D7  3000               	movlw	0
  1093     05D8  00FA               	movwf	___awmod@divisor+1
  1094     05D9  0854               	movf	main@VAL1,w
  1095     05DA  00AD               	movwf	??_main
  1096     05DB  01AE               	clrf	??_main+1
  1097     05DC  082D               	movf	??_main,w
  1098     05DD  00FB               	movwf	___awmod@dividend
  1099     05DE  082E               	movf	??_main+1,w
  1100     05DF  00FC               	movwf	___awmod@dividend+1
  1101     05E0  120A  118A  235D  120A  118A  	fcall	___awmod
  1102     05E5  0879               	movf	?___awmod,w
  1103     05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1104     05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1105     05E8  00CA               	movwf	main@VAL1_U
  1106     05E9                     l1518:
  1107                           
  1108                           ;main_M.c: 109:       sprintf(ADC1, "%u", VAL1_C);
  1109     05E9  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1110     05EA  00A0               	movwf	sprintf@f
  1111     05EB  084C               	movf	main@VAL1_C,w
  1112     05EC  00AD               	movwf	??_main
  1113     05ED  01AE               	clrf	??_main+1
  1114     05EE  082D               	movf	??_main,w
  1115     05EF  00A1               	movwf	?_sprintf+1
  1116     05F0  082E               	movf	??_main+1,w
  1117     05F1  00A2               	movwf	?_sprintf+2
  1118     05F2  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1119     05F3  120A  118A  247C  120A  118A  	fcall	_sprintf
  1120     05F8                     l1520:
  1121                           
  1122                           ;main_M.c: 110:       Lcd_Set_Cursor_4bits(2,1);
  1123     05F8  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1124     05F9  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1125     05FA  3002               	movlw	2
  1126     05FB  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1127                           
  1128                           ;main_M.c: 111:       Lcd_Write_String_4bits(ADC1);
  1129     0600  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1130     0601  00F5               	movwf	Lcd_Write_String_4bits@a
  1131     0602  3000               	movlw	0
  1132     0603  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1133     0604  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
  1134                           
  1135                           ;main_M.c: 113:       sprintf(ADC1, "%u", VAL1_D);
  1136     0609  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1137     060A  1283               	bcf	3,5	;RP0=0, select bank0
  1138     060B  1303               	bcf	3,6	;RP1=0, select bank0
  1139     060C  00A0               	movwf	sprintf@f
  1140     060D  084B               	movf	main@VAL1_D,w
  1141     060E  00AD               	movwf	??_main
  1142     060F  01AE               	clrf	??_main+1
  1143     0610  082D               	movf	??_main,w
  1144     0611  00A1               	movwf	?_sprintf+1
  1145     0612  082E               	movf	??_main+1,w
  1146     0613  00A2               	movwf	?_sprintf+2
  1147     0614  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1148     0615  120A  118A  247C  120A  118A  	fcall	_sprintf
  1149     061A                     l1522:
  1150                           
  1151                           ;main_M.c: 114:       Lcd_Set_Cursor_4bits(2,2);
  1152     061A  3002               	movlw	2
  1153     061B  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1154     061C  3002               	movlw	2
  1155     061D  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1156     0622                     l1524:
  1157                           
  1158                           ;main_M.c: 115:       Lcd_Write_String_4bits(ADC1);
  1159     0622  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1160     0623  00F5               	movwf	Lcd_Write_String_4bits@a
  1161     0624  3000               	movlw	0
  1162     0625  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1163     0626  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
  1164     062B                     l1526:
  1165                           
  1166                           ;main_M.c: 117:       sprintf(ADC1, "%u", VAL1_U);
  1167     062B  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1168     062C  1283               	bcf	3,5	;RP0=0, select bank0
  1169     062D  1303               	bcf	3,6	;RP1=0, select bank0
  1170     062E  00A0               	movwf	sprintf@f
  1171     062F  084A               	movf	main@VAL1_U,w
  1172     0630  00AD               	movwf	??_main
  1173     0631  01AE               	clrf	??_main+1
  1174     0632  082D               	movf	??_main,w
  1175     0633  00A1               	movwf	?_sprintf+1
  1176     0634  082E               	movf	??_main+1,w
  1177     0635  00A2               	movwf	?_sprintf+2
  1178     0636  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1179     0637  120A  118A  247C  120A  118A  	fcall	_sprintf
  1180     063C                     l1528:
  1181                           
  1182                           ;main_M.c: 118:       Lcd_Set_Cursor_4bits(2,3);
  1183     063C  3003               	movlw	3
  1184     063D  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1185     063E  3002               	movlw	2
  1186     063F  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1187                           
  1188                           ;main_M.c: 119:       Lcd_Write_String_4bits(ADC1);
  1189     0644  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1190     0645  00F5               	movwf	Lcd_Write_String_4bits@a
  1191     0646  3000               	movlw	0
  1192     0647  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1193     0648  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
  1194     064D                     l1530:
  1195                           
  1196                           ;main_M.c: 121:       PORTCbits.RC2 = 0;
  1197     064D  1283               	bcf	3,5	;RP0=0, select bank0
  1198     064E  1303               	bcf	3,6	;RP1=0, select bank0
  1199     064F  1107               	bcf	7,2	;volatile
  1200     0650                     l1532:
  1201                           
  1202                           ;main_M.c: 122:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1203     0650  30C7               	movlw	199
  1204     0651  1283               	bcf	3,5	;RP0=0, select bank0
  1205     0652  1303               	bcf	3,6	;RP1=0, select bank0
  1206     0653  00AD               	movwf	??_main
  1207     0654                     u1097:
  1208     0654  2E55               	nop2
  1209     0655  0BAD               	decfsz	??_main,f
  1210     0656  2E54               	goto	u1097
  1211     0657  2E58               	nop2
  1212     0658                     l1534:
  1213                           
  1214                           ;main_M.c: 124:        spiWrite(VAL_READ);
  1215     0658  1283               	bcf	3,5	;RP0=0, select bank0
  1216     0659  1303               	bcf	3,6	;RP1=0, select bank0
  1217     065A  0857               	movf	main@VAL_READ,w
  1218     065B  120A  118A  2173  120A  118A  	fcall	_spiWrite
  1219     0660                     l1536:
  1220                           
  1221                           ;main_M.c: 125:        VAL_W = spiRead();
  1222     0660  120A  118A  2180  120A  118A  	fcall	_spiRead
  1223     0665  1283               	bcf	3,5	;RP0=0, select bank0
  1224     0666  1303               	bcf	3,6	;RP1=0, select bank0
  1225     0667  00D3               	movwf	main@VAL_W
  1226     0668                     l1538:
  1227                           
  1228                           ;main_M.c: 127:        if (VAL_W == 'A')
  1229     0668  3041               	movlw	65
  1230     0669  0653               	xorwf	main@VAL_W,w
  1231     066A  1D03               	btfss	3,2
  1232     066B  2E6D               	goto	u1051
  1233     066C  2E6E               	goto	u1050
  1234     066D                     u1051:
  1235     066D  2E7D               	goto	l1542
  1236     066E                     u1050:
  1237     066E                     l1540:
  1238                           
  1239                           ;main_M.c: 128:        {;main_M.c: 129:            spiWrite(VAL_READ);
  1240     066E  0857               	movf	main@VAL_READ,w
  1241     066F  120A  118A  2173  120A  118A  	fcall	_spiWrite
  1242                           
  1243                           ;main_M.c: 130:            VAL2 = spiRead();
  1244     0674  120A  118A  2180  120A  118A  	fcall	_spiRead
  1245     0679  1283               	bcf	3,5	;RP0=0, select bank0
  1246     067A  1303               	bcf	3,6	;RP1=0, select bank0
  1247     067B  00D5               	movwf	main@VAL2
  1248                           
  1249                           ;main_M.c: 131:        }
  1250     067C  2E91               	goto	l1546
  1251     067D                     l1542:
  1252     067D  3043               	movlw	67
  1253     067E  0653               	xorwf	main@VAL_W,w
  1254     067F  1D03               	btfss	3,2
  1255     0680  2E82               	goto	u1061
  1256     0681  2E83               	goto	u1060
  1257     0682                     u1061:
  1258     0682  2E91               	goto	l1546
  1259     0683                     u1060:
  1260     0683                     l1544:
  1261                           
  1262                           ;main_M.c: 134:        {;main_M.c: 135:            spiWrite(VAL_READ);
  1263     0683  0857               	movf	main@VAL_READ,w
  1264     0684  120A  118A  2173  120A  118A  	fcall	_spiWrite
  1265                           
  1266                           ;main_M.c: 136:            CONT = spiRead();
  1267     0689  120A  118A  2180  120A  118A  	fcall	_spiRead
  1268     068E  1283               	bcf	3,5	;RP0=0, select bank0
  1269     068F  1303               	bcf	3,6	;RP1=0, select bank0
  1270     0690  00D6               	movwf	main@CONT
  1271     0691                     l1546:	
  1272                           ;main_M.c: 137:        }
  1273                           
  1274                           
  1275                           ;main_M.c: 142:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1276     0691  30C7               	movlw	199
  1277     0692  1283               	bcf	3,5	;RP0=0, select bank0
  1278     0693  1303               	bcf	3,6	;RP1=0, select bank0
  1279     0694  00AD               	movwf	??_main
  1280     0695                     u1107:
  1281     0695  2E96               	nop2
  1282     0696  0BAD               	decfsz	??_main,f
  1283     0697  2E95               	goto	u1107
  1284     0698  2E99               	nop2
  1285     0699                     l1548:
  1286                           
  1287                           ;main_M.c: 143:        PORTCbits.RC2 = 1;
  1288     0699  1283               	bcf	3,5	;RP0=0, select bank0
  1289     069A  1303               	bcf	3,6	;RP1=0, select bank0
  1290     069B  1507               	bsf	7,2	;volatile
  1291     069C                     l1550:
  1292                           
  1293                           ;main_M.c: 145:       VAL2_C = (VAL2/100);
  1294     069C  3064               	movlw	100
  1295     069D  00F0               	movwf	___awdiv@divisor
  1296     069E  3000               	movlw	0
  1297     069F  00F1               	movwf	___awdiv@divisor+1
  1298     06A0  0855               	movf	main@VAL2,w
  1299     06A1  00AD               	movwf	??_main
  1300     06A2  01AE               	clrf	??_main+1
  1301     06A3  082D               	movf	??_main,w
  1302     06A4  00F2               	movwf	___awdiv@dividend
  1303     06A5  082E               	movf	??_main+1,w
  1304     06A6  00F3               	movwf	___awdiv@dividend+1
  1305     06A7  120A  118A  2415  120A  118A  	fcall	___awdiv
  1306     06AC  0870               	movf	?___awdiv,w
  1307     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1308     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1309     06AF  00CF               	movwf	main@VAL2_C
  1310     06B0                     l1552:
  1311                           
  1312                           ;main_M.c: 146:       VAL2_D = (VAL2/10)%10;
  1313     06B0  300A               	movlw	10
  1314     06B1  00F9               	movwf	___awmod@divisor
  1315     06B2  3000               	movlw	0
  1316     06B3  00FA               	movwf	___awmod@divisor+1
  1317     06B4  300A               	movlw	10
  1318     06B5  00F0               	movwf	___awdiv@divisor
  1319     06B6  3000               	movlw	0
  1320     06B7  00F1               	movwf	___awdiv@divisor+1
  1321     06B8  0855               	movf	main@VAL2,w
  1322     06B9  00AD               	movwf	??_main
  1323     06BA  01AE               	clrf	??_main+1
  1324     06BB  082D               	movf	??_main,w
  1325     06BC  00F2               	movwf	___awdiv@dividend
  1326     06BD  082E               	movf	??_main+1,w
  1327     06BE  00F3               	movwf	___awdiv@dividend+1
  1328     06BF  120A  118A  2415  120A  118A  	fcall	___awdiv
  1329     06C4  0871               	movf	?___awdiv+1,w
  1330     06C5  00FC               	movwf	___awmod@dividend+1
  1331     06C6  0870               	movf	?___awdiv,w
  1332     06C7  00FB               	movwf	___awmod@dividend
  1333     06C8  120A  118A  235D  120A  118A  	fcall	___awmod
  1334     06CD  0879               	movf	?___awmod,w
  1335     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1336     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  1337     06D0  00CE               	movwf	main@VAL2_D
  1338     06D1                     l1554:
  1339                           
  1340                           ;main_M.c: 147:       VAL2_U = VAL2%10;
  1341     06D1  300A               	movlw	10
  1342     06D2  00F9               	movwf	___awmod@divisor
  1343     06D3  3000               	movlw	0
  1344     06D4  00FA               	movwf	___awmod@divisor+1
  1345     06D5  0855               	movf	main@VAL2,w
  1346     06D6  00AD               	movwf	??_main
  1347     06D7  01AE               	clrf	??_main+1
  1348     06D8  082D               	movf	??_main,w
  1349     06D9  00FB               	movwf	___awmod@dividend
  1350     06DA  082E               	movf	??_main+1,w
  1351     06DB  00FC               	movwf	___awmod@dividend+1
  1352     06DC  120A  118A  235D  120A  118A  	fcall	___awmod
  1353     06E1  0879               	movf	?___awmod,w
  1354     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1355     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1356     06E4  00CD               	movwf	main@VAL2_U
  1357     06E5                     l1556:
  1358                           
  1359                           ;main_M.c: 149:       sprintf(ADC2, "%u", VAL2_C);
  1360     06E5  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1361     06E6  00A0               	movwf	sprintf@f
  1362     06E7  084F               	movf	main@VAL2_C,w
  1363     06E8  00AD               	movwf	??_main
  1364     06E9  01AE               	clrf	??_main+1
  1365     06EA  082D               	movf	??_main,w
  1366     06EB  00A1               	movwf	?_sprintf+1
  1367     06EC  082E               	movf	??_main+1,w
  1368     06ED  00A2               	movwf	?_sprintf+2
  1369     06EE  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1370     06EF  120A  118A  247C  120A  118A  	fcall	_sprintf
  1371     06F4                     l1558:
  1372                           
  1373                           ;main_M.c: 150:       Lcd_Set_Cursor_4bits(2,7);
  1374     06F4  3007               	movlw	7
  1375     06F5  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1376     06F6  3002               	movlw	2
  1377     06F7  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1378     06FC                     l1560:
  1379                           
  1380                           ;main_M.c: 151:       Lcd_Write_String_4bits(ADC2);
  1381     06FC  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1382     06FD  00F5               	movwf	Lcd_Write_String_4bits@a
  1383     06FE  3000               	movlw	0
  1384     06FF  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1385     0700  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
  1386     0705                     l1562:
  1387                           
  1388                           ;main_M.c: 153:       sprintf(ADC2, "%u", VAL2_D);
  1389     0705  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1390     0706  1283               	bcf	3,5	;RP0=0, select bank0
  1391     0707  1303               	bcf	3,6	;RP1=0, select bank0
  1392     0708  00A0               	movwf	sprintf@f
  1393     0709  084E               	movf	main@VAL2_D,w
  1394     070A  00AD               	movwf	??_main
  1395     070B  01AE               	clrf	??_main+1
  1396     070C  082D               	movf	??_main,w
  1397     070D  00A1               	movwf	?_sprintf+1
  1398     070E  082E               	movf	??_main+1,w
  1399     070F  00A2               	movwf	?_sprintf+2
  1400     0710  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1401     0711  120A  118A  247C  120A  118A  	fcall	_sprintf
  1402     0716                     l1564:
  1403                           
  1404                           ;main_M.c: 154:       Lcd_Set_Cursor_4bits(2,8);
  1405     0716  3008               	movlw	8
  1406     0717  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1407     0718  3002               	movlw	2
  1408     0719  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1409     071E                     l1566:
  1410                           
  1411                           ;main_M.c: 155:       Lcd_Write_String_4bits(ADC2);
  1412     071E  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1413     071F  00F5               	movwf	Lcd_Write_String_4bits@a
  1414     0720  3000               	movlw	0
  1415     0721  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1416     0722  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
  1417     0727                     l1568:
  1418                           
  1419                           ;main_M.c: 157:       sprintf(ADC2, "%u", VAL2_U);
  1420     0727  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1421     0728  1283               	bcf	3,5	;RP0=0, select bank0
  1422     0729  1303               	bcf	3,6	;RP1=0, select bank0
  1423     072A  00A0               	movwf	sprintf@f
  1424     072B  084D               	movf	main@VAL2_U,w
  1425     072C  00AD               	movwf	??_main
  1426     072D  01AE               	clrf	??_main+1
  1427     072E  082D               	movf	??_main,w
  1428     072F  00A1               	movwf	?_sprintf+1
  1429     0730  082E               	movf	??_main+1,w
  1430     0731  00A2               	movwf	?_sprintf+2
  1431     0732  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1432     0733  120A  118A  247C  120A  118A  	fcall	_sprintf
  1433     0738                     l1570:
  1434                           
  1435                           ;main_M.c: 158:       Lcd_Set_Cursor_4bits(2,9);
  1436     0738  3009               	movlw	9
  1437     0739  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1438     073A  3002               	movlw	2
  1439     073B  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1440     0740                     l1572:
  1441                           
  1442                           ;main_M.c: 159:       Lcd_Write_String_4bits(ADC2);
  1443     0740  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1444     0741  00F5               	movwf	Lcd_Write_String_4bits@a
  1445     0742  3000               	movlw	0
  1446     0743  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1447     0744  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
  1448     0749                     l1574:
  1449                           
  1450                           ;main_M.c: 161:       CONT_C = (CONT/100);
  1451     0749  3064               	movlw	100
  1452     074A  00F0               	movwf	___awdiv@divisor
  1453     074B  3000               	movlw	0
  1454     074C  00F1               	movwf	___awdiv@divisor+1
  1455     074D  1283               	bcf	3,5	;RP0=0, select bank0
  1456     074E  1303               	bcf	3,6	;RP1=0, select bank0
  1457     074F  0856               	movf	main@CONT,w
  1458     0750  00AD               	movwf	??_main
  1459     0751  01AE               	clrf	??_main+1
  1460     0752  082D               	movf	??_main,w
  1461     0753  00F2               	movwf	___awdiv@dividend
  1462     0754  082E               	movf	??_main+1,w
  1463     0755  00F3               	movwf	___awdiv@dividend+1
  1464     0756  120A  118A  2415  120A  118A  	fcall	___awdiv
  1465     075B  0870               	movf	?___awdiv,w
  1466     075C  1283               	bcf	3,5	;RP0=0, select bank0
  1467     075D  1303               	bcf	3,6	;RP1=0, select bank0
  1468     075E  00D2               	movwf	main@CONT_C
  1469     075F                     l1576:
  1470                           
  1471                           ;main_M.c: 162:       CONT_D = (CONT/10)%10;
  1472     075F  300A               	movlw	10
  1473     0760  00F9               	movwf	___awmod@divisor
  1474     0761  3000               	movlw	0
  1475     0762  00FA               	movwf	___awmod@divisor+1
  1476     0763  300A               	movlw	10
  1477     0764  00F0               	movwf	___awdiv@divisor
  1478     0765  3000               	movlw	0
  1479     0766  00F1               	movwf	___awdiv@divisor+1
  1480     0767  0856               	movf	main@CONT,w
  1481     0768  00AD               	movwf	??_main
  1482     0769  01AE               	clrf	??_main+1
  1483     076A  082D               	movf	??_main,w
  1484     076B  00F2               	movwf	___awdiv@dividend
  1485     076C  082E               	movf	??_main+1,w
  1486     076D  00F3               	movwf	___awdiv@dividend+1
  1487     076E  120A  118A  2415  120A  118A  	fcall	___awdiv
  1488     0773  0871               	movf	?___awdiv+1,w
  1489     0774  00FC               	movwf	___awmod@dividend+1
  1490     0775  0870               	movf	?___awdiv,w
  1491     0776  00FB               	movwf	___awmod@dividend
  1492     0777  120A  118A  235D  120A  118A  	fcall	___awmod
  1493     077C  0879               	movf	?___awmod,w
  1494     077D  1283               	bcf	3,5	;RP0=0, select bank0
  1495     077E  1303               	bcf	3,6	;RP1=0, select bank0
  1496     077F  00D1               	movwf	main@CONT_D
  1497     0780                     l1578:
  1498                           
  1499                           ;main_M.c: 163:       CONT_U = CONT%10;
  1500     0780  300A               	movlw	10
  1501     0781  00F9               	movwf	___awmod@divisor
  1502     0782  3000               	movlw	0
  1503     0783  00FA               	movwf	___awmod@divisor+1
  1504     0784  0856               	movf	main@CONT,w
  1505     0785  00AD               	movwf	??_main
  1506     0786  01AE               	clrf	??_main+1
  1507     0787  082D               	movf	??_main,w
  1508     0788  00FB               	movwf	___awmod@dividend
  1509     0789  082E               	movf	??_main+1,w
  1510     078A  00FC               	movwf	___awmod@dividend+1
  1511     078B  120A  118A  235D  120A  118A  	fcall	___awmod
  1512     0790  0879               	movf	?___awmod,w
  1513     0791  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0792  1303               	bcf	3,6	;RP1=0, select bank0
  1515     0793  00D0               	movwf	main@CONT_U
  1516     0794                     l1580:
  1517                           
  1518                           ;main_M.c: 165:       sprintf(CONT_S, "%u", CONT_C);
  1519     0794  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1520     0795  00A0               	movwf	sprintf@f
  1521     0796  0852               	movf	main@CONT_C,w
  1522     0797  00AD               	movwf	??_main
  1523     0798  01AE               	clrf	??_main+1
  1524     0799  082D               	movf	??_main,w
  1525     079A  00A1               	movwf	?_sprintf+1
  1526     079B  082E               	movf	??_main+1,w
  1527     079C  00A2               	movwf	?_sprintf+2
  1528     079D  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1529     079E  120A  118A  247C  120A  118A  	fcall	_sprintf
  1530     07A3                     l1582:
  1531                           
  1532                           ;main_M.c: 166:       Lcd_Set_Cursor_4bits(2,13);
  1533     07A3  300D               	movlw	13
  1534     07A4  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1535     07A5  3002               	movlw	2
  1536     07A6  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1537     07AB                     l1584:
  1538                           
  1539                           ;main_M.c: 167:       Lcd_Write_String_4bits(CONT_S);
  1540     07AB  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1541     07AC  00F5               	movwf	Lcd_Write_String_4bits@a
  1542     07AD  3000               	movlw	0
  1543     07AE  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1544     07AF  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
  1545     07B4                     l1586:
  1546                           
  1547                           ;main_M.c: 169:       sprintf(CONT_S, "%u", CONT_D);
  1548     07B4  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1549     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1550     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1551     07B7  00A0               	movwf	sprintf@f
  1552     07B8  0851               	movf	main@CONT_D,w
  1553     07B9  00AD               	movwf	??_main
  1554     07BA  01AE               	clrf	??_main+1
  1555     07BB  082D               	movf	??_main,w
  1556     07BC  00A1               	movwf	?_sprintf+1
  1557     07BD  082E               	movf	??_main+1,w
  1558     07BE  00A2               	movwf	?_sprintf+2
  1559     07BF  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1560     07C0  120A  118A  247C  120A  118A  	fcall	_sprintf
  1561     07C5                     l1588:
  1562                           
  1563                           ;main_M.c: 170:       Lcd_Set_Cursor_4bits(2,14);
  1564     07C5  300E               	movlw	14
  1565     07C6  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1566     07C7  3002               	movlw	2
  1567     07C8  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1568     07CD                     l1590:
  1569                           
  1570                           ;main_M.c: 171:       Lcd_Write_String_4bits(CONT_S);
  1571     07CD  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1572     07CE  00F5               	movwf	Lcd_Write_String_4bits@a
  1573     07CF  3000               	movlw	0
  1574     07D0  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1575     07D1  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
  1576     07D6                     l1592:
  1577                           
  1578                           ;main_M.c: 173:       sprintf(CONT_S, "%u", CONT_U);
  1579     07D6  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1580     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1581     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1582     07D9  00A0               	movwf	sprintf@f
  1583     07DA  0850               	movf	main@CONT_U,w
  1584     07DB  00AD               	movwf	??_main
  1585     07DC  01AE               	clrf	??_main+1
  1586     07DD  082D               	movf	??_main,w
  1587     07DE  00A1               	movwf	?_sprintf+1
  1588     07DF  082E               	movf	??_main+1,w
  1589     07E0  00A2               	movwf	?_sprintf+2
  1590     07E1  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1591     07E2  120A  118A  247C  120A  118A  	fcall	_sprintf
  1592     07E7                     l1594:
  1593                           
  1594                           ;main_M.c: 174:       Lcd_Set_Cursor_4bits(2,15);
  1595     07E7  300F               	movlw	15
  1596     07E8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1597     07E9  3002               	movlw	2
  1598     07EA  120A  118A  2317  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1599     07EF                     l1596:
  1600                           
  1601                           ;main_M.c: 175:       Lcd_Write_String_4bits(CONT_S);
  1602     07EF  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1603     07F0  00F5               	movwf	Lcd_Write_String_4bits@a
  1604     07F1  3000               	movlw	0
  1605     07F2  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1606     07F3  120A  118A  2291  120A  118A  	fcall	_Lcd_Write_String_4bits
  1607     07F8  2D7A               	goto	l1506
  1608     07F9  120A  118A  2800   	ljmp	start
  1609     07FC                     __end_of_main:
  1610                           
  1611                           	psect	text1
  1612     047C                     __ptext1:	
  1613 ;; *************** function _sprintf *****************
  1614 ;; Defined at:
  1615 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  sp              1    wreg     PTR unsigned char 
  1618 ;;		 -> main@CONT_S(9), main@ADC2(9), main@ADC1(9), 
  1619 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1620 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(3), 
  1621 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  1622 ;;		 -> STR_4(3), 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1625 ;;		 -> main@CONT_S(9), main@ADC2(9), main@ADC1(9), 
  1626 ;;  tmpval          4    0        struct .
  1627 ;;  val             2    8[BANK0 ] unsigned int 
  1628 ;;  cp              2    0        PTR const unsigned char 
  1629 ;;  len             2    0        unsigned int 
  1630 ;;  c               1   12[BANK0 ] unsigned char 
  1631 ;;  prec            1   10[BANK0 ] char 
  1632 ;;  ap              1    7[BANK0 ] PTR void [1]
  1633 ;;		 -> ?_sprintf(2), 
  1634 ;;  flag            1    6[BANK0 ] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  2    0[BANK0 ] int 
  1637 ;; Registers used:
  1638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         0       3       0       0       0
  1645 ;;      Locals:         0       7       0       0       0
  1646 ;;      Temps:          0       3       0       0       0
  1647 ;;      Totals:         0      13       0       0       0
  1648 ;;Total ram usage:       13 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; Hardware stack levels required when called: 1
  1651 ;; This function calls:
  1652 ;;		___lwdiv
  1653 ;;		___lwmod
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659     047C                     _sprintf:	
  1660                           ;psect for function _sprintf
  1661                           
  1662                           
  1663                           ;incstack = 0
  1664                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1665                           ;sprintf@sp stored from wreg
  1666     047C  1283               	bcf	3,5	;RP0=0, select bank0
  1667     047D  1303               	bcf	3,6	;RP1=0, select bank0
  1668     047E  00AB               	movwf	sprintf@sp
  1669     047F                     l1358:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1672     047F  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1673     0480  00A7               	movwf	sprintf@ap
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1676     0481  2D28               	goto	l1400
  1677     0482                     l1360:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1680     0482  3025               	movlw	37
  1681     0483  062C               	xorwf	sprintf@c,w
  1682     0484  1903               	btfsc	3,2
  1683     0485  2C87               	goto	u811
  1684     0486  2C88               	goto	u810
  1685     0487                     u811:
  1686     0487  2C92               	goto	l1366
  1687     0488                     u810:
  1688     0488                     l1362:
  1689                           
  1690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1691     0488  082B               	movf	sprintf@sp,w
  1692     0489  0084               	movwf	4
  1693     048A  082C               	movf	sprintf@c,w
  1694     048B  1383               	bcf	3,7	;select IRP bank0
  1695     048C  0080               	movwf	0
  1696     048D                     l1364:
  1697     048D  3001               	movlw	1
  1698     048E  00A3               	movwf	??_sprintf
  1699     048F  0823               	movf	??_sprintf,w
  1700     0490  07AB               	addwf	sprintf@sp,f
  1701                           
  1702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1703     0491  2D28               	goto	l1400
  1704     0492                     l1366:
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1707     0492  01A6               	clrf	sprintf@flag
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1710     0493  2C99               	goto	l1372
  1711     0494                     l1368:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1714     0494  30C0               	movlw	192
  1715     0495  00A3               	movwf	??_sprintf
  1716     0496  0823               	movf	??_sprintf,w
  1717     0497  04A6               	iorwf	sprintf@flag,f
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1720     0498  2CB3               	goto	l1374
  1721     0499                     l1372:
  1722     0499  3001               	movlw	1
  1723     049A  07A0               	addwf	sprintf@f,f
  1724     049B  30FF               	movlw	-1
  1725     049C  0720               	addwf	sprintf@f,w
  1726     049D  0084               	movwf	4
  1727     049E  120A  118A  200D  120A  118A  	fcall	stringdir
  1728     04A3  00AC               	movwf	sprintf@c
  1729     04A4  00A3               	movwf	??_sprintf
  1730     04A5  01A4               	clrf	??_sprintf+1
  1731                           
  1732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1733                           ; Switch size 1, requested type "simple"
  1734                           ; Number of cases is 1, Range of values is 0 to 0
  1735                           ; switch strategies available:
  1736                           ; Name         Instructions Cycles
  1737                           ; simple_byte            4     3 (average)
  1738                           ; direct_byte           11     8 (fixed)
  1739                           ; jumptable            260     6 (fixed)
  1740                           ;	Chosen strategy is simple_byte
  1741     04A6  0824               	movf	??_sprintf+1,w
  1742     04A7  3A00               	xorlw	0	; case 0
  1743     04A8  1903               	skipnz
  1744     04A9  2CAB               	goto	l1618
  1745     04AA  2D28               	goto	l1400
  1746     04AB                     l1618:
  1747                           
  1748                           ; Switch size 1, requested type "simple"
  1749                           ; Number of cases is 2, Range of values is 0 to 117
  1750                           ; switch strategies available:
  1751                           ; Name         Instructions Cycles
  1752                           ; simple_byte            7     4 (average)
  1753                           ; jumptable            260     6 (fixed)
  1754                           ;	Chosen strategy is simple_byte
  1755     04AB  0823               	movf	??_sprintf,w
  1756     04AC  3A00               	xorlw	0	; case 0
  1757     04AD  1903               	skipnz
  1758     04AE  2D38               	goto	l1402
  1759     04AF  3A75               	xorlw	117	; case 117
  1760     04B0  1903               	skipnz
  1761     04B1  2C94               	goto	l1368
  1762     04B2  2D28               	goto	l1400
  1763     04B3                     l1374:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1766     04B3  0827               	movf	sprintf@ap,w
  1767     04B4  0084               	movwf	4
  1768     04B5  1383               	bcf	3,7	;select IRP bank0
  1769     04B6  0800               	movf	0,w
  1770     04B7  00A8               	movwf	sprintf@val
  1771     04B8  0A84               	incf	4,f
  1772     04B9  0800               	movf	0,w
  1773     04BA  00A9               	movwf	sprintf@val+1
  1774     04BB                     l1376:
  1775     04BB  3002               	movlw	2
  1776     04BC  00A3               	movwf	??_sprintf
  1777     04BD  0823               	movf	??_sprintf,w
  1778     04BE  07A7               	addwf	sprintf@ap,f
  1779     04BF                     l1378:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1782     04BF  01AC               	clrf	sprintf@c
  1783     04C0  0AAC               	incf	sprintf@c,f
  1784     04C1                     l1384:
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1787     04C1  082C               	movf	sprintf@c,w
  1788     04C2  00A3               	movwf	??_sprintf
  1789     04C3  0723               	addwf	??_sprintf,w
  1790     04C4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1791     04C5  0084               	movwf	4
  1792     04C6  120A  118A  200D  120A  118A  	fcall	stringdir
  1793     04CB  00A4               	movwf	??_sprintf+1
  1794     04CC  120A  118A  200D  120A  118A  	fcall	stringdir
  1795     04D1  00A5               	movwf	??_sprintf+2
  1796     04D2  0825               	movf	??_sprintf+2,w
  1797     04D3  0229               	subwf	sprintf@val+1,w
  1798     04D4  1D03               	skipz
  1799     04D5  2CD8               	goto	u825
  1800     04D6  0824               	movf	??_sprintf+1,w
  1801     04D7  0228               	subwf	sprintf@val,w
  1802     04D8                     u825:
  1803     04D8  1803               	skipnc
  1804     04D9  2CDB               	goto	u821
  1805     04DA  2CDC               	goto	u820
  1806     04DB                     u821:
  1807     04DB  2CDD               	goto	l1388
  1808     04DC                     u820:
  1809     04DC  2CE7               	goto	l1390
  1810     04DD                     l1388:
  1811     04DD  3001               	movlw	1
  1812     04DE  00A3               	movwf	??_sprintf
  1813     04DF  0823               	movf	??_sprintf,w
  1814     04E0  07AC               	addwf	sprintf@c,f
  1815     04E1  3005               	movlw	5
  1816     04E2  062C               	xorwf	sprintf@c,w
  1817     04E3  1D03               	btfss	3,2
  1818     04E4  2CE6               	goto	u831
  1819     04E5  2CE7               	goto	u830
  1820     04E6                     u831:
  1821     04E6  2CC1               	goto	l1384
  1822     04E7                     u830:
  1823     04E7                     l1390:
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1826     04E7  082C               	movf	sprintf@c,w
  1827     04E8  00AA               	movwf	sprintf@prec
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1830     04E9  2D1F               	goto	l1398
  1831     04EA                     l1392:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1834     04EA  300A               	movlw	10
  1835     04EB  00F8               	movwf	___lwmod@divisor
  1836     04EC  3000               	movlw	0
  1837     04ED  00F9               	movwf	___lwmod@divisor+1
  1838     04EE  082A               	movf	sprintf@prec,w
  1839     04EF  00A3               	movwf	??_sprintf
  1840     04F0  0723               	addwf	??_sprintf,w
  1841     04F1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1842     04F2  0084               	movwf	4
  1843     04F3  120A  118A  200D  120A  118A  	fcall	stringdir
  1844     04F8  00F0               	movwf	___lwdiv@divisor
  1845     04F9  120A  118A  200D  120A  118A  	fcall	stringdir
  1846     04FE  00F1               	movwf	___lwdiv@divisor+1
  1847     04FF  0829               	movf	sprintf@val+1,w
  1848     0500  00F3               	movwf	___lwdiv@dividend+1
  1849     0501  0828               	movf	sprintf@val,w
  1850     0502  00F2               	movwf	___lwdiv@dividend
  1851     0503  120A  118A  22D3  120A  118A  	fcall	___lwdiv
  1852     0508  0871               	movf	?___lwdiv+1,w
  1853     0509  00FB               	movwf	___lwmod@dividend+1
  1854     050A  0870               	movf	?___lwdiv,w
  1855     050B  00FA               	movwf	___lwmod@dividend
  1856     050C  120A  118A  2257  120A  118A  	fcall	___lwmod
  1857     0511  0878               	movf	?___lwmod,w
  1858     0512  3E30               	addlw	48
  1859     0513  1283               	bcf	3,5	;RP0=0, select bank0
  1860     0514  1303               	bcf	3,6	;RP1=0, select bank0
  1861     0515  00AC               	movwf	sprintf@c
  1862     0516                     l1394:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1865     0516  082B               	movf	sprintf@sp,w
  1866     0517  0084               	movwf	4
  1867     0518  082C               	movf	sprintf@c,w
  1868     0519  1383               	bcf	3,7	;select IRP bank0
  1869     051A  0080               	movwf	0
  1870     051B                     l1396:
  1871     051B  3001               	movlw	1
  1872     051C  00A3               	movwf	??_sprintf
  1873     051D  0823               	movf	??_sprintf,w
  1874     051E  07AB               	addwf	sprintf@sp,f
  1875     051F                     l1398:
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1878     051F  30FF               	movlw	255
  1879     0520  00A3               	movwf	??_sprintf
  1880     0521  0823               	movf	??_sprintf,w
  1881     0522  07AA               	addwf	sprintf@prec,f
  1882     0523  0A2A               	incf	sprintf@prec,w
  1883     0524  1D03               	btfss	3,2
  1884     0525  2D27               	goto	u841
  1885     0526  2D28               	goto	u840
  1886     0527                     u841:
  1887     0527  2CEA               	goto	l1392
  1888     0528                     u840:
  1889     0528                     l1400:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1892     0528  3001               	movlw	1
  1893     0529  07A0               	addwf	sprintf@f,f
  1894     052A  30FF               	movlw	-1
  1895     052B  0720               	addwf	sprintf@f,w
  1896     052C  0084               	movwf	4
  1897     052D  120A  118A  200D  120A  118A  	fcall	stringdir
  1898     0532  00AC               	movwf	sprintf@c
  1899     0533  082C               	movf	sprintf@c,w
  1900     0534  1D03               	btfss	3,2
  1901     0535  2D37               	goto	u851
  1902     0536  2D38               	goto	u850
  1903     0537                     u851:
  1904     0537  2C82               	goto	l1360
  1905     0538                     u850:
  1906     0538                     l1402:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1909     0538  082B               	movf	sprintf@sp,w
  1910     0539  0084               	movwf	4
  1911     053A  1383               	bcf	3,7	;select IRP bank0
  1912     053B  0180               	clrf	0
  1913     053C                     l246:
  1914     053C  0008               	return
  1915     053D                     __end_of_sprintf:
  1916                           
  1917                           	psect	text2
  1918     0257                     __ptext2:	
  1919 ;; *************** function ___lwmod *****************
  1920 ;; Defined at:
  1921 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  divisor         2    8[COMMON] unsigned int 
  1924 ;;  dividend        2   10[COMMON] unsigned int 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  counter         1   13[COMMON] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  2    8[COMMON] unsigned int 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         4       0       0       0       0
  1937 ;;      Locals:         1       0       0       0       0
  1938 ;;      Temps:          1       0       0       0       0
  1939 ;;      Totals:         6       0       0       0       0
  1940 ;;Total ram usage:        6 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_sprintf
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949     0257                     ___lwmod:	
  1950                           ;psect for function ___lwmod
  1951                           
  1952     0257                     l1282:	
  1953                           ;incstack = 0
  1954                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1955                           
  1956     0257  0878               	movf	___lwmod@divisor,w
  1957     0258  0479               	iorwf	___lwmod@divisor+1,w
  1958     0259  1903               	btfsc	3,2
  1959     025A  2A5C               	goto	u681
  1960     025B  2A5D               	goto	u680
  1961     025C                     u681:
  1962     025C  2A8C               	goto	l1300
  1963     025D                     u680:
  1964     025D                     l1284:
  1965     025D  01FD               	clrf	___lwmod@counter
  1966     025E  0AFD               	incf	___lwmod@counter,f
  1967     025F  2A6B               	goto	l1290
  1968     0260                     l1286:
  1969     0260  3001               	movlw	1
  1970     0261                     u695:
  1971     0261  1003               	clrc
  1972     0262  0DF8               	rlf	___lwmod@divisor,f
  1973     0263  0DF9               	rlf	___lwmod@divisor+1,f
  1974     0264  3EFF               	addlw	-1
  1975     0265  1D03               	skipz
  1976     0266  2A61               	goto	u695
  1977     0267                     l1288:
  1978     0267  3001               	movlw	1
  1979     0268  00FC               	movwf	??___lwmod
  1980     0269  087C               	movf	??___lwmod,w
  1981     026A  07FD               	addwf	___lwmod@counter,f
  1982     026B                     l1290:
  1983     026B  1FF9               	btfss	___lwmod@divisor+1,7
  1984     026C  2A6E               	goto	u701
  1985     026D  2A6F               	goto	u700
  1986     026E                     u701:
  1987     026E  2A60               	goto	l1286
  1988     026F                     u700:
  1989     026F                     l1292:
  1990     026F  0879               	movf	___lwmod@divisor+1,w
  1991     0270  027B               	subwf	___lwmod@dividend+1,w
  1992     0271  1D03               	skipz
  1993     0272  2A75               	goto	u715
  1994     0273  0878               	movf	___lwmod@divisor,w
  1995     0274  027A               	subwf	___lwmod@dividend,w
  1996     0275                     u715:
  1997     0275  1C03               	skipc
  1998     0276  2A78               	goto	u711
  1999     0277  2A79               	goto	u710
  2000     0278                     u711:
  2001     0278  2A7F               	goto	l1296
  2002     0279                     u710:
  2003     0279                     l1294:
  2004     0279  0878               	movf	___lwmod@divisor,w
  2005     027A  02FA               	subwf	___lwmod@dividend,f
  2006     027B  0879               	movf	___lwmod@divisor+1,w
  2007     027C  1C03               	skipc
  2008     027D  03FB               	decf	___lwmod@dividend+1,f
  2009     027E  02FB               	subwf	___lwmod@dividend+1,f
  2010     027F                     l1296:
  2011     027F  3001               	movlw	1
  2012     0280                     u725:
  2013     0280  1003               	clrc
  2014     0281  0CF9               	rrf	___lwmod@divisor+1,f
  2015     0282  0CF8               	rrf	___lwmod@divisor,f
  2016     0283  3EFF               	addlw	-1
  2017     0284  1D03               	skipz
  2018     0285  2A80               	goto	u725
  2019     0286                     l1298:
  2020     0286  3001               	movlw	1
  2021     0287  02FD               	subwf	___lwmod@counter,f
  2022     0288  1D03               	btfss	3,2
  2023     0289  2A8B               	goto	u731
  2024     028A  2A8C               	goto	u730
  2025     028B                     u731:
  2026     028B  2A6F               	goto	l1292
  2027     028C                     u730:
  2028     028C                     l1300:
  2029     028C  087B               	movf	___lwmod@dividend+1,w
  2030     028D  00F9               	movwf	?___lwmod+1
  2031     028E  087A               	movf	___lwmod@dividend,w
  2032     028F  00F8               	movwf	?___lwmod
  2033     0290                     l532:
  2034     0290  0008               	return
  2035     0291                     __end_of___lwmod:
  2036                           
  2037                           	psect	text3
  2038     02D3                     __ptext3:	
  2039 ;; *************** function ___lwdiv *****************
  2040 ;; Defined at:
  2041 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  divisor         2    0[COMMON] unsigned int 
  2044 ;;  dividend        2    2[COMMON] unsigned int 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  quotient        2    5[COMMON] unsigned int 
  2047 ;;  counter         1    7[COMMON] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  2    0[COMMON] unsigned int 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         4       0       0       0       0
  2058 ;;      Locals:         3       0       0       0       0
  2059 ;;      Temps:          1       0       0       0       0
  2060 ;;      Totals:         8       0       0       0       0
  2061 ;;Total ram usage:        8 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_sprintf
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070     02D3                     ___lwdiv:	
  2071                           ;psect for function ___lwdiv
  2072                           
  2073     02D3                     l1256:	
  2074                           ;incstack = 0
  2075                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2076                           
  2077     02D3  01F5               	clrf	___lwdiv@quotient
  2078     02D4  01F6               	clrf	___lwdiv@quotient+1
  2079     02D5                     l1258:
  2080     02D5  0870               	movf	___lwdiv@divisor,w
  2081     02D6  0471               	iorwf	___lwdiv@divisor+1,w
  2082     02D7  1903               	btfsc	3,2
  2083     02D8  2ADA               	goto	u611
  2084     02D9  2ADB               	goto	u610
  2085     02DA                     u611:
  2086     02DA  2B12               	goto	l1278
  2087     02DB                     u610:
  2088     02DB                     l1260:
  2089     02DB  01F7               	clrf	___lwdiv@counter
  2090     02DC  0AF7               	incf	___lwdiv@counter,f
  2091     02DD  2AE9               	goto	l1266
  2092     02DE                     l1262:
  2093     02DE  3001               	movlw	1
  2094     02DF                     u625:
  2095     02DF  1003               	clrc
  2096     02E0  0DF0               	rlf	___lwdiv@divisor,f
  2097     02E1  0DF1               	rlf	___lwdiv@divisor+1,f
  2098     02E2  3EFF               	addlw	-1
  2099     02E3  1D03               	skipz
  2100     02E4  2ADF               	goto	u625
  2101     02E5                     l1264:
  2102     02E5  3001               	movlw	1
  2103     02E6  00F4               	movwf	??___lwdiv
  2104     02E7  0874               	movf	??___lwdiv,w
  2105     02E8  07F7               	addwf	___lwdiv@counter,f
  2106     02E9                     l1266:
  2107     02E9  1FF1               	btfss	___lwdiv@divisor+1,7
  2108     02EA  2AEC               	goto	u631
  2109     02EB  2AED               	goto	u630
  2110     02EC                     u631:
  2111     02EC  2ADE               	goto	l1262
  2112     02ED                     u630:
  2113     02ED                     l1268:
  2114     02ED  3001               	movlw	1
  2115     02EE                     u645:
  2116     02EE  1003               	clrc
  2117     02EF  0DF5               	rlf	___lwdiv@quotient,f
  2118     02F0  0DF6               	rlf	___lwdiv@quotient+1,f
  2119     02F1  3EFF               	addlw	-1
  2120     02F2  1D03               	skipz
  2121     02F3  2AEE               	goto	u645
  2122     02F4  0871               	movf	___lwdiv@divisor+1,w
  2123     02F5  0273               	subwf	___lwdiv@dividend+1,w
  2124     02F6  1D03               	skipz
  2125     02F7  2AFA               	goto	u655
  2126     02F8  0870               	movf	___lwdiv@divisor,w
  2127     02F9  0272               	subwf	___lwdiv@dividend,w
  2128     02FA                     u655:
  2129     02FA  1C03               	skipc
  2130     02FB  2AFD               	goto	u651
  2131     02FC  2AFE               	goto	u650
  2132     02FD                     u651:
  2133     02FD  2B05               	goto	l1274
  2134     02FE                     u650:
  2135     02FE                     l1270:
  2136     02FE  0870               	movf	___lwdiv@divisor,w
  2137     02FF  02F2               	subwf	___lwdiv@dividend,f
  2138     0300  0871               	movf	___lwdiv@divisor+1,w
  2139     0301  1C03               	skipc
  2140     0302  03F3               	decf	___lwdiv@dividend+1,f
  2141     0303  02F3               	subwf	___lwdiv@dividend+1,f
  2142     0304                     l1272:
  2143     0304  1475               	bsf	___lwdiv@quotient,0
  2144     0305                     l1274:
  2145     0305  3001               	movlw	1
  2146     0306                     u665:
  2147     0306  1003               	clrc
  2148     0307  0CF1               	rrf	___lwdiv@divisor+1,f
  2149     0308  0CF0               	rrf	___lwdiv@divisor,f
  2150     0309  3EFF               	addlw	-1
  2151     030A  1D03               	skipz
  2152     030B  2B06               	goto	u665
  2153     030C                     l1276:
  2154     030C  3001               	movlw	1
  2155     030D  02F7               	subwf	___lwdiv@counter,f
  2156     030E  1D03               	btfss	3,2
  2157     030F  2B11               	goto	u671
  2158     0310  2B12               	goto	u670
  2159     0311                     u671:
  2160     0311  2AED               	goto	l1268
  2161     0312                     u670:
  2162     0312                     l1278:
  2163     0312  0876               	movf	___lwdiv@quotient+1,w
  2164     0313  00F1               	movwf	?___lwdiv+1
  2165     0314  0875               	movf	___lwdiv@quotient,w
  2166     0315  00F0               	movwf	?___lwdiv
  2167     0316                     l522:
  2168     0316  0008               	return
  2169     0317                     __end_of___lwdiv:
  2170                           
  2171                           	psect	text4
  2172     0173                     __ptext4:	
  2173 ;; *************** function _spiWrite *****************
  2174 ;; Defined at:
  2175 ;;		line 34 in file "configSPI.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  dat             1    wreg     unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  dat             1    0[COMMON] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       0       0       0       0
  2190 ;;      Locals:         1       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0
  2192 ;;      Totals:         1       0       0       0       0
  2193 ;;Total ram usage:        1 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202     0173                     _spiWrite:	
  2203                           ;psect for function _spiWrite
  2204                           
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _spiWrite: [wreg]
  2208                           ;spiWrite@dat stored from wreg
  2209     0173  00F0               	movwf	spiWrite@dat
  2210     0174                     l1304:
  2211                           
  2212                           ;configSPI.c: 34: void spiWrite(char dat);configSPI.c: 35: {;configSPI.c: 36:     SSPBUF
      +                           = dat;
  2213     0174  0870               	movf	spiWrite@dat,w
  2214     0175  1283               	bcf	3,5	;RP0=0, select bank0
  2215     0176  1303               	bcf	3,6	;RP1=0, select bank0
  2216     0177  0093               	movwf	19	;volatile
  2217     0178                     l26:
  2218     0178  0008               	return
  2219     0179                     __end_of_spiWrite:
  2220                           
  2221                           	psect	text5
  2222     0180                     __ptext5:	
  2223 ;; *************** function _spiRead *****************
  2224 ;; Defined at:
  2225 ;;		line 47 in file "configSPI.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      unsigned char 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0, pclath, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2239 ;;      Params:         0       0       0       0       0
  2240 ;;      Locals:         0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0
  2242 ;;      Totals:         0       0       0       0       0
  2243 ;;Total ram usage:        0 bytes
  2244 ;; Hardware stack levels used: 1
  2245 ;; Hardware stack levels required when called: 1
  2246 ;; This function calls:
  2247 ;;		_spiReceiveWait
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253     0180                     _spiRead:	
  2254                           ;psect for function _spiRead
  2255                           
  2256     0180                     l1306:	
  2257                           ;incstack = 0
  2258                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2259                           
  2260                           
  2261                           ;configSPI.c: 49:     spiReceiveWait();
  2262     0180  120A  118A  2179  120A  118A  	fcall	_spiReceiveWait
  2263     0185                     l1308:
  2264                           
  2265                           ;configSPI.c: 50:     return(SSPBUF);
  2266     0185  1283               	bcf	3,5	;RP0=0, select bank0
  2267     0186  1303               	bcf	3,6	;RP1=0, select bank0
  2268     0187  0813               	movf	19,w	;volatile
  2269     0188                     l34:
  2270     0188  0008               	return
  2271     0189                     __end_of_spiRead:
  2272                           
  2273                           	psect	text6
  2274     0179                     __ptext6:	
  2275 ;; *************** function _spiReceiveWait *****************
  2276 ;; Defined at:
  2277 ;;		line 29 in file "configSPI.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		None
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_spiRead
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304     0179                     _spiReceiveWait:	
  2305                           ;psect for function _spiReceiveWait
  2306                           
  2307     0179                     l1220:	
  2308                           ;incstack = 0
  2309                           ; Regs used in _spiReceiveWait: []
  2310                           
  2311     0179                     l20:	
  2312                           ;configSPI.c: 31:     while ( !SSPSTATbits.BF );
  2313                           
  2314     0179  1683               	bsf	3,5	;RP0=1, select bank1
  2315     017A  1303               	bcf	3,6	;RP1=0, select bank1
  2316     017B  1C14               	btfss	20,0	;volatile
  2317     017C  297E               	goto	u591
  2318     017D  297F               	goto	u590
  2319     017E                     u591:
  2320     017E  2979               	goto	l20
  2321     017F                     u590:
  2322     017F                     l23:
  2323     017F  0008               	return
  2324     0180                     __end_of_spiReceiveWait:
  2325                           
  2326                           	psect	text7
  2327     01F5                     __ptext7:	
  2328 ;; *************** function _setup *****************
  2329 ;; Defined at:
  2330 ;;		line 184 in file "main_M.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 3
  2351 ;; This function calls:
  2352 ;;		_Lcd_Init_4bits
  2353 ;;		_setupINTOSC
  2354 ;;		_spiInit
  2355 ;; This function is called by:
  2356 ;;		_main
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360     01F5                     _setup:	
  2361                           ;psect for function _setup
  2362                           
  2363     01F5                     l1342:	
  2364                           ;incstack = 0
  2365                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2366                           
  2367                           
  2368                           ;main_M.c: 186:     ANSEL = 0;
  2369     01F5  1683               	bsf	3,5	;RP0=1, select bank3
  2370     01F6  1703               	bsf	3,6	;RP1=1, select bank3
  2371     01F7  0188               	clrf	8	;volatile
  2372                           
  2373                           ;main_M.c: 187:     ANSELH = 0;
  2374     01F8  0189               	clrf	9	;volatile
  2375                           
  2376                           ;main_M.c: 189:     TRISB = 0;
  2377     01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2378     01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2379     01FB  0186               	clrf	6	;volatile
  2380                           
  2381                           ;main_M.c: 190:     TRISD = 0;
  2382     01FC  0188               	clrf	8	;volatile
  2383                           
  2384                           ;main_M.c: 192:     PORTB = 0;
  2385     01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2386     01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2387     01FF  0186               	clrf	6	;volatile
  2388                           
  2389                           ;main_M.c: 193:     PORTD = 0;
  2390     0200  0188               	clrf	8	;volatile
  2391     0201                     l1344:
  2392                           
  2393                           ;main_M.c: 195:     setupINTOSC(FOSC_4MHZ);
  2394     0201  3006               	movlw	6
  2395     0202  120A  118A  2196  120A  118A  	fcall	_setupINTOSC
  2396     0207                     l1346:
  2397                           
  2398                           ;main_M.c: 196:     Lcd_Init_4bits();
  2399     0207  120A  118A  23B8  120A  118A  	fcall	_Lcd_Init_4bits
  2400     020C                     l1348:
  2401                           
  2402                           ;main_M.c: 199:     TRISC1 = 0;
  2403     020C  1683               	bsf	3,5	;RP0=1, select bank1
  2404     020D  1303               	bcf	3,6	;RP1=0, select bank1
  2405     020E  1087               	bcf	7,1	;volatile
  2406     020F                     l1350:
  2407                           
  2408                           ;main_M.c: 200:     PORTCbits.RC1 = 1;
  2409     020F  1283               	bcf	3,5	;RP0=0, select bank0
  2410     0210  1303               	bcf	3,6	;RP1=0, select bank0
  2411     0211  1487               	bsf	7,1	;volatile
  2412     0212                     l1352:
  2413                           
  2414                           ;main_M.c: 201:     TRISC2 = 0;
  2415     0212  1683               	bsf	3,5	;RP0=1, select bank1
  2416     0213  1303               	bcf	3,6	;RP1=0, select bank1
  2417     0214  1107               	bcf	7,2	;volatile
  2418     0215                     l1354:
  2419                           
  2420                           ;main_M.c: 202:     PORTCbits.RC2 = 1;
  2421     0215  1283               	bcf	3,5	;RP0=0, select bank0
  2422     0216  1303               	bcf	3,6	;RP1=0, select bank0
  2423     0217  1507               	bsf	7,2	;volatile
  2424     0218                     l1356:
  2425                           
  2426                           ;main_M.c: 203:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
  2427     0218  01F0               	clrf	spiInit@sDataSample
  2428     0219  01F1               	clrf	spiInit@sClockIdle
  2429     021A  01F2               	clrf	spiInit@sTransmitEdge
  2430     021B  3020               	movlw	32
  2431     021C  120A  118A  21A3  120A  118A  	fcall	_spiInit
  2432     0221                     l139:
  2433     0221  0008               	return
  2434     0222                     __end_of_setup:
  2435                           
  2436                           	psect	text8
  2437     01A3                     __ptext8:	
  2438 ;; *************** function _spiInit *****************
  2439 ;; Defined at:
  2440 ;;		line 12 in file "configSPI.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  sType           1    wreg     enum E1292
  2443 ;;  sDataSample     1    0[COMMON] enum E1300
  2444 ;;  sClockIdle      1    1[COMMON] enum E1304
  2445 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  sType           1    3[COMMON] enum E1292
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         3       0       0       0       0
  2458 ;;      Locals:         1       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0
  2460 ;;      Totals:         4       0       0       0       0
  2461 ;;Total ram usage:        4 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_setup
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470     01A3                     _spiInit:	
  2471                           ;psect for function _spiInit
  2472                           
  2473                           
  2474                           ;incstack = 0
  2475                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2476                           ;spiInit@sType stored from wreg
  2477     01A3  00F3               	movwf	spiInit@sType
  2478     01A4                     l1210:
  2479                           
  2480                           ;configSPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);configSPI.c: 13: {;configSPI.c: 14:     
      +                          TRISC5 = 0;
  2481     01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2482     01A5  1303               	bcf	3,6	;RP1=0, select bank1
  2483     01A6  1287               	bcf	7,5	;volatile
  2484                           
  2485                           ;configSPI.c: 15:     if(sType & 0b00000100)
  2486     01A7  1D73               	btfss	spiInit@sType,2
  2487     01A8  29AA               	goto	u581
  2488     01A9  29AB               	goto	u580
  2489     01AA                     u581:
  2490     01AA  29AF               	goto	l1216
  2491     01AB                     u580:
  2492     01AB                     l1212:
  2493                           
  2494                           ;configSPI.c: 16:     {;configSPI.c: 17:         SSPSTAT = sTransmitEdge;
  2495     01AB  0872               	movf	spiInit@sTransmitEdge,w
  2496     01AC  0094               	movwf	20	;volatile
  2497     01AD                     l1214:
  2498                           
  2499                           ;configSPI.c: 18:         TRISC3 = 1;
  2500     01AD  1587               	bsf	7,3	;volatile
  2501                           
  2502                           ;configSPI.c: 19:     }
  2503     01AE  29B3               	goto	l16
  2504     01AF                     l1216:
  2505                           
  2506                           ;configSPI.c: 21:     {;configSPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2507     01AF  0870               	movf	spiInit@sDataSample,w
  2508     01B0  0472               	iorwf	spiInit@sTransmitEdge,w
  2509     01B1  0094               	movwf	20	;volatile
  2510     01B2                     l1218:
  2511                           
  2512                           ;configSPI.c: 23:         TRISC3 = 0;
  2513     01B2  1187               	bcf	7,3	;volatile
  2514     01B3                     l16:	
  2515                           ;configSPI.c: 24:     }
  2516                           
  2517                           
  2518                           ;configSPI.c: 26:     SSPCON = sType | sClockIdle;
  2519     01B3  0873               	movf	spiInit@sType,w
  2520     01B4  0471               	iorwf	spiInit@sClockIdle,w
  2521     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2522     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2523     01B7  0094               	movwf	20	;volatile
  2524     01B8                     l17:
  2525     01B8  0008               	return
  2526     01B9                     __end_of_spiInit:
  2527                           
  2528                           	psect	text9
  2529     0196                     __ptext9:	
  2530 ;; *************** function _setupINTOSC *****************
  2531 ;; Defined at:
  2532 ;;		line 11 in file "configINTOSC.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  F               1    wreg     enum E1292
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  F               1    1[COMMON] enum E1292
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       0       0       0       0
  2547 ;;      Locals:         1       0       0       0       0
  2548 ;;      Temps:          1       0       0       0       0
  2549 ;;      Totals:         2       0       0       0       0
  2550 ;;Total ram usage:        2 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_setup
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559     0196                     _setupINTOSC:	
  2560                           ;psect for function _setupINTOSC
  2561                           
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  2565                           ;setupINTOSC@F stored from wreg
  2566     0196  00F1               	movwf	setupINTOSC@F
  2567     0197                     l1222:
  2568                           
  2569                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  2570     0197  0871               	movf	setupINTOSC@F,w
  2571     0198  00F0               	movwf	??_setupINTOSC
  2572     0199  0EF0               	swapf	??_setupINTOSC,f
  2573     019A  1683               	bsf	3,5	;RP0=1, select bank1
  2574     019B  1303               	bcf	3,6	;RP1=0, select bank1
  2575     019C  080F               	movf	15,w	;volatile
  2576     019D  0670               	xorwf	??_setupINTOSC,w
  2577     019E  398F               	andlw	-113
  2578     019F  0670               	xorwf	??_setupINTOSC,w
  2579     01A0  008F               	movwf	15	;volatile
  2580     01A1                     l1224:
  2581                           
  2582                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  2583     01A1  140F               	bsf	15,0	;volatile
  2584     01A2                     l39:
  2585     01A2  0008               	return
  2586     01A3                     __end_of_setupINTOSC:
  2587                           
  2588                           	psect	text10
  2589     03B8                     __ptext10:	
  2590 ;; *************** function _Lcd_Init_4bits *****************
  2591 ;; Defined at:
  2592 ;;		line 66 in file "configLCD_4bits.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2606 ;;      Params:         0       0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0
  2608 ;;      Temps:          2       0       0       0       0
  2609 ;;      Totals:         2       0       0       0       0
  2610 ;;Total ram usage:        2 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 2
  2613 ;; This function calls:
  2614 ;;		_Lcd_Cmd_4bits
  2615 ;;		_Lcd_Port_4bits
  2616 ;; This function is called by:
  2617 ;;		_setup
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621     03B8                     _Lcd_Init_4bits:	
  2622                           ;psect for function _Lcd_Init_4bits
  2623                           
  2624     03B8                     l1226:	
  2625                           ;incstack = 0
  2626                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  2627                           
  2628                           
  2629                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  2630     03B8  3000               	movlw	0
  2631     03B9  120A  118A  21D3  120A  118A  	fcall	_Lcd_Port_4bits
  2632     03BE                     l1228:
  2633                           
  2634                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2635     03BE  3034               	movlw	52
  2636     03BF  00F5               	movwf	??_Lcd_Init_4bits+1
  2637     03C0  30F1               	movlw	241
  2638     03C1  00F4               	movwf	??_Lcd_Init_4bits
  2639     03C2                     u1117:
  2640     03C2  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2641     03C3  2BC2               	goto	u1117
  2642     03C4  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2643     03C5  2BC2               	goto	u1117
  2644     03C6  2BC7               	nop2
  2645     03C7                     l1230:
  2646                           
  2647                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  2648     03C7  3003               	movlw	3
  2649     03C8  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  2650                           
  2651                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2652     03CD  300D               	movlw	13
  2653     03CE  00F5               	movwf	??_Lcd_Init_4bits+1
  2654     03CF  30FB               	movlw	251
  2655     03D0  00F4               	movwf	??_Lcd_Init_4bits
  2656     03D1                     u1127:
  2657     03D1  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2658     03D2  2BD1               	goto	u1127
  2659     03D3  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2660     03D4  2BD1               	goto	u1127
  2661     03D5  2BD6               	nop2
  2662     03D6                     l1232:
  2663                           
  2664                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  2665     03D6  3003               	movlw	3
  2666     03D7  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  2667     03DC                     l1234:
  2668                           
  2669                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2670     03DC  301D               	movlw	29
  2671     03DD  00F5               	movwf	??_Lcd_Init_4bits+1
  2672     03DE  3091               	movlw	145
  2673     03DF  00F4               	movwf	??_Lcd_Init_4bits
  2674     03E0                     u1137:
  2675     03E0  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2676     03E1  2BE0               	goto	u1137
  2677     03E2  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2678     03E3  2BE0               	goto	u1137
  2679                           
  2680                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  2681     03E4  3003               	movlw	3
  2682     03E5  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  2683                           
  2684                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  2685     03EA  3002               	movlw	2
  2686     03EB  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  2687                           
  2688                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  2689     03F0  3002               	movlw	2
  2690     03F1  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  2691                           
  2692                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  2693     03F6  3008               	movlw	8
  2694     03F7  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  2695                           
  2696                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  2697     03FC  3000               	movlw	0
  2698     03FD  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  2699                           
  2700                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  2701     0402  300C               	movlw	12
  2702     0403  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  2703                           
  2704                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  2705     0408  3000               	movlw	0
  2706     0409  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  2707                           
  2708                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  2709     040E  3006               	movlw	6
  2710     040F  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  2711     0414                     l69:
  2712     0414  0008               	return
  2713     0415                     __end_of_Lcd_Init_4bits:
  2714                           
  2715                           	psect	text11
  2716     035D                     __ptext11:	
  2717 ;; *************** function ___awmod *****************
  2718 ;; Defined at:
  2719 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  divisor         2    9[COMMON] int 
  2722 ;;  dividend        2   11[COMMON] int 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  sign            1    1[BANK0 ] unsigned char 
  2725 ;;  counter         1    0[BANK0 ] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  2    9[COMMON] int 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         4       0       0       0       0
  2736 ;;      Locals:         0       2       0       0       0
  2737 ;;      Temps:          1       0       0       0       0
  2738 ;;      Totals:         5       2       0       0       0
  2739 ;;Total ram usage:        7 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748     035D                     ___awmod:	
  2749                           ;psect for function ___awmod
  2750                           
  2751     035D                     l1454:	
  2752                           ;incstack = 0
  2753                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2754                           
  2755     035D  1283               	bcf	3,5	;RP0=0, select bank0
  2756     035E  1303               	bcf	3,6	;RP1=0, select bank0
  2757     035F  01A1               	clrf	___awmod@sign
  2758     0360                     l1456:
  2759     0360  1FFC               	btfss	___awmod@dividend+1,7
  2760     0361  2B63               	goto	u961
  2761     0362  2B64               	goto	u960
  2762     0363                     u961:
  2763     0363  2B6B               	goto	l1462
  2764     0364                     u960:
  2765     0364                     l1458:
  2766     0364  09FB               	comf	___awmod@dividend,f
  2767     0365  09FC               	comf	___awmod@dividend+1,f
  2768     0366  0AFB               	incf	___awmod@dividend,f
  2769     0367  1903               	skipnz
  2770     0368  0AFC               	incf	___awmod@dividend+1,f
  2771     0369                     l1460:
  2772     0369  01A1               	clrf	___awmod@sign
  2773     036A  0AA1               	incf	___awmod@sign,f
  2774     036B                     l1462:
  2775     036B  1FFA               	btfss	___awmod@divisor+1,7
  2776     036C  2B6E               	goto	u971
  2777     036D  2B6F               	goto	u970
  2778     036E                     u971:
  2779     036E  2B74               	goto	l1466
  2780     036F                     u970:
  2781     036F                     l1464:
  2782     036F  09F9               	comf	___awmod@divisor,f
  2783     0370  09FA               	comf	___awmod@divisor+1,f
  2784     0371  0AF9               	incf	___awmod@divisor,f
  2785     0372  1903               	skipnz
  2786     0373  0AFA               	incf	___awmod@divisor+1,f
  2787     0374                     l1466:
  2788     0374  0879               	movf	___awmod@divisor,w
  2789     0375  047A               	iorwf	___awmod@divisor+1,w
  2790     0376  1903               	btfsc	3,2
  2791     0377  2B79               	goto	u981
  2792     0378  2B7A               	goto	u980
  2793     0379                     u981:
  2794     0379  2BA9               	goto	l1484
  2795     037A                     u980:
  2796     037A                     l1468:
  2797     037A  01A0               	clrf	___awmod@counter
  2798     037B  0AA0               	incf	___awmod@counter,f
  2799     037C  2B88               	goto	l1474
  2800     037D                     l1470:
  2801     037D  3001               	movlw	1
  2802     037E                     u995:
  2803     037E  1003               	clrc
  2804     037F  0DF9               	rlf	___awmod@divisor,f
  2805     0380  0DFA               	rlf	___awmod@divisor+1,f
  2806     0381  3EFF               	addlw	-1
  2807     0382  1D03               	skipz
  2808     0383  2B7E               	goto	u995
  2809     0384                     l1472:
  2810     0384  3001               	movlw	1
  2811     0385  00FD               	movwf	??___awmod
  2812     0386  087D               	movf	??___awmod,w
  2813     0387  07A0               	addwf	___awmod@counter,f
  2814     0388                     l1474:
  2815     0388  1FFA               	btfss	___awmod@divisor+1,7
  2816     0389  2B8B               	goto	u1001
  2817     038A  2B8C               	goto	u1000
  2818     038B                     u1001:
  2819     038B  2B7D               	goto	l1470
  2820     038C                     u1000:
  2821     038C                     l1476:
  2822     038C  087A               	movf	___awmod@divisor+1,w
  2823     038D  027C               	subwf	___awmod@dividend+1,w
  2824     038E  1D03               	skipz
  2825     038F  2B92               	goto	u1015
  2826     0390  0879               	movf	___awmod@divisor,w
  2827     0391  027B               	subwf	___awmod@dividend,w
  2828     0392                     u1015:
  2829     0392  1C03               	skipc
  2830     0393  2B95               	goto	u1011
  2831     0394  2B96               	goto	u1010
  2832     0395                     u1011:
  2833     0395  2B9C               	goto	l1480
  2834     0396                     u1010:
  2835     0396                     l1478:
  2836     0396  0879               	movf	___awmod@divisor,w
  2837     0397  02FB               	subwf	___awmod@dividend,f
  2838     0398  087A               	movf	___awmod@divisor+1,w
  2839     0399  1C03               	skipc
  2840     039A  03FC               	decf	___awmod@dividend+1,f
  2841     039B  02FC               	subwf	___awmod@dividend+1,f
  2842     039C                     l1480:
  2843     039C  3001               	movlw	1
  2844     039D                     u1025:
  2845     039D  1003               	clrc
  2846     039E  0CFA               	rrf	___awmod@divisor+1,f
  2847     039F  0CF9               	rrf	___awmod@divisor,f
  2848     03A0  3EFF               	addlw	-1
  2849     03A1  1D03               	skipz
  2850     03A2  2B9D               	goto	u1025
  2851     03A3                     l1482:
  2852     03A3  3001               	movlw	1
  2853     03A4  02A0               	subwf	___awmod@counter,f
  2854     03A5  1D03               	btfss	3,2
  2855     03A6  2BA8               	goto	u1031
  2856     03A7  2BA9               	goto	u1030
  2857     03A8                     u1031:
  2858     03A8  2B8C               	goto	l1476
  2859     03A9                     u1030:
  2860     03A9                     l1484:
  2861     03A9  0821               	movf	___awmod@sign,w
  2862     03AA  1903               	btfsc	3,2
  2863     03AB  2BAD               	goto	u1041
  2864     03AC  2BAE               	goto	u1040
  2865     03AD                     u1041:
  2866     03AD  2BB3               	goto	l1488
  2867     03AE                     u1040:
  2868     03AE                     l1486:
  2869     03AE  09FB               	comf	___awmod@dividend,f
  2870     03AF  09FC               	comf	___awmod@dividend+1,f
  2871     03B0  0AFB               	incf	___awmod@dividend,f
  2872     03B1  1903               	skipnz
  2873     03B2  0AFC               	incf	___awmod@dividend+1,f
  2874     03B3                     l1488:
  2875     03B3  087C               	movf	___awmod@dividend+1,w
  2876     03B4  00FA               	movwf	?___awmod+1
  2877     03B5  087B               	movf	___awmod@dividend,w
  2878     03B6  00F9               	movwf	?___awmod
  2879     03B7                     l416:
  2880     03B7  0008               	return
  2881     03B8                     __end_of___awmod:
  2882                           
  2883                           	psect	text12
  2884     0415                     __ptext12:	
  2885 ;; *************** function ___awdiv *****************
  2886 ;; Defined at:
  2887 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  divisor         2    0[COMMON] int 
  2890 ;;  dividend        2    2[COMMON] int 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  quotient        2    7[COMMON] int 
  2893 ;;  sign            1    6[COMMON] unsigned char 
  2894 ;;  counter         1    5[COMMON] unsigned char 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  2    0[COMMON] int 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2904 ;;      Params:         4       0       0       0       0
  2905 ;;      Locals:         4       0       0       0       0
  2906 ;;      Temps:          1       0       0       0       0
  2907 ;;      Totals:         9       0       0       0       0
  2908 ;;Total ram usage:        9 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_main
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917     0415                     ___awdiv:	
  2918                           ;psect for function ___awdiv
  2919                           
  2920     0415                     l1410:	
  2921                           ;incstack = 0
  2922                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2923                           
  2924     0415  01F6               	clrf	___awdiv@sign
  2925     0416                     l1412:
  2926     0416  1FF1               	btfss	___awdiv@divisor+1,7
  2927     0417  2C19               	goto	u861
  2928     0418  2C1A               	goto	u860
  2929     0419                     u861:
  2930     0419  2C21               	goto	l1418
  2931     041A                     u860:
  2932     041A                     l1414:
  2933     041A  09F0               	comf	___awdiv@divisor,f
  2934     041B  09F1               	comf	___awdiv@divisor+1,f
  2935     041C  0AF0               	incf	___awdiv@divisor,f
  2936     041D  1903               	skipnz
  2937     041E  0AF1               	incf	___awdiv@divisor+1,f
  2938     041F                     l1416:
  2939     041F  01F6               	clrf	___awdiv@sign
  2940     0420  0AF6               	incf	___awdiv@sign,f
  2941     0421                     l1418:
  2942     0421  1FF3               	btfss	___awdiv@dividend+1,7
  2943     0422  2C24               	goto	u871
  2944     0423  2C25               	goto	u870
  2945     0424                     u871:
  2946     0424  2C2E               	goto	l1424
  2947     0425                     u870:
  2948     0425                     l1420:
  2949     0425  09F2               	comf	___awdiv@dividend,f
  2950     0426  09F3               	comf	___awdiv@dividend+1,f
  2951     0427  0AF2               	incf	___awdiv@dividend,f
  2952     0428  1903               	skipnz
  2953     0429  0AF3               	incf	___awdiv@dividend+1,f
  2954     042A                     l1422:
  2955     042A  3001               	movlw	1
  2956     042B  00F4               	movwf	??___awdiv
  2957     042C  0874               	movf	??___awdiv,w
  2958     042D  06F6               	xorwf	___awdiv@sign,f
  2959     042E                     l1424:
  2960     042E  01F7               	clrf	___awdiv@quotient
  2961     042F  01F8               	clrf	___awdiv@quotient+1
  2962     0430                     l1426:
  2963     0430  0870               	movf	___awdiv@divisor,w
  2964     0431  0471               	iorwf	___awdiv@divisor+1,w
  2965     0432  1903               	btfsc	3,2
  2966     0433  2C35               	goto	u881
  2967     0434  2C36               	goto	u880
  2968     0435                     u881:
  2969     0435  2C6D               	goto	l1446
  2970     0436                     u880:
  2971     0436                     l1428:
  2972     0436  01F5               	clrf	___awdiv@counter
  2973     0437  0AF5               	incf	___awdiv@counter,f
  2974     0438  2C44               	goto	l1434
  2975     0439                     l1430:
  2976     0439  3001               	movlw	1
  2977     043A                     u895:
  2978     043A  1003               	clrc
  2979     043B  0DF0               	rlf	___awdiv@divisor,f
  2980     043C  0DF1               	rlf	___awdiv@divisor+1,f
  2981     043D  3EFF               	addlw	-1
  2982     043E  1D03               	skipz
  2983     043F  2C3A               	goto	u895
  2984     0440                     l1432:
  2985     0440  3001               	movlw	1
  2986     0441  00F4               	movwf	??___awdiv
  2987     0442  0874               	movf	??___awdiv,w
  2988     0443  07F5               	addwf	___awdiv@counter,f
  2989     0444                     l1434:
  2990     0444  1FF1               	btfss	___awdiv@divisor+1,7
  2991     0445  2C47               	goto	u901
  2992     0446  2C48               	goto	u900
  2993     0447                     u901:
  2994     0447  2C39               	goto	l1430
  2995     0448                     u900:
  2996     0448                     l1436:
  2997     0448  3001               	movlw	1
  2998     0449                     u915:
  2999     0449  1003               	clrc
  3000     044A  0DF7               	rlf	___awdiv@quotient,f
  3001     044B  0DF8               	rlf	___awdiv@quotient+1,f
  3002     044C  3EFF               	addlw	-1
  3003     044D  1D03               	skipz
  3004     044E  2C49               	goto	u915
  3005     044F  0871               	movf	___awdiv@divisor+1,w
  3006     0450  0273               	subwf	___awdiv@dividend+1,w
  3007     0451  1D03               	skipz
  3008     0452  2C55               	goto	u925
  3009     0453  0870               	movf	___awdiv@divisor,w
  3010     0454  0272               	subwf	___awdiv@dividend,w
  3011     0455                     u925:
  3012     0455  1C03               	skipc
  3013     0456  2C58               	goto	u921
  3014     0457  2C59               	goto	u920
  3015     0458                     u921:
  3016     0458  2C60               	goto	l1442
  3017     0459                     u920:
  3018     0459                     l1438:
  3019     0459  0870               	movf	___awdiv@divisor,w
  3020     045A  02F2               	subwf	___awdiv@dividend,f
  3021     045B  0871               	movf	___awdiv@divisor+1,w
  3022     045C  1C03               	skipc
  3023     045D  03F3               	decf	___awdiv@dividend+1,f
  3024     045E  02F3               	subwf	___awdiv@dividend+1,f
  3025     045F                     l1440:
  3026     045F  1477               	bsf	___awdiv@quotient,0
  3027     0460                     l1442:
  3028     0460  3001               	movlw	1
  3029     0461                     u935:
  3030     0461  1003               	clrc
  3031     0462  0CF1               	rrf	___awdiv@divisor+1,f
  3032     0463  0CF0               	rrf	___awdiv@divisor,f
  3033     0464  3EFF               	addlw	-1
  3034     0465  1D03               	skipz
  3035     0466  2C61               	goto	u935
  3036     0467                     l1444:
  3037     0467  3001               	movlw	1
  3038     0468  02F5               	subwf	___awdiv@counter,f
  3039     0469  1D03               	btfss	3,2
  3040     046A  2C6C               	goto	u941
  3041     046B  2C6D               	goto	u940
  3042     046C                     u941:
  3043     046C  2C48               	goto	l1436
  3044     046D                     u940:
  3045     046D                     l1446:
  3046     046D  0876               	movf	___awdiv@sign,w
  3047     046E  1903               	btfsc	3,2
  3048     046F  2C71               	goto	u951
  3049     0470  2C72               	goto	u950
  3050     0471                     u951:
  3051     0471  2C77               	goto	l1450
  3052     0472                     u950:
  3053     0472                     l1448:
  3054     0472  09F7               	comf	___awdiv@quotient,f
  3055     0473  09F8               	comf	___awdiv@quotient+1,f
  3056     0474  0AF7               	incf	___awdiv@quotient,f
  3057     0475  1903               	skipnz
  3058     0476  0AF8               	incf	___awdiv@quotient+1,f
  3059     0477                     l1450:
  3060     0477  0878               	movf	___awdiv@quotient+1,w
  3061     0478  00F1               	movwf	?___awdiv+1
  3062     0479  0877               	movf	___awdiv@quotient,w
  3063     047A  00F0               	movwf	?___awdiv
  3064     047B                     l403:
  3065     047B  0008               	return
  3066     047C                     __end_of___awdiv:
  3067                           
  3068                           	psect	text13
  3069     0291                     __ptext13:	
  3070 ;; *************** function _Lcd_Write_String_4bits *****************
  3071 ;; Defined at:
  3072 ;;		line 99 in file "configLCD_4bits.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  a               2    5[COMMON] PTR unsigned char 
  3075 ;;		 -> main@CONT_S(9), main@ADC2(9), main@ADC1(9), STR_3(4), 
  3076 ;;		 -> STR_2(4), STR_1(4), 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  i               2   10[COMMON] int 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3088 ;;      Params:         2       0       0       0       0
  3089 ;;      Locals:         2       0       0       0       0
  3090 ;;      Temps:          3       0       0       0       0
  3091 ;;      Totals:         7       0       0       0       0
  3092 ;;Total ram usage:        7 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 2
  3095 ;; This function calls:
  3096 ;;		_Lcd_Write_Char_4bits
  3097 ;; This function is called by:
  3098 ;;		_main
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102     0291                     _Lcd_Write_String_4bits:	
  3103                           ;psect for function _Lcd_Write_String_4bits
  3104                           
  3105     0291                     l1334:	
  3106                           ;incstack = 0
  3107                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3108                           
  3109                           
  3110                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  3111     0291  01FA               	clrf	Lcd_Write_String_4bits@i
  3112     0292  01FB               	clrf	Lcd_Write_String_4bits@i+1
  3113     0293  2AB6               	goto	l1340
  3114     0294                     l1336:
  3115                           
  3116                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  3117     0294  087A               	movf	Lcd_Write_String_4bits@i,w
  3118     0295  0775               	addwf	Lcd_Write_String_4bits@a,w
  3119     0296  00F8               	movwf	??_Lcd_Write_String_4bits+1
  3120     0297  0876               	movf	Lcd_Write_String_4bits@a+1,w
  3121     0298  00F7               	movwf	??_Lcd_Write_String_4bits
  3122     0299  1803               	skipnc
  3123     029A  0AF7               	incf	??_Lcd_Write_String_4bits,f
  3124     029B  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  3125     029C  2A9E               	goto	u780
  3126     029D  03F7               	decf	??_Lcd_Write_String_4bits,f
  3127     029E                     u780:
  3128     029E  0877               	movf	??_Lcd_Write_String_4bits,w
  3129     029F  00F9               	movwf	??_Lcd_Write_String_4bits+2
  3130     02A0  0879               	movf	??_Lcd_Write_String_4bits+2,w
  3131     02A1  1283               	bcf	3,5	;RP0=0, select bank0
  3132     02A2  1303               	bcf	3,6	;RP1=0, select bank0
  3133     02A3  00FF               	movwf	btemp+1
  3134     02A4  0878               	movf	??_Lcd_Write_String_4bits+1,w
  3135     02A5  0084               	movwf	4
  3136     02A6  120A  118A  2003  120A  118A  	fcall	stringtab
  3137     02AB  120A  118A  2222  120A  118A  	fcall	_Lcd_Write_Char_4bits
  3138     02B0                     l1338:
  3139     02B0  3001               	movlw	1
  3140     02B1  07FA               	addwf	Lcd_Write_String_4bits@i,f
  3141     02B2  1803               	skipnc
  3142     02B3  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
  3143     02B4  3000               	movlw	0
  3144     02B5  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
  3145     02B6                     l1340:
  3146     02B6  087A               	movf	Lcd_Write_String_4bits@i,w
  3147     02B7  0775               	addwf	Lcd_Write_String_4bits@a,w
  3148     02B8  00F8               	movwf	??_Lcd_Write_String_4bits+1
  3149     02B9  0876               	movf	Lcd_Write_String_4bits@a+1,w
  3150     02BA  00F7               	movwf	??_Lcd_Write_String_4bits
  3151     02BB  1803               	skipnc
  3152     02BC  0AF7               	incf	??_Lcd_Write_String_4bits,f
  3153     02BD  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  3154     02BE  2AC0               	goto	u790
  3155     02BF  03F7               	decf	??_Lcd_Write_String_4bits,f
  3156     02C0                     u790:
  3157     02C0  0877               	movf	??_Lcd_Write_String_4bits,w
  3158     02C1  00F9               	movwf	??_Lcd_Write_String_4bits+2
  3159     02C2  0879               	movf	??_Lcd_Write_String_4bits+2,w
  3160     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  3161     02C4  1303               	bcf	3,6	;RP1=0, select bank0
  3162     02C5  00FF               	movwf	btemp+1
  3163     02C6  0878               	movf	??_Lcd_Write_String_4bits+1,w
  3164     02C7  0084               	movwf	4
  3165     02C8  120A  118A  2003  120A  118A  	fcall	stringtab
  3166     02CD  3A00               	xorlw	0
  3167     02CE  1D03               	skipz
  3168     02CF  2AD1               	goto	u801
  3169     02D0  2AD2               	goto	u800
  3170     02D1                     u801:
  3171     02D1  2A94               	goto	l1336
  3172     02D2                     u800:
  3173     02D2                     l78:
  3174     02D2  0008               	return
  3175     02D3                     __end_of_Lcd_Write_String_4bits:
  3176                           
  3177                           	psect	text14
  3178     0222                     __ptext14:	
  3179 ;; *************** function _Lcd_Write_Char_4bits *****************
  3180 ;; Defined at:
  3181 ;;		line 84 in file "configLCD_4bits.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  a               1    wreg     unsigned char 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  a               1    4[COMMON] unsigned char 
  3186 ;;  y               1    3[COMMON] unsigned char 
  3187 ;;  temp            1    2[COMMON] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0, pclath, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3197 ;;      Params:         0       0       0       0       0
  3198 ;;      Locals:         3       0       0       0       0
  3199 ;;      Temps:          1       0       0       0       0
  3200 ;;      Totals:         4       0       0       0       0
  3201 ;;Total ram usage:        4 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; Hardware stack levels required when called: 1
  3204 ;; This function calls:
  3205 ;;		_Lcd_Port_4bits
  3206 ;; This function is called by:
  3207 ;;		_Lcd_Write_String_4bits
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211     0222                     _Lcd_Write_Char_4bits:	
  3212                           ;psect for function _Lcd_Write_Char_4bits
  3213                           
  3214                           
  3215                           ;incstack = 0
  3216                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  3217                           ;Lcd_Write_Char_4bits@a stored from wreg
  3218     0222  00F4               	movwf	Lcd_Write_Char_4bits@a
  3219     0223                     l1236:
  3220                           
  3221                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  3222     0223  0874               	movf	Lcd_Write_Char_4bits@a,w
  3223     0224  390F               	andlw	15
  3224     0225  00F2               	movwf	Lcd_Write_Char_4bits@temp
  3225                           
  3226                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  3227     0226  0874               	movf	Lcd_Write_Char_4bits@a,w
  3228     0227  39F0               	andlw	240
  3229     0228  00F3               	movwf	Lcd_Write_Char_4bits@y
  3230     0229                     l1238:
  3231                           
  3232                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  3233     0229  1283               	bcf	3,5	;RP0=0, select bank0
  3234     022A  1303               	bcf	3,6	;RP1=0, select bank0
  3235     022B  1508               	bsf	8,2	;volatile
  3236     022C                     l1240:
  3237                           
  3238                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  3239     022C  0873               	movf	Lcd_Write_Char_4bits@y,w
  3240     022D  00F1               	movwf	??_Lcd_Write_Char_4bits
  3241     022E  3004               	movlw	4
  3242     022F                     u605:
  3243     022F  1003               	clrc
  3244     0230  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
  3245     0231  3EFF               	addlw	-1
  3246     0232  1D03               	skipz
  3247     0233  2A2F               	goto	u605
  3248     0234  0871               	movf	??_Lcd_Write_Char_4bits,w
  3249     0235  120A  118A  21D3  120A  118A  	fcall	_Lcd_Port_4bits
  3250     023A                     l1242:
  3251                           
  3252                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  3253     023A  1283               	bcf	3,5	;RP0=0, select bank0
  3254     023B  1303               	bcf	3,6	;RP1=0, select bank0
  3255     023C  1588               	bsf	8,3	;volatile
  3256     023D                     l1244:
  3257                           
  3258                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3259     023D  301A               	movlw	26
  3260     023E  00F1               	movwf	??_Lcd_Write_Char_4bits
  3261     023F                     u1147:
  3262     023F  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  3263     0240  2A3F               	goto	u1147
  3264     0241  0000               	nop
  3265     0242                     l1246:
  3266                           
  3267                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  3268     0242  1283               	bcf	3,5	;RP0=0, select bank0
  3269     0243  1303               	bcf	3,6	;RP1=0, select bank0
  3270     0244  1188               	bcf	8,3	;volatile
  3271     0245                     l1248:
  3272                           
  3273                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  3274     0245  0872               	movf	Lcd_Write_Char_4bits@temp,w
  3275     0246  120A  118A  21D3  120A  118A  	fcall	_Lcd_Port_4bits
  3276     024B                     l1250:
  3277                           
  3278                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  3279     024B  1283               	bcf	3,5	;RP0=0, select bank0
  3280     024C  1303               	bcf	3,6	;RP1=0, select bank0
  3281     024D  1588               	bsf	8,3	;volatile
  3282     024E                     l1252:
  3283                           
  3284                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3285     024E  301A               	movlw	26
  3286     024F  00F1               	movwf	??_Lcd_Write_Char_4bits
  3287     0250                     u1157:
  3288     0250  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  3289     0251  2A50               	goto	u1157
  3290     0252  0000               	nop
  3291     0253                     l1254:
  3292                           
  3293                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  3294     0253  1283               	bcf	3,5	;RP0=0, select bank0
  3295     0254  1303               	bcf	3,6	;RP1=0, select bank0
  3296     0255  1188               	bcf	8,3	;volatile
  3297     0256                     l72:
  3298     0256  0008               	return
  3299     0257                     __end_of_Lcd_Write_Char_4bits:
  3300                           
  3301                           	psect	text15
  3302     0317                     __ptext15:	
  3303 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  3304 ;; Defined at:
  3305 ;;		line 49 in file "configLCD_4bits.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  a               1    wreg     unsigned char 
  3308 ;;  b               1    4[COMMON] unsigned char 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  a               1    6[COMMON] unsigned char 
  3311 ;;  temp            1    9[COMMON] unsigned char 
  3312 ;;  y               1    8[COMMON] unsigned char 
  3313 ;;  z               1    7[COMMON] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, pclath, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3323 ;;      Params:         1       0       0       0       0
  3324 ;;      Locals:         4       0       0       0       0
  3325 ;;      Temps:          1       0       0       0       0
  3326 ;;      Totals:         6       0       0       0       0
  3327 ;;Total ram usage:        6 bytes
  3328 ;; Hardware stack levels used: 1
  3329 ;; Hardware stack levels required when called: 2
  3330 ;; This function calls:
  3331 ;;		_Lcd_Cmd_4bits
  3332 ;; This function is called by:
  3333 ;;		_main
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337     0317                     _Lcd_Set_Cursor_4bits:	
  3338                           ;psect for function _Lcd_Set_Cursor_4bits
  3339                           
  3340                           
  3341                           ;incstack = 0
  3342                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  3343                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  3344     0317  00F6               	movwf	Lcd_Set_Cursor_4bits@a
  3345     0318                     l1314:
  3346                           
  3347                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  3348     0318  0376               	decf	Lcd_Set_Cursor_4bits@a,w
  3349     0319  1D03               	btfss	3,2
  3350     031A  2B1C               	goto	u741
  3351     031B  2B1D               	goto	u740
  3352     031C                     u741:
  3353     031C  2B3A               	goto	l1324
  3354     031D                     u740:
  3355     031D                     l1316:
  3356                           
  3357                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  3358     031D  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  3359     031E  3E7F               	addlw	127
  3360     031F  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  3361                           
  3362                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  3363     0320  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3364     0321  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  3365     0322  3004               	movlw	4
  3366     0323                     u755:
  3367     0323  1003               	clrc
  3368     0324  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  3369     0325  3EFF               	addlw	-1
  3370     0326  1D03               	skipz
  3371     0327  2B23               	goto	u755
  3372     0328  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  3373     0329  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  3374     032A                     l1318:
  3375                           
  3376                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  3377     032A  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3378     032B  390F               	andlw	15
  3379     032C  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  3380     032D                     l1320:
  3381                           
  3382                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  3383     032D  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  3384     032E  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  3385     0333                     l1322:
  3386                           
  3387                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  3388     0333  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  3389     0334  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  3390                           
  3391                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  3392     0339  2B5C               	goto	l66
  3393     033A                     l1324:
  3394     033A  3002               	movlw	2
  3395     033B  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
  3396     033C  1D03               	btfss	3,2
  3397     033D  2B3F               	goto	u761
  3398     033E  2B40               	goto	u760
  3399     033F                     u761:
  3400     033F  2B5C               	goto	l66
  3401     0340                     u760:
  3402     0340                     l1326:
  3403                           
  3404                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  3405     0340  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  3406     0341  3EBF               	addlw	191
  3407     0342  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  3408                           
  3409                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  3410     0343  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3411     0344  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  3412     0345  3004               	movlw	4
  3413     0346                     u775:
  3414     0346  1003               	clrc
  3415     0347  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  3416     0348  3EFF               	addlw	-1
  3417     0349  1D03               	skipz
  3418     034A  2B46               	goto	u775
  3419     034B  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  3420     034C  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  3421     034D                     l1328:
  3422                           
  3423                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  3424     034D  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3425     034E  390F               	andlw	15
  3426     034F  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  3427     0350                     l1330:
  3428                           
  3429                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  3430     0350  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  3431     0351  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  3432     0356                     l1332:
  3433                           
  3434                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  3435     0356  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  3436     0357  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  3437     035C                     l66:
  3438     035C  0008               	return
  3439     035D                     __end_of_Lcd_Set_Cursor_4bits:
  3440                           
  3441                           	psect	text16
  3442     0189                     __ptext16:	
  3443 ;; *************** function _Lcd_Clear_4bits *****************
  3444 ;; Defined at:
  3445 ;;		line 44 in file "configLCD_4bits.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0, pclath, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3459 ;;      Params:         0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0
  3462 ;;      Totals:         0       0       0       0       0
  3463 ;;Total ram usage:        0 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 2
  3466 ;; This function calls:
  3467 ;;		_Lcd_Cmd_4bits
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473     0189                     _Lcd_Clear_4bits:	
  3474                           ;psect for function _Lcd_Clear_4bits
  3475                           
  3476     0189                     l1312:	
  3477                           ;incstack = 0
  3478                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  3479                           
  3480                           
  3481                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  3482     0189  3000               	movlw	0
  3483     018A  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  3484                           
  3485                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  3486     018F  3001               	movlw	1
  3487     0190  120A  118A  21B9  120A  118A  	fcall	_Lcd_Cmd_4bits
  3488     0195                     l60:
  3489     0195  0008               	return
  3490     0196                     __end_of_Lcd_Clear_4bits:
  3491                           
  3492                           	psect	text17
  3493     01B9                     __ptext17:	
  3494 ;; *************** function _Lcd_Cmd_4bits *****************
  3495 ;; Defined at:
  3496 ;;		line 36 in file "configLCD_4bits.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  a               1    wreg     unsigned char 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  a               1    3[COMMON] unsigned char 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0, pclath, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         0       0       0       0       0
  3511 ;;      Locals:         1       0       0       0       0
  3512 ;;      Temps:          2       0       0       0       0
  3513 ;;      Totals:         3       0       0       0       0
  3514 ;;Total ram usage:        3 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; Hardware stack levels required when called: 1
  3517 ;; This function calls:
  3518 ;;		_Lcd_Port_4bits
  3519 ;; This function is called by:
  3520 ;;		_Lcd_Clear_4bits
  3521 ;;		_Lcd_Set_Cursor_4bits
  3522 ;;		_Lcd_Init_4bits
  3523 ;;		_Lcd_Shift_Right_4bits
  3524 ;;		_Lcd_Shift_Left_4bits
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528     01B9                     _Lcd_Cmd_4bits:	
  3529                           ;psect for function _Lcd_Cmd_4bits
  3530                           
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  3534                           ;Lcd_Cmd_4bits@a stored from wreg
  3535     01B9  00F3               	movwf	Lcd_Cmd_4bits@a
  3536     01BA                     l1200:
  3537                           
  3538                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  3539     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  3540     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  3541     01BC  1108               	bcf	8,2	;volatile
  3542     01BD                     l1202:
  3543                           
  3544                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  3545     01BD  0873               	movf	Lcd_Cmd_4bits@a,w
  3546     01BE  120A  118A  21D3  120A  118A  	fcall	_Lcd_Port_4bits
  3547     01C3                     l1204:
  3548                           
  3549                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  3550     01C3  1283               	bcf	3,5	;RP0=0, select bank0
  3551     01C4  1303               	bcf	3,6	;RP1=0, select bank0
  3552     01C5  1588               	bsf	8,3	;volatile
  3553     01C6                     l1206:
  3554                           
  3555                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3556     01C6  300B               	movlw	11
  3557     01C7  00F2               	movwf	??_Lcd_Cmd_4bits+1
  3558     01C8  3062               	movlw	98
  3559     01C9  00F1               	movwf	??_Lcd_Cmd_4bits
  3560     01CA                     u1167:
  3561     01CA  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
  3562     01CB  29CA               	goto	u1167
  3563     01CC  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
  3564     01CD  29CA               	goto	u1167
  3565     01CE  0000               	nop
  3566     01CF                     l1208:
  3567                           
  3568                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  3569     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  3570     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  3571     01D1  1188               	bcf	8,3	;volatile
  3572     01D2                     l57:
  3573     01D2  0008               	return
  3574     01D3                     __end_of_Lcd_Cmd_4bits:
  3575                           
  3576                           	psect	text18
  3577     01D3                     __ptext18:	
  3578 ;; *************** function _Lcd_Port_4bits *****************
  3579 ;; Defined at:
  3580 ;;		line 14 in file "configLCD_4bits.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  a               1    wreg     unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  a               1    0[COMMON] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3594 ;;      Params:         0       0       0       0       0
  3595 ;;      Locals:         1       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0
  3597 ;;      Totals:         1       0       0       0       0
  3598 ;;Total ram usage:        1 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_Lcd_Cmd_4bits
  3604 ;;		_Lcd_Init_4bits
  3605 ;;		_Lcd_Write_Char_4bits
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609     01D3                     _Lcd_Port_4bits:	
  3610                           ;psect for function _Lcd_Port_4bits
  3611                           
  3612                           
  3613                           ;incstack = 0
  3614                           ; Regs used in _Lcd_Port_4bits: [wreg]
  3615                           ;Lcd_Port_4bits@a stored from wreg
  3616     01D3  00F0               	movwf	Lcd_Port_4bits@a
  3617     01D4                     l1190:
  3618                           
  3619                           ;configLCD_4bits.c: 15:     if (a & 1)
  3620     01D4  1C70               	btfss	Lcd_Port_4bits@a,0
  3621     01D5  29D7               	goto	u541
  3622     01D6  29D8               	goto	u540
  3623     01D7                     u541:
  3624     01D7  29DC               	goto	l46
  3625     01D8                     u540:
  3626     01D8                     l1192:
  3627                           
  3628                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  3629     01D8  1283               	bcf	3,5	;RP0=0, select bank0
  3630     01D9  1303               	bcf	3,6	;RP1=0, select bank0
  3631     01DA  1608               	bsf	8,4	;volatile
  3632     01DB  29DF               	goto	l47
  3633     01DC                     l46:	
  3634                           ;configLCD_4bits.c: 17:     else
  3635                           
  3636                           
  3637                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  3638     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  3639     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  3640     01DE  1208               	bcf	8,4	;volatile
  3641     01DF                     l47:
  3642                           
  3643                           ;configLCD_4bits.c: 20:     if (a & 2)
  3644     01DF  1CF0               	btfss	Lcd_Port_4bits@a,1
  3645     01E0  29E2               	goto	u551
  3646     01E1  29E3               	goto	u550
  3647     01E2                     u551:
  3648     01E2  29E5               	goto	l48
  3649     01E3                     u550:
  3650     01E3                     l1194:
  3651                           
  3652                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  3653     01E3  1688               	bsf	8,5	;volatile
  3654     01E4  29E6               	goto	l49
  3655     01E5                     l48:	
  3656                           ;configLCD_4bits.c: 22:     else
  3657                           
  3658                           
  3659                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  3660     01E5  1288               	bcf	8,5	;volatile
  3661     01E6                     l49:
  3662                           
  3663                           ;configLCD_4bits.c: 25:     if (a & 4)
  3664     01E6  1D70               	btfss	Lcd_Port_4bits@a,2
  3665     01E7  29E9               	goto	u561
  3666     01E8  29EA               	goto	u560
  3667     01E9                     u561:
  3668     01E9  29EC               	goto	l50
  3669     01EA                     u560:
  3670     01EA                     l1196:
  3671                           
  3672                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  3673     01EA  1708               	bsf	8,6	;volatile
  3674     01EB  29ED               	goto	l51
  3675     01EC                     l50:	
  3676                           ;configLCD_4bits.c: 27:     else
  3677                           
  3678                           
  3679                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  3680     01EC  1308               	bcf	8,6	;volatile
  3681     01ED                     l51:
  3682                           
  3683                           ;configLCD_4bits.c: 30:     if (a & 8)
  3684     01ED  1DF0               	btfss	Lcd_Port_4bits@a,3
  3685     01EE  29F0               	goto	u571
  3686     01EF  29F1               	goto	u570
  3687     01F0                     u571:
  3688     01F0  29F3               	goto	l52
  3689     01F1                     u570:
  3690     01F1                     l1198:
  3691                           
  3692                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  3693     01F1  1788               	bsf	8,7	;volatile
  3694     01F2  29F4               	goto	l54
  3695     01F3                     l52:	
  3696                           ;configLCD_4bits.c: 32:     else
  3697                           
  3698                           
  3699                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  3700     01F3  1388               	bcf	8,7	;volatile
  3701     01F4                     l54:
  3702     01F4  0008               	return
  3703     01F5                     __end_of_Lcd_Port_4bits:
  3704     007E                     btemp	set	126	;btemp
  3705     007E                     wtemp0	set	126
  3706                           
  3707                           	psect	idloc
  3708                           
  3709                           ;Config register IDLOC0 @ 0x2000
  3710                           ;	unspecified, using default values
  3711     2000                     	org	8192
  3712     2000  3FFF               	dw	16383
  3713                           
  3714                           ;Config register IDLOC1 @ 0x2001
  3715                           ;	unspecified, using default values
  3716     2001                     	org	8193
  3717     2001  3FFF               	dw	16383
  3718                           
  3719                           ;Config register IDLOC2 @ 0x2002
  3720                           ;	unspecified, using default values
  3721     2002                     	org	8194
  3722     2002  3FFF               	dw	16383
  3723                           
  3724                           ;Config register IDLOC3 @ 0x2003
  3725                           ;	unspecified, using default values
  3726     2003                     	org	8195
  3727     2003  3FFF               	dw	16383
  3728                           
  3729                           	psect	config
  3730                           
  3731                           ;Config register CONFIG1 @ 0x2007
  3732                           ;	Oscillator Selection bits
  3733                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3734                           ;	Watchdog Timer Enable bit
  3735                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3736                           ;	Power-up Timer Enable bit
  3737                           ;	PWRTE = OFF, PWRT disabled
  3738                           ;	RE3/MCLR pin function select bit
  3739                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3740                           ;	Code Protection bit
  3741                           ;	CP = OFF, Program memory code protection is disabled
  3742                           ;	Data Code Protection bit
  3743                           ;	CPD = OFF, Data memory code protection is disabled
  3744                           ;	Brown Out Reset Selection bits
  3745                           ;	BOREN = OFF, BOR disabled
  3746                           ;	Internal External Switchover bit
  3747                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3748                           ;	Fail-Safe Clock Monitor Enabled bit
  3749                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3750                           ;	Low Voltage Programming Enable bit
  3751                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3752                           ;	In-Circuit Debugger Mode bit
  3753                           ;	DEBUG = 0x1, unprogramme  3754     2007                     	org	8199
  3755     2007  20D4               	dw	8404
  3756                           
  3757                           ;Config register CONFIG2 @ 0x2008
  3758                           ;	Brown-out Reset Selection bit
  3759                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3760                           ;	Flash Program Memory Self Write Enable bits
  3761                           ;	WRT = OFF, Write protection off
  3762     2008                     	org	8200
  3763     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@CONT_S(BANK0[9]), main@ADC2(BANK0[9]), main@ADC1(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 9
		 -> main@CONT_S(BANK0[9]), main@ADC2(BANK0[9]), main@ADC1(BANK0[9]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init_4bits
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    ___awmod->___awdiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0    8558
                                             13 BANK0     43    43      0
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1993
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     580
                     _Lcd_Init_4bits
                        _setupINTOSC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1208
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2    1180
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1    1292
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Feb 05 23:55:01 2023

                             pc 0002                     _SSPSTATbits 0094                              l20 0179  
                            l23 017F                              l16 01B3                              l17 01B8  
                            l50 01EC                              l34 0188                              l26 0178  
                            l51 01ED                              l52 01F3                              l60 0195  
                            l54 01F4                              l46 01DC                              l47 01DF  
                            l39 01A2                              l48 01E5                              l72 0256  
                            l49 01E6                              l57 01D2                              l66 035C  
                            l69 0414                              l78 02D2                    ___awdiv@sign 0076  
                            fsr 0004                             l403 047B                             l139 0221  
                           l246 053C                             l416 03B7                             l522 0316  
                           l532 0290                             u610 02DB                             u611 02DA  
                           u540 01D8                             u700 026F                             u541 01D7  
                           u605 022F                             u701 026E                             u550 01E3  
                           u630 02ED                             u710 0279                             u551 01E2  
                           u631 02EC                             u711 0278                             u560 01EA  
                           u800 02D2                             u561 01E9                             u801 02D1  
                           u625 02DF                             u570 01F1                             u650 02FE  
                           u730 028C                             u810 0488                             u571 01F0  
                           u651 02FD                             u731 028B                             u715 0275  
                           u811 0487                             u740 031D                             u900 0448  
                           u580 01AB                             u820 04DC                             u741 031C  
                           u901 0447                             u581 01AA                             u645 02EE  
                           u725 0280                             u821 04DB                             u590 017F  
                           u670 0312                             u830 04E7                             u591 017E  
                           u671 0311                             u655 02FA                             u831 04E6  
                           u760 0340                             u920 0459                             u680 025D  
                           u840 0528                             u761 033F                             u921 0458  
                           u665 0306                             u681 025C                             u841 0527  
                           u825 04D8                             u850 0538                             u755 0323  
                           u915 0449                             u851 0537                             u780 029E  
                           u940 046D                             u860 041A                             u941 046C  
                           u925 0455                             u861 0419                             u790 02C0  
                           u950 0472                             u870 0425                             u775 0346  
                           u951 0471                             u935 0461                             u871 0424  
                           u695 0261                             u880 0436                             u960 0364  
                           u881 0435                             u961 0363                             u970 036F  
                           u971 036E                             u980 037A                             u981 0379  
                           u895 043A                             u995 037E                             fsr0 0004  
                           indf 0000                    ___awmod@sign 0021                            l1200 01BA  
                          l1202 01BD                            l1210 01A4                            l1204 01C3  
                          l1212 01AB                            l1220 0179                            l1300 028C  
                          l1206 01C6                            l1230 03C7                            l1222 0197  
                          l1214 01AD                            l1208 01CF                            l1312 0189  
                          l1320 032D                            l1240 022C                            l1232 03D6  
                          l1224 01A1                            l1216 01AF                            l1304 0174  
                          l1400 0528                            l1330 0350                            l1322 0333  
                          l1314 0318                            l1250 024B                            l1242 023A  
                          l1410 0415                            l1234 03DC                            l1226 03B8  
                          l1218 01B2                            l1306 0180                            l1402 0538  
                          l1332 0356                            l1316 031D                            l1324 033A  
                          l1252 024E                            l1244 023D                            l1236 0223  
                          l1340 02B6                            l1420 0425                            l1412 0416  
                          l1228 03BE                            l1308 0185                            l1260 02DB  
                          l1500 0558                            l1190 01D4                            l1326 0340  
                          l1318 032A                            l1254 0253                            l1246 0242  
                          l1238 0229                            l1334 0291                            l1430 0439  
                          l1422 042A                            l1414 041A                            l1350 020F  
                          l1342 01F5                            l1270 02FE                            l1262 02DE  
                          l1510 0585                            l1502 0569                            l1192 01D8  
                          l1328 034D                            l1248 0245                            l1336 0294  
                          l1440 045F                            l1432 0440                            l1424 042E  
                          l1416 041F                            l1352 0212                            l1344 0201  
                          l1272 0304                            l1264 02E5                            l1256 02D3  
                          l1360 0482                            l1520 05F8                            l1512 058D  
                          l1504 0571                            l1194 01E3                            l1338 02B0  
                          l1450 0477                            l1442 0460                            l1434 0444  
                          l1426 0430                            l1418 0421                            l1354 0215  
                          l1346 0207                            l1274 0305                            l1266 02E9  
                          l1258 02D5                            l1290 026B                            l1282 0257  
                          l1362 0488                            l1530 064D                            l1522 061A  
                          l1514 0595                            l1506 057A                            l1196 01EA  
                          l1444 0467                            l1436 0448                            l1428 0436  
                          l1460 0369                            l1356 0218                            l1348 020C  
                          l1276 030C                            l1268 02ED                            l1292 026F  
                          l1284 025D                            l1372 0499                            l1364 048D  
                          l1540 066E                            l1532 0650                            l1524 0622  
                          l1516 059D                            l1508 057D                            l1198 01F1  
                          l1438 0459                            l1446 046D                            l1470 037D  
                          l1462 036B                            l1454 035D                            l1278 0312  
                          l1294 0279                            l1286 0260                            l1390 04E7  
                          l1374 04B3                            l1366 0492                            l1358 047F  
                          l1550 069C                            l1542 067D                            l1534 0658  
                          l1526 062B                            l1518 05E9                            l1448 0472  
                          l1480 039C                            l1472 0384                            l1464 036F  
                          l1456 0360                            l1296 027F                            l1288 0267  
                          l1392 04EA                            l1384 04C1                            l1376 04BB  
                          l1368 0494                            l1560 06FC                            l1552 06B0  
                          l1544 0683                            l1536 0660                            l1528 063C  
                          l1482 03A3                            l1474 0388                            l1466 0374  
                          l1458 0364                            l1298 0286                            l1394 0516  
                          l1378 04BF                            l1618 04AB                            l1570 0738  
                          l1562 0705                            l1554 06D1                            l1546 0691  
                          l1538 0668                            l1476 038C                            l1468 037A  
                          l1484 03A9                            l1396 051B                            l1388 04DD  
                          l1580 0794                            l1572 0740                            l1564 0716  
                          l1556 06E5                            l1548 0699                            l1486 03AE  
                          l1478 0396                            l1398 051F                            l1590 07CD  
                          l1582 07A3                            l1574 0749                            l1566 071E  
                          l1558 06F4                            l1488 03B3                            l1592 07D6  
                          l1584 07AB                            l1576 075F                            l1568 0727  
                          l1496 053D                            l1594 07E7                            l1586 07B4  
                          l1578 0780                            l1498 054F                            l1596 07EF  
                          l1588 07C5                            STR_1 001D                            STR_2 0021  
                          STR_3 0025                            STR_4 0029                            STR_5 0029  
                          STR_6 0029                            STR_7 0029                            STR_8 0029  
                          STR_9 0029                            u1000 038C                            u1001 038B  
                          u1010 0396                            u1011 0395                            u1030 03A9  
                          u1031 03A8                            u1015 0392                            u1040 03AE  
                          u1041 03AD                            u1025 039D                            u1050 066E  
                          u1107 0695                            u1051 066D                            u1060 0683  
                          u1117 03C2                            u1061 0682                            u1127 03D1  
                          u1137 03E0                            u1147 023F                            u1157 0250  
                          u1077 0581                            u1167 01CA                            u1087 0599  
                          u1097 0654                            _main 053D          _Lcd_Write_String_4bits 0291  
                          btemp 007E                            start 0000                           ?_main 0070  
             ??_Lcd_Clear_4bits 0074                 __end_of___awdiv 047C                           STR_10 0029  
                         STR_11 0029                           STR_12 0029                 __end_of___awmod 03B8  
                         _ANSEL 0188                 ___awdiv@divisor 0070                 __end_of___lwdiv 0317  
               __end_of___lwmod 0291                 ___awdiv@counter 0075                           _PORTB 0006  
                         _PORTD 0008                           _TRISB 0086                           _TRISD 0088  
         __end_of_Lcd_Cmd_4bits 01D3                 __end_of_dpowers 001D                           _setup 01F5  
                         pclath 000A                 __end_of_spiInit 01B9                 __end_of_spiRead 0189  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 053D  
               __initialization 07FC                    __end_of_main 07FC                          ??_main 002D  
              ___awdiv@dividend 0072                          ?_setup 0070                          _ANSELH 0189  
                        _TRISC1 0439                          _TRISC2 043A                          _TRISC3 043B  
                        _TRISC5 043D                          _SSPCON 0014                          _SSPBUF 0013  
      Lcd_Write_Char_4bits@temp 0072                       ??___awdiv 0074                       ??___awmod 007D  
                     ??___lwdiv 0074                       ??___lwmod 007C                ___awdiv@quotient 0077  
               ___awmod@divisor 0079                 ___awmod@counter 0020                    ?_setupINTOSC 0070  
              __end_of_spiWrite 0179                       ??_spiInit 0073                       ??_spiRead 0070  
                _Lcd_Init_4bits 03B8                       ??_sprintf 0023         __end_of__initialization 07FC  
                __pcstackCOMMON 0070           Lcd_Write_Char_4bits@a 0074           Lcd_Write_Char_4bits@y 0073  
                 __end_of_setup 0222          __end_of_Lcd_Init_4bits 0415         ?_Lcd_Write_String_4bits 0075  
                       ??_setup 0076                  _Lcd_Port_4bits 01D3                 _Lcd_Clear_4bits 0189  
                    __pmaintext 053D    __end_of_Lcd_Write_Char_4bits 0257                 Lcd_Port_4bits@a 0070  
               ?_Lcd_Init_4bits 0070  __end_of_Lcd_Write_String_4bits 02D3                         _SSPSTAT 0094  
                    __stringtab 0003          __end_of_Lcd_Port_4bits 01F5                       ?_spiWrite 0070  
                       ___awdiv 0415                         ___awmod 035D                         ___lwdiv 02D3  
                       ___lwmod 0257                         __ptext1 047C                         __ptext2 0257  
                       __ptext3 02D3                         __ptext4 0173                         __ptext5 0180  
                       __ptext6 0179                         __ptext7 01F5                         __ptext8 01A3  
                       __ptext9 0196                         _dpowers 0013                ___awmod@dividend 007B  
                       _spiInit 01A3                         _spiRead 0180    __end_of_Lcd_Set_Cursor_4bits 035D  
                       _sprintf 047C            end_of_initialization 07FC                 ?_Lcd_Port_4bits 0070  
       __end_of_Lcd_Clear_4bits 0196                      ??_spiWrite 0070                       _PORTCbits 0007  
                     _PORTDbits 0008                      main@CONT_C 0052                      main@CONT_D 0051  
                    main@CONT_S 0041                      main@CONT_U 0050                      main@VAL1_C 004C  
                    main@VAL1_D 004B                      main@VAL2_C 004F                      main@VAL2_D 004E  
                    main@VAL1_U 004A                      main@VAL2_U 004D                     spiWrite@dat 0070  
          _Lcd_Write_Char_4bits 0222                  _spiReceiveWait 0179             start_initialization 07FC  
                 _Lcd_Cmd_4bits 01B9           Lcd_Set_Cursor_4bits@a 0076           Lcd_Set_Cursor_4bits@b 0074  
         Lcd_Set_Cursor_4bits@y 0078           Lcd_Set_Cursor_4bits@z 0077                ?_Lcd_Clear_4bits 0070  
         ?_Lcd_Write_Char_4bits 0070          __end_of_spiReceiveWait 0180        Lcd_Set_Cursor_4bits@temp 0079  
          _Lcd_Set_Cursor_4bits 0317                ??_Lcd_Init_4bits 0074                       ___latbits 0002  
                 __pcstackBANK0 0020                  ?_Lcd_Cmd_4bits 0070                     sprintf@flag 0026  
                   sprintf@prec 002A                ___lwdiv@dividend 0072                 ?_spiReceiveWait 0070  
         ?_Lcd_Set_Cursor_4bits 0074                        ?___awdiv 0070                        ?___awmod 0079  
                      ?___lwdiv 0070                        ?___lwmod 0078                       __pstrings 0003  
              ??_Lcd_Port_4bits 0070                        ?_spiInit 0070                        ?_spiRead 0070  
              ___lwdiv@quotient 0075                        ?_sprintf 0020            spiInit@sTransmitEdge 0072  
        ??_Lcd_Write_Char_4bits 0071              spiInit@sDataSample 0070                       main@VAL_W 0053  
                   __stringbase 0012                   ??_setupINTOSC 0070                 ??_Lcd_Cmd_4bits 0071  
       Lcd_Write_String_4bits@a 0075         Lcd_Write_String_4bits@i 007A          ??_Lcd_Set_Cursor_4bits 0075  
            __end_of__stringtab 0013        ??_Lcd_Write_String_4bits 0077                  Lcd_Cmd_4bits@a 0073  
                    sprintf@val 0028                 ___lwdiv@divisor 0070                 ___lwdiv@counter 0077  
                      __ptext10 03B8                        __ptext11 035D                        __ptext12 0415  
                      __ptext13 0291                        __ptext14 0222                        __ptext15 0317  
                      __ptext16 0189                        __ptext17 01B9                        __ptext18 01D3  
           __end_of_setupINTOSC 01A3                        main@ADC1 002F                        main@ADC2 0038  
                      _spiWrite 0173                        main@CONT 0056                        main@VAL1 0054  
                      main@VAL2 0055                    spiInit@sType 0073               spiInit@sClockIdle 0071  
                     sprintf@ap 0027                       sprintf@sp 002B                ___lwmod@dividend 007A  
              ??_spiReceiveWait 0070                       stringcode 000D                      _OSCCONbits 008F  
                   _setupINTOSC 0196                        sprintf@c 002C                        sprintf@f 0020  
                  setupINTOSC@F 0071                 ___lwmod@divisor 0078                 ___lwmod@counter 007D  
                      stringdir 000D                        stringtab 0003                    main@VAL_READ 0057  
