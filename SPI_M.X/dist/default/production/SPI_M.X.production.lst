

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 01:07:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0088                     	;# 
   418     0089                     	;# 
   419     008C                     	;# 
   420     008D                     	;# 
   421     008E                     	;# 
   422     008F                     	;# 
   423     0090                     	;# 
   424     0091                     	;# 
   425     0092                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0094                     	;# 
   430     0095                     	;# 
   431     0096                     	;# 
   432     0097                     	;# 
   433     0098                     	;# 
   434     0099                     	;# 
   435     009A                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     0105                     	;# 
   442     0107                     	;# 
   443     0108                     	;# 
   444     0109                     	;# 
   445     010C                     	;# 
   446     010C                     	;# 
   447     010D                     	;# 
   448     010E                     	;# 
   449     010F                     	;# 
   450     0185                     	;# 
   451     0187                     	;# 
   452     0188                     	;# 
   453     0189                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456                           
   457                           	psect	strings
   458     0003                     __pstrings:
   459     0003                     stringtab:
   460     0003                     __stringtab:
   461                           
   462                           ;	String table - string pointers are 1 byte each
   463     0003  1BFF               	btfsc	btemp+1,7
   464     0004  280D               	ljmp	stringcode
   465     0005  1383               	bcf	3,7
   466     0006  187F               	btfsc	btemp+1,0
   467     0007  1783               	bsf	3,7
   468     0008  0800               	movf	0,w
   469     0009  0A84               	incf	4,f
   470     000A  1903               	skipnz
   471     000B  0AFF               	incf	btemp+1,f
   472     000C  0008               	return
   473     000D                     stringcode:
   474     000D                     stringdir:
   475     000D  3000               	movlw	high stringdir
   476     000E  008A               	movwf	10
   477     000F  0804               	movf	4,w
   478     0010  0A84               	incf	4,f
   479     0011  0782               	addwf	2,f
   480     0012                     __stringbase:
   481     0012  3400               	retlw	0
   482     0013                     __end_of__stringtab:
   483     0013                     _dpowers:
   484     0013  3401               	retlw	1
   485     0014  3400               	retlw	0
   486     0015  340A               	retlw	10
   487     0016  3400               	retlw	0
   488     0017  3464               	retlw	100
   489     0018  3400               	retlw	0
   490     0019  34E8               	retlw	232
   491     001A  3403               	retlw	3
   492     001B  3410               	retlw	16
   493     001C  3427               	retlw	39
   494     001D                     __end_of_dpowers:
   495     0006                     _PORTB	set	6
   496     0008                     _PORTD	set	8
   497     0007                     _PORTCbits	set	7
   498     0008                     _PORTDbits	set	8
   499     0013                     _SSPBUF	set	19
   500     0014                     _SSPCON	set	20
   501     0088                     _TRISD	set	136
   502     0086                     _TRISB	set	134
   503     008F                     _OSCCONbits	set	143
   504     0094                     _SSPSTATbits	set	148
   505     0094                     _SSPSTAT	set	148
   506     043A                     _TRISC2	set	1082
   507     0439                     _TRISC1	set	1081
   508     043B                     _TRISC3	set	1083
   509     043D                     _TRISC5	set	1085
   510     0189                     _ANSELH	set	393
   511     0188                     _ANSEL	set	392
   512     001D                     STR_1:
   513     001D  3453               	retlw	83	;'S'
   514     001E  3431               	retlw	49	;'1'
   515     001F  343A               	retlw	58	;':'
   516     0020  3400               	retlw	0
   517     0021                     STR_2:
   518     0021  3453               	retlw	83	;'S'
   519     0022  3432               	retlw	50	;'2'
   520     0023  343A               	retlw	58	;':'
   521     0024  3400               	retlw	0
   522     0025                     STR_3:
   523     0025  3453               	retlw	83	;'S'
   524     0026  3433               	retlw	51	;'3'
   525     0027  343A               	retlw	58	;':'
   526     0028  3400               	retlw	0
   527     0029                     STR_4:
   528     0029  3425               	retlw	37	;'%'
   529     002A  3475               	retlw	117	;'u'
   530     002B  3400               	retlw	0
   531     0029                     
   532                           	psect	cinit
   533     07FC                     start_initialization:	
   534                           ; #config settings
   535                           
   536     07FC                     __initialization:
   537     07FC                     end_of_initialization:	
   538                           ;End of C runtime variable initialization code
   539                           
   540     07FC                     __end_of__initialization:
   541     07FC  0183               	clrf	3
   542     07FD  120A  118A  2E11   	ljmp	_main	;jump to C main() function
   543                           
   544                           	psect	cstackCOMMON
   545     0070                     __pcstackCOMMON:
   546     0070                     ?_setup:
   547     0070                     ?_spiInit:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_spiReceiveWait:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ??_spiReceiveWait:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_spiWrite:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ??_spiWrite:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_spiRead:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ??_spiRead:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_setupINTOSC:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ??_setupINTOSC:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_Lcd_Port_4bits:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ??_Lcd_Port_4bits:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_Lcd_Cmd_4bits:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_Lcd_Clear_4bits:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_Lcd_Init_4bits:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ?_Lcd_Write_Char_4bits:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?_main:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?___awdiv:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?___lwdiv:	
   599                           ; 2 bytes @ 0x0
   600                           
   601     0070                     spiInit@sDataSample:	
   602                           ; 2 bytes @ 0x0
   603                           
   604     0070                     spiWrite@dat:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     Lcd_Port_4bits@a:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ___awdiv@divisor:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ___lwdiv@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616                           
   617                           ; 2 bytes @ 0x0
   618     0070                     	ds	1
   619     0071                     ??_Lcd_Cmd_4bits:
   620     0071                     ??_Lcd_Write_Char_4bits:	
   621                           ; 1 bytes @ 0x1
   622                           
   623     0071                     spiInit@sClockIdle:	
   624                           ; 1 bytes @ 0x1
   625                           
   626     0071                     setupINTOSC@F:	
   627                           ; 1 bytes @ 0x1
   628                           
   629                           
   630                           ; 1 bytes @ 0x1
   631     0071                     	ds	1
   632     0072                     spiInit@sTransmitEdge:
   633     0072                     Lcd_Write_Char_4bits@temp:	
   634                           ; 1 bytes @ 0x2
   635                           
   636     0072                     ___awdiv@dividend:	
   637                           ; 1 bytes @ 0x2
   638                           
   639     0072                     ___lwdiv@dividend:	
   640                           ; 2 bytes @ 0x2
   641                           
   642                           
   643                           ; 2 bytes @ 0x2
   644     0072                     	ds	1
   645     0073                     ??_spiInit:
   646     0073                     spiInit@sType:	
   647                           ; 1 bytes @ 0x3
   648                           
   649     0073                     Lcd_Cmd_4bits@a:	
   650                           ; 1 bytes @ 0x3
   651                           
   652     0073                     Lcd_Write_Char_4bits@y:	
   653                           ; 1 bytes @ 0x3
   654                           
   655                           
   656                           ; 1 bytes @ 0x3
   657     0073                     	ds	1
   658     0074                     ??_Lcd_Clear_4bits:
   659     0074                     ?_Lcd_Set_Cursor_4bits:	
   660                           ; 1 bytes @ 0x4
   661                           
   662     0074                     ??_Lcd_Init_4bits:	
   663                           ; 1 bytes @ 0x4
   664                           
   665     0074                     ??___awdiv:	
   666                           ; 1 bytes @ 0x4
   667                           
   668     0074                     ??___lwdiv:	
   669                           ; 1 bytes @ 0x4
   670                           
   671     0074                     Lcd_Set_Cursor_4bits@b:	
   672                           ; 1 bytes @ 0x4
   673                           
   674     0074                     Lcd_Write_Char_4bits@a:	
   675                           ; 1 bytes @ 0x4
   676                           
   677                           
   678                           ; 1 bytes @ 0x4
   679     0074                     	ds	1
   680     0075                     ??_Lcd_Set_Cursor_4bits:
   681     0075                     ?_Lcd_Write_String_4bits:	
   682                           ; 1 bytes @ 0x5
   683                           
   684     0075                     ___awdiv@counter:	
   685                           ; 1 bytes @ 0x5
   686                           
   687     0075                     Lcd_Write_String_4bits@a:	
   688                           ; 1 bytes @ 0x5
   689                           
   690     0075                     ___lwdiv@quotient:	
   691                           ; 2 bytes @ 0x5
   692                           
   693                           
   694                           ; 2 bytes @ 0x5
   695     0075                     	ds	1
   696     0076                     ??_setup:
   697     0076                     Lcd_Set_Cursor_4bits@a:	
   698                           ; 1 bytes @ 0x6
   699                           
   700     0076                     ___awdiv@sign:	
   701                           ; 1 bytes @ 0x6
   702                           
   703                           
   704                           ; 1 bytes @ 0x6
   705     0076                     	ds	1
   706     0077                     ??_Lcd_Write_String_4bits:
   707     0077                     Lcd_Set_Cursor_4bits@z:	
   708                           ; 1 bytes @ 0x7
   709                           
   710     0077                     ___lwdiv@counter:	
   711                           ; 1 bytes @ 0x7
   712                           
   713     0077                     ___awdiv@quotient:	
   714                           ; 1 bytes @ 0x7
   715                           
   716                           
   717                           ; 2 bytes @ 0x7
   718     0077                     	ds	1
   719     0078                     ?___lwmod:
   720     0078                     Lcd_Set_Cursor_4bits@y:	
   721                           ; 2 bytes @ 0x8
   722                           
   723     0078                     ___lwmod@divisor:	
   724                           ; 1 bytes @ 0x8
   725                           
   726                           
   727                           ; 2 bytes @ 0x8
   728     0078                     	ds	1
   729     0079                     ?___awmod:
   730     0079                     Lcd_Set_Cursor_4bits@temp:	
   731                           ; 2 bytes @ 0x9
   732                           
   733     0079                     ___awmod@divisor:	
   734                           ; 1 bytes @ 0x9
   735                           
   736                           
   737                           ; 2 bytes @ 0x9
   738     0079                     	ds	1
   739     007A                     Lcd_Write_String_4bits@i:
   740     007A                     ___lwmod@dividend:	
   741                           ; 2 bytes @ 0xA
   742                           
   743                           
   744                           ; 2 bytes @ 0xA
   745     007A                     	ds	1
   746     007B                     ___awmod@dividend:
   747                           
   748                           ; 2 bytes @ 0xB
   749     007B                     	ds	1
   750     007C                     ??___lwmod:
   751                           
   752                           ; 1 bytes @ 0xC
   753     007C                     	ds	1
   754     007D                     ??___awmod:
   755     007D                     ___lwmod@counter:	
   756                           ; 1 bytes @ 0xD
   757                           
   758                           
   759                           ; 1 bytes @ 0xD
   760     007D                     	ds	1
   761                           
   762                           	psect	cstackBANK0
   763     0020                     __pcstackBANK0:
   764     0020                     ?_sprintf:
   765     0020                     sprintf@f:	
   766                           ; 2 bytes @ 0x0
   767                           
   768     0020                     ___awmod@counter:	
   769                           ; 1 bytes @ 0x0
   770                           
   771                           
   772                           ; 1 bytes @ 0x0
   773     0020                     	ds	1
   774     0021                     ___awmod@sign:
   775                           
   776                           ; 1 bytes @ 0x1
   777     0021                     	ds	2
   778     0023                     ??_sprintf:
   779                           
   780                           ; 1 bytes @ 0x3
   781     0023                     	ds	3
   782     0026                     sprintf@flag:
   783                           
   784                           ; 1 bytes @ 0x6
   785     0026                     	ds	1
   786     0027                     sprintf@ap:
   787                           
   788                           ; 1 bytes @ 0x7
   789     0027                     	ds	1
   790     0028                     sprintf@val:
   791                           
   792                           ; 2 bytes @ 0x8
   793     0028                     	ds	2
   794     002A                     sprintf@prec:
   795                           
   796                           ; 1 bytes @ 0xA
   797     002A                     	ds	1
   798     002B                     sprintf@sp:
   799                           
   800                           ; 1 bytes @ 0xB
   801     002B                     	ds	1
   802     002C                     sprintf@c:
   803                           
   804                           ; 1 bytes @ 0xC
   805     002C                     	ds	1
   806     002D                     ??_main:
   807                           
   808                           ; 1 bytes @ 0xD
   809     002D                     	ds	2
   810     002F                     main@ADC1:
   811                           
   812                           ; 9 bytes @ 0xF
   813     002F                     	ds	9
   814     0038                     main@ADC2:
   815                           
   816                           ; 9 bytes @ 0x18
   817     0038                     	ds	9
   818     0041                     main@VAL1_U:
   819                           
   820                           ; 1 bytes @ 0x21
   821     0041                     	ds	1
   822     0042                     main@VAL1_D:
   823                           
   824                           ; 1 bytes @ 0x22
   825     0042                     	ds	1
   826     0043                     main@VAL1_C:
   827                           
   828                           ; 1 bytes @ 0x23
   829     0043                     	ds	1
   830     0044                     main@VAL2_U:
   831                           
   832                           ; 1 bytes @ 0x24
   833     0044                     	ds	1
   834     0045                     main@VAL2_D:
   835                           
   836                           ; 1 bytes @ 0x25
   837     0045                     	ds	1
   838     0046                     main@VAL2_C:
   839                           
   840                           ; 1 bytes @ 0x26
   841     0046                     	ds	1
   842     0047                     main@VAL1:
   843                           
   844                           ; 1 bytes @ 0x27
   845     0047                     	ds	1
   846     0048                     main@VAL2:
   847                           
   848                           ; 1 bytes @ 0x28
   849     0048                     	ds	1
   850                           
   851                           	psect	maintext
   852     0611                     __pmaintext:	
   853 ;;
   854 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   855 ;;
   856 ;; *************** function _main *****************
   857 ;; Defined at:
   858 ;;		line 60 in file "main_M.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  ADC2            9   24[BANK0 ] unsigned char [9]
   863 ;;  ADC1            9   15[BANK0 ] unsigned char [9]
   864 ;;  VAL2            1   40[BANK0 ] unsigned char 
   865 ;;  VAL1            1   39[BANK0 ] unsigned char 
   866 ;;  VAL2_C          1   38[BANK0 ] unsigned char 
   867 ;;  VAL2_D          1   37[BANK0 ] unsigned char 
   868 ;;  VAL2_U          1   36[BANK0 ] unsigned char 
   869 ;;  VAL1_C          1   35[BANK0 ] unsigned char 
   870 ;;  VAL1_D          1   34[BANK0 ] unsigned char 
   871 ;;  VAL1_U          1   33[BANK0 ] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : B00/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         0      26       0       0       0
   883 ;;      Temps:          0       2       0       0       0
   884 ;;      Totals:         0      28       0       0       0
   885 ;;Total ram usage:       28 bytes
   886 ;; Hardware stack levels required when called: 4
   887 ;; This function calls:
   888 ;;		_Lcd_Clear_4bits
   889 ;;		_Lcd_Set_Cursor_4bits
   890 ;;		_Lcd_Write_String_4bits
   891 ;;		___awdiv
   892 ;;		___awmod
   893 ;;		_setup
   894 ;;		_spiRead
   895 ;;		_spiWrite
   896 ;;		_sprintf
   897 ;; This function is called by:
   898 ;;		Startup code after reset
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902     0611                     _main:	
   903                           ;psect for function _main
   904                           
   905     0611                     l1460:	
   906                           ;incstack = 0
   907                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   908                           
   909                           
   910                           ;main_M.c: 62:     setup();
   911     0611  120A  118A  22C9  120A  118A  	fcall	_setup
   912                           
   913                           ;main_M.c: 64:     uint8_t VAL1;;main_M.c: 65:     uint8_t VAL1_U;;main_M.c: 66:     uin
      +                          t8_t VAL1_D;;main_M.c: 67:     uint8_t VAL1_C;;main_M.c: 69:     uint8_t VAL2;;main_M.c:
      +                           70:     uint8_t VAL2_U;;main_M.c: 71:     uint8_t VAL2_D;;main_M.c: 72:     uint8_t VAL
      +                          2_C;;main_M.c: 74:     char ADC1[9];;main_M.c: 75:     char ADC2[9];;main_M.c: 77:     L
      +                          cd_Clear_4bits();
   914     0616  120A  118A  225D  120A  118A  	fcall	_Lcd_Clear_4bits
   915                           
   916                           ;main_M.c: 78:     Lcd_Set_Cursor_4bits(1,1);
   917     061B  01F4               	clrf	Lcd_Set_Cursor_4bits@b
   918     061C  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
   919     061D  3001               	movlw	1
   920     061E  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   921     0623                     l1462:
   922                           
   923                           ;main_M.c: 79:     Lcd_Write_String_4bits("S1:");
   924     0623  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   925     0624  00F5               	movwf	Lcd_Write_String_4bits@a
   926     0625  3080               	movlw	128
   927     0626  00F6               	movwf	Lcd_Write_String_4bits@a+1
   928     0627  120A  118A  2365  120A  118A  	fcall	_Lcd_Write_String_4bits
   929     062C                     l1464:
   930                           
   931                           ;main_M.c: 80:     Lcd_Set_Cursor_4bits(1,7);
   932     062C  3007               	movlw	7
   933     062D  00F4               	movwf	Lcd_Set_Cursor_4bits@b
   934     062E  3001               	movlw	1
   935     062F  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   936                           
   937                           ;main_M.c: 81:     Lcd_Write_String_4bits("S2:");
   938     0634  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   939     0635  00F5               	movwf	Lcd_Write_String_4bits@a
   940     0636  3080               	movlw	128
   941     0637  00F6               	movwf	Lcd_Write_String_4bits@a+1
   942     0638  120A  118A  2365  120A  118A  	fcall	_Lcd_Write_String_4bits
   943     063D                     l1466:
   944                           
   945                           ;main_M.c: 82:     Lcd_Set_Cursor_4bits(1,13);
   946     063D  300D               	movlw	13
   947     063E  00F4               	movwf	Lcd_Set_Cursor_4bits@b
   948     063F  3001               	movlw	1
   949     0640  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   950     0645                     l1468:
   951                           
   952                           ;main_M.c: 83:     Lcd_Write_String_4bits("S3:");
   953     0645  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   954     0646  00F5               	movwf	Lcd_Write_String_4bits@a
   955     0647  3080               	movlw	128
   956     0648  00F6               	movwf	Lcd_Write_String_4bits@a+1
   957     0649  120A  118A  2365  120A  118A  	fcall	_Lcd_Write_String_4bits
   958     064E                     l1470:
   959                           
   960                           ;main_M.c: 86:     {;main_M.c: 87:        PORTCbits.RC1 = 0;
   961     064E  1283               	bcf	3,5	;RP0=0, select bank0
   962     064F  1303               	bcf	3,6	;RP1=0, select bank0
   963     0650  1087               	bcf	7,1	;volatile
   964     0651                     l1472:
   965                           
   966                           ;main_M.c: 88:        _delay((unsigned long)((1)*(4000000/4000.0)));
   967     0651  30C7               	movlw	199
   968     0652  1283               	bcf	3,5	;RP0=0, select bank0
   969     0653  1303               	bcf	3,6	;RP1=0, select bank0
   970     0654  00AD               	movwf	??_main
   971     0655                     u1037:
   972     0655  2E56               	nop2
   973     0656  0BAD               	decfsz	??_main,f
   974     0657  2E55               	goto	u1037
   975     0658  2E59               	nop2
   976     0659                     l1474:
   977                           
   978                           ;main_M.c: 90:        spiWrite(PORTD);
   979     0659  1283               	bcf	3,5	;RP0=0, select bank0
   980     065A  1303               	bcf	3,6	;RP1=0, select bank0
   981     065B  0808               	movf	8,w	;volatile
   982     065C  120A  118A  2247  120A  118A  	fcall	_spiWrite
   983     0661                     l1476:
   984                           
   985                           ;main_M.c: 91:        VAL1 = spiRead();
   986     0661  120A  118A  2254  120A  118A  	fcall	_spiRead
   987     0666  1283               	bcf	3,5	;RP0=0, select bank0
   988     0667  1303               	bcf	3,6	;RP1=0, select bank0
   989     0668  00C7               	movwf	main@VAL1
   990     0669                     l1478:
   991                           
   992                           ;main_M.c: 92:        PORTB = VAL1;
   993     0669  0847               	movf	main@VAL1,w
   994     066A  0086               	movwf	6	;volatile
   995     066B                     l1480:
   996                           
   997                           ;main_M.c: 94:        _delay((unsigned long)((1)*(4000000/4000.0)));
   998     066B  30C7               	movlw	199
   999     066C  1283               	bcf	3,5	;RP0=0, select bank0
  1000     066D  1303               	bcf	3,6	;RP1=0, select bank0
  1001     066E  00AD               	movwf	??_main
  1002     066F                     u1047:
  1003     066F  2E70               	nop2
  1004     0670  0BAD               	decfsz	??_main,f
  1005     0671  2E6F               	goto	u1047
  1006     0672  2E73               	nop2
  1007     0673                     l1482:
  1008                           
  1009                           ;main_M.c: 95:        PORTCbits.RC1 = 1;
  1010     0673  1283               	bcf	3,5	;RP0=0, select bank0
  1011     0674  1303               	bcf	3,6	;RP1=0, select bank0
  1012     0675  1487               	bsf	7,1	;volatile
  1013     0676                     l1484:
  1014                           
  1015                           ;main_M.c: 97:       VAL1_C = (VAL1/100);
  1016     0676  3064               	movlw	100
  1017     0677  00F0               	movwf	___awdiv@divisor
  1018     0678  3000               	movlw	0
  1019     0679  00F1               	movwf	___awdiv@divisor+1
  1020     067A  0847               	movf	main@VAL1,w
  1021     067B  00AD               	movwf	??_main
  1022     067C  01AE               	clrf	??_main+1
  1023     067D  082D               	movf	??_main,w
  1024     067E  00F2               	movwf	___awdiv@dividend
  1025     067F  082E               	movf	??_main+1,w
  1026     0680  00F3               	movwf	___awdiv@dividend+1
  1027     0681  120A  118A  24E9  120A  118A  	fcall	___awdiv
  1028     0686  0870               	movf	?___awdiv,w
  1029     0687  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0688  1303               	bcf	3,6	;RP1=0, select bank0
  1031     0689  00C3               	movwf	main@VAL1_C
  1032     068A                     l1486:
  1033                           
  1034                           ;main_M.c: 98:       VAL1_D = (VAL1/10)%10;
  1035     068A  300A               	movlw	10
  1036     068B  00F9               	movwf	___awmod@divisor
  1037     068C  3000               	movlw	0
  1038     068D  00FA               	movwf	___awmod@divisor+1
  1039     068E  300A               	movlw	10
  1040     068F  00F0               	movwf	___awdiv@divisor
  1041     0690  3000               	movlw	0
  1042     0691  00F1               	movwf	___awdiv@divisor+1
  1043     0692  0847               	movf	main@VAL1,w
  1044     0693  00AD               	movwf	??_main
  1045     0694  01AE               	clrf	??_main+1
  1046     0695  082D               	movf	??_main,w
  1047     0696  00F2               	movwf	___awdiv@dividend
  1048     0697  082E               	movf	??_main+1,w
  1049     0698  00F3               	movwf	___awdiv@dividend+1
  1050     0699  120A  118A  24E9  120A  118A  	fcall	___awdiv
  1051     069E  0871               	movf	?___awdiv+1,w
  1052     069F  00FC               	movwf	___awmod@dividend+1
  1053     06A0  0870               	movf	?___awdiv,w
  1054     06A1  00FB               	movwf	___awmod@dividend
  1055     06A2  120A  118A  2431  120A  118A  	fcall	___awmod
  1056     06A7  0879               	movf	?___awmod,w
  1057     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1058     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1059     06AA  00C2               	movwf	main@VAL1_D
  1060     06AB                     l1488:
  1061                           
  1062                           ;main_M.c: 99:       VAL1_U = VAL1%10;
  1063     06AB  300A               	movlw	10
  1064     06AC  00F9               	movwf	___awmod@divisor
  1065     06AD  3000               	movlw	0
  1066     06AE  00FA               	movwf	___awmod@divisor+1
  1067     06AF  0847               	movf	main@VAL1,w
  1068     06B0  00AD               	movwf	??_main
  1069     06B1  01AE               	clrf	??_main+1
  1070     06B2  082D               	movf	??_main,w
  1071     06B3  00FB               	movwf	___awmod@dividend
  1072     06B4  082E               	movf	??_main+1,w
  1073     06B5  00FC               	movwf	___awmod@dividend+1
  1074     06B6  120A  118A  2431  120A  118A  	fcall	___awmod
  1075     06BB  0879               	movf	?___awmod,w
  1076     06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1077     06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1078     06BE  00C1               	movwf	main@VAL1_U
  1079     06BF                     l1490:
  1080                           
  1081                           ;main_M.c: 101:       sprintf(ADC1, "%u", VAL1_C);
  1082     06BF  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1083     06C0  00A0               	movwf	sprintf@f
  1084     06C1  0843               	movf	main@VAL1_C,w
  1085     06C2  00AD               	movwf	??_main
  1086     06C3  01AE               	clrf	??_main+1
  1087     06C4  082D               	movf	??_main,w
  1088     06C5  00A1               	movwf	?_sprintf+1
  1089     06C6  082E               	movf	??_main+1,w
  1090     06C7  00A2               	movwf	?_sprintf+2
  1091     06C8  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1092     06C9  120A  118A  2550  120A  118A  	fcall	_sprintf
  1093     06CE                     l1492:
  1094                           
  1095                           ;main_M.c: 102:       Lcd_Set_Cursor_4bits(2,1);
  1096     06CE  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1097     06CF  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1098     06D0  3002               	movlw	2
  1099     06D1  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1100     06D6                     l1494:
  1101                           
  1102                           ;main_M.c: 103:       Lcd_Write_String_4bits(ADC1);
  1103     06D6  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1104     06D7  00F5               	movwf	Lcd_Write_String_4bits@a
  1105     06D8  3000               	movlw	0
  1106     06D9  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1107     06DA  120A  118A  2365  120A  118A  	fcall	_Lcd_Write_String_4bits
  1108     06DF                     l1496:
  1109                           
  1110                           ;main_M.c: 105:       sprintf(ADC1, "%u", VAL1_D);
  1111     06DF  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1112     06E0  1283               	bcf	3,5	;RP0=0, select bank0
  1113     06E1  1303               	bcf	3,6	;RP1=0, select bank0
  1114     06E2  00A0               	movwf	sprintf@f
  1115     06E3  0842               	movf	main@VAL1_D,w
  1116     06E4  00AD               	movwf	??_main
  1117     06E5  01AE               	clrf	??_main+1
  1118     06E6  082D               	movf	??_main,w
  1119     06E7  00A1               	movwf	?_sprintf+1
  1120     06E8  082E               	movf	??_main+1,w
  1121     06E9  00A2               	movwf	?_sprintf+2
  1122     06EA  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1123     06EB  120A  118A  2550  120A  118A  	fcall	_sprintf
  1124     06F0                     l1498:
  1125                           
  1126                           ;main_M.c: 106:       Lcd_Set_Cursor_4bits(2,2);
  1127     06F0  3002               	movlw	2
  1128     06F1  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1129     06F2  3002               	movlw	2
  1130     06F3  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1131     06F8                     l1500:
  1132                           
  1133                           ;main_M.c: 107:       Lcd_Write_String_4bits(ADC1);
  1134     06F8  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1135     06F9  00F5               	movwf	Lcd_Write_String_4bits@a
  1136     06FA  3000               	movlw	0
  1137     06FB  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1138     06FC  120A  118A  2365  120A  118A  	fcall	_Lcd_Write_String_4bits
  1139     0701                     l1502:
  1140                           
  1141                           ;main_M.c: 109:       sprintf(ADC1, "%u", VAL1_U);
  1142     0701  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1143     0702  1283               	bcf	3,5	;RP0=0, select bank0
  1144     0703  1303               	bcf	3,6	;RP1=0, select bank0
  1145     0704  00A0               	movwf	sprintf@f
  1146     0705  0841               	movf	main@VAL1_U,w
  1147     0706  00AD               	movwf	??_main
  1148     0707  01AE               	clrf	??_main+1
  1149     0708  082D               	movf	??_main,w
  1150     0709  00A1               	movwf	?_sprintf+1
  1151     070A  082E               	movf	??_main+1,w
  1152     070B  00A2               	movwf	?_sprintf+2
  1153     070C  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1154     070D  120A  118A  2550  120A  118A  	fcall	_sprintf
  1155     0712                     l1504:
  1156                           
  1157                           ;main_M.c: 110:       Lcd_Set_Cursor_4bits(2,3);
  1158     0712  3003               	movlw	3
  1159     0713  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1160     0714  3002               	movlw	2
  1161     0715  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1162     071A                     l1506:
  1163                           
  1164                           ;main_M.c: 111:       Lcd_Write_String_4bits(ADC1);
  1165     071A  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1166     071B  00F5               	movwf	Lcd_Write_String_4bits@a
  1167     071C  3000               	movlw	0
  1168     071D  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1169     071E  120A  118A  2365  120A  118A  	fcall	_Lcd_Write_String_4bits
  1170     0723                     l1508:
  1171                           
  1172                           ;main_M.c: 113:       PORTCbits.RC2 = 0;
  1173     0723  1283               	bcf	3,5	;RP0=0, select bank0
  1174     0724  1303               	bcf	3,6	;RP1=0, select bank0
  1175     0725  1107               	bcf	7,2	;volatile
  1176     0726                     l1510:
  1177                           
  1178                           ;main_M.c: 114:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1179     0726  30C7               	movlw	199
  1180     0727  1283               	bcf	3,5	;RP0=0, select bank0
  1181     0728  1303               	bcf	3,6	;RP1=0, select bank0
  1182     0729  00AD               	movwf	??_main
  1183     072A                     u1057:
  1184     072A  2F2B               	nop2
  1185     072B  0BAD               	decfsz	??_main,f
  1186     072C  2F2A               	goto	u1057
  1187     072D  2F2E               	nop2
  1188                           
  1189                           ;main_M.c: 116:        spiWrite(PORTD);
  1190     072E  1283               	bcf	3,5	;RP0=0, select bank0
  1191     072F  1303               	bcf	3,6	;RP1=0, select bank0
  1192     0730  0808               	movf	8,w	;volatile
  1193     0731  120A  118A  2247  120A  118A  	fcall	_spiWrite
  1194                           
  1195                           ;main_M.c: 117:        VAL2 = spiRead();
  1196     0736  120A  118A  2254  120A  118A  	fcall	_spiRead
  1197     073B  1283               	bcf	3,5	;RP0=0, select bank0
  1198     073C  1303               	bcf	3,6	;RP1=0, select bank0
  1199     073D  00C8               	movwf	main@VAL2
  1200     073E                     l1512:
  1201                           
  1202                           ;main_M.c: 118:        PORTB = VAL2;
  1203     073E  0848               	movf	main@VAL2,w
  1204     073F  0086               	movwf	6	;volatile
  1205     0740                     l1514:
  1206                           
  1207                           ;main_M.c: 120:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1208     0740  30C7               	movlw	199
  1209     0741  1283               	bcf	3,5	;RP0=0, select bank0
  1210     0742  1303               	bcf	3,6	;RP1=0, select bank0
  1211     0743  00AD               	movwf	??_main
  1212     0744                     u1067:
  1213     0744  2F45               	nop2
  1214     0745  0BAD               	decfsz	??_main,f
  1215     0746  2F44               	goto	u1067
  1216     0747  2F48               	nop2
  1217     0748                     l1516:
  1218                           
  1219                           ;main_M.c: 121:        PORTCbits.RC2 = 1;
  1220     0748  1283               	bcf	3,5	;RP0=0, select bank0
  1221     0749  1303               	bcf	3,6	;RP1=0, select bank0
  1222     074A  1507               	bsf	7,2	;volatile
  1223                           
  1224                           ;main_M.c: 123:       VAL2_C = (VAL2/100);
  1225     074B  3064               	movlw	100
  1226     074C  00F0               	movwf	___awdiv@divisor
  1227     074D  3000               	movlw	0
  1228     074E  00F1               	movwf	___awdiv@divisor+1
  1229     074F  0848               	movf	main@VAL2,w
  1230     0750  00AD               	movwf	??_main
  1231     0751  01AE               	clrf	??_main+1
  1232     0752  082D               	movf	??_main,w
  1233     0753  00F2               	movwf	___awdiv@dividend
  1234     0754  082E               	movf	??_main+1,w
  1235     0755  00F3               	movwf	___awdiv@dividend+1
  1236     0756  120A  118A  24E9  120A  118A  	fcall	___awdiv
  1237     075B  0870               	movf	?___awdiv,w
  1238     075C  1283               	bcf	3,5	;RP0=0, select bank0
  1239     075D  1303               	bcf	3,6	;RP1=0, select bank0
  1240     075E  00C6               	movwf	main@VAL2_C
  1241                           
  1242                           ;main_M.c: 124:       VAL2_D = (VAL2/10)%10;
  1243     075F  300A               	movlw	10
  1244     0760  00F9               	movwf	___awmod@divisor
  1245     0761  3000               	movlw	0
  1246     0762  00FA               	movwf	___awmod@divisor+1
  1247     0763  300A               	movlw	10
  1248     0764  00F0               	movwf	___awdiv@divisor
  1249     0765  3000               	movlw	0
  1250     0766  00F1               	movwf	___awdiv@divisor+1
  1251     0767  0848               	movf	main@VAL2,w
  1252     0768  00AD               	movwf	??_main
  1253     0769  01AE               	clrf	??_main+1
  1254     076A  082D               	movf	??_main,w
  1255     076B  00F2               	movwf	___awdiv@dividend
  1256     076C  082E               	movf	??_main+1,w
  1257     076D  00F3               	movwf	___awdiv@dividend+1
  1258     076E  120A  118A  24E9  120A  118A  	fcall	___awdiv
  1259     0773  0871               	movf	?___awdiv+1,w
  1260     0774  00FC               	movwf	___awmod@dividend+1
  1261     0775  0870               	movf	?___awdiv,w
  1262     0776  00FB               	movwf	___awmod@dividend
  1263     0777  120A  118A  2431  120A  118A  	fcall	___awmod
  1264     077C  0879               	movf	?___awmod,w
  1265     077D  1283               	bcf	3,5	;RP0=0, select bank0
  1266     077E  1303               	bcf	3,6	;RP1=0, select bank0
  1267     077F  00C5               	movwf	main@VAL2_D
  1268                           
  1269                           ;main_M.c: 125:       VAL2_U = VAL2%10;
  1270     0780  300A               	movlw	10
  1271     0781  00F9               	movwf	___awmod@divisor
  1272     0782  3000               	movlw	0
  1273     0783  00FA               	movwf	___awmod@divisor+1
  1274     0784  0848               	movf	main@VAL2,w
  1275     0785  00AD               	movwf	??_main
  1276     0786  01AE               	clrf	??_main+1
  1277     0787  082D               	movf	??_main,w
  1278     0788  00FB               	movwf	___awmod@dividend
  1279     0789  082E               	movf	??_main+1,w
  1280     078A  00FC               	movwf	___awmod@dividend+1
  1281     078B  120A  118A  2431  120A  118A  	fcall	___awmod
  1282     0790  0879               	movf	?___awmod,w
  1283     0791  1283               	bcf	3,5	;RP0=0, select bank0
  1284     0792  1303               	bcf	3,6	;RP1=0, select bank0
  1285     0793  00C4               	movwf	main@VAL2_U
  1286     0794                     l1518:
  1287                           
  1288                           ;main_M.c: 127:       sprintf(ADC2, "%u", VAL2_C);
  1289     0794  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1290     0795  00A0               	movwf	sprintf@f
  1291     0796  0846               	movf	main@VAL2_C,w
  1292     0797  00AD               	movwf	??_main
  1293     0798  01AE               	clrf	??_main+1
  1294     0799  082D               	movf	??_main,w
  1295     079A  00A1               	movwf	?_sprintf+1
  1296     079B  082E               	movf	??_main+1,w
  1297     079C  00A2               	movwf	?_sprintf+2
  1298     079D  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1299     079E  120A  118A  2550  120A  118A  	fcall	_sprintf
  1300     07A3                     l1520:
  1301                           
  1302                           ;main_M.c: 128:       Lcd_Set_Cursor_4bits(2,7);
  1303     07A3  3007               	movlw	7
  1304     07A4  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1305     07A5  3002               	movlw	2
  1306     07A6  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1307                           
  1308                           ;main_M.c: 129:       Lcd_Write_String_4bits(ADC2);
  1309     07AB  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1310     07AC  00F5               	movwf	Lcd_Write_String_4bits@a
  1311     07AD  3000               	movlw	0
  1312     07AE  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1313     07AF  120A  118A  2365  120A  118A  	fcall	_Lcd_Write_String_4bits
  1314                           
  1315                           ;main_M.c: 131:       sprintf(ADC2, "%u", VAL2_D);
  1316     07B4  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1317     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1318     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1319     07B7  00A0               	movwf	sprintf@f
  1320     07B8  0845               	movf	main@VAL2_D,w
  1321     07B9  00AD               	movwf	??_main
  1322     07BA  01AE               	clrf	??_main+1
  1323     07BB  082D               	movf	??_main,w
  1324     07BC  00A1               	movwf	?_sprintf+1
  1325     07BD  082E               	movf	??_main+1,w
  1326     07BE  00A2               	movwf	?_sprintf+2
  1327     07BF  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1328     07C0  120A  118A  2550  120A  118A  	fcall	_sprintf
  1329     07C5                     l1522:
  1330                           
  1331                           ;main_M.c: 132:       Lcd_Set_Cursor_4bits(2,8);
  1332     07C5  3008               	movlw	8
  1333     07C6  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1334     07C7  3002               	movlw	2
  1335     07C8  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1336     07CD                     l1524:
  1337                           
  1338                           ;main_M.c: 133:       Lcd_Write_String_4bits(ADC2);
  1339     07CD  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1340     07CE  00F5               	movwf	Lcd_Write_String_4bits@a
  1341     07CF  3000               	movlw	0
  1342     07D0  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1343     07D1  120A  118A  2365  120A  118A  	fcall	_Lcd_Write_String_4bits
  1344     07D6                     l1526:
  1345                           
  1346                           ;main_M.c: 135:       sprintf(ADC2, "%u", VAL2_U);
  1347     07D6  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1348     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1349     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1350     07D9  00A0               	movwf	sprintf@f
  1351     07DA  0844               	movf	main@VAL2_U,w
  1352     07DB  00AD               	movwf	??_main
  1353     07DC  01AE               	clrf	??_main+1
  1354     07DD  082D               	movf	??_main,w
  1355     07DE  00A1               	movwf	?_sprintf+1
  1356     07DF  082E               	movf	??_main+1,w
  1357     07E0  00A2               	movwf	?_sprintf+2
  1358     07E1  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1359     07E2  120A  118A  2550  120A  118A  	fcall	_sprintf
  1360     07E7                     l1528:
  1361                           
  1362                           ;main_M.c: 136:       Lcd_Set_Cursor_4bits(2,9);
  1363     07E7  3009               	movlw	9
  1364     07E8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1365     07E9  3002               	movlw	2
  1366     07EA  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1367                           
  1368                           ;main_M.c: 137:       Lcd_Write_String_4bits(ADC2);
  1369     07EF  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1370     07F0  00F5               	movwf	Lcd_Write_String_4bits@a
  1371     07F1  3000               	movlw	0
  1372     07F2  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1373     07F3  120A  118A  2365  120A  118A  	fcall	_Lcd_Write_String_4bits
  1374     07F8  2E4E               	goto	l1470
  1375     07F9  120A  118A  2800   	ljmp	start
  1376     07FC                     __end_of_main:
  1377                           
  1378                           	psect	text1
  1379     0550                     __ptext1:	
  1380 ;; *************** function _sprintf *****************
  1381 ;; Defined at:
  1382 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  sp              1    wreg     PTR unsigned char 
  1385 ;;		 -> main@ADC2(9), main@ADC1(9), 
  1386 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1387 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  1388 ;;		 -> STR_5(3), STR_4(3), 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1391 ;;		 -> main@ADC2(9), main@ADC1(9), 
  1392 ;;  tmpval          4    0        struct .
  1393 ;;  val             2    8[BANK0 ] unsigned int 
  1394 ;;  cp              2    0        PTR const unsigned char 
  1395 ;;  len             2    0        unsigned int 
  1396 ;;  c               1   12[BANK0 ] unsigned char 
  1397 ;;  prec            1   10[BANK0 ] char 
  1398 ;;  ap              1    7[BANK0 ] PTR void [1]
  1399 ;;		 -> ?_sprintf(2), 
  1400 ;;  flag            1    6[BANK0 ] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  2    0[BANK0 ] int 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       3       0       0       0
  1411 ;;      Locals:         0       7       0       0       0
  1412 ;;      Temps:          0       3       0       0       0
  1413 ;;      Totals:         0      13       0       0       0
  1414 ;;Total ram usage:       13 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 1
  1417 ;; This function calls:
  1418 ;;		___lwdiv
  1419 ;;		___lwmod
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425     0550                     _sprintf:	
  1426                           ;psect for function _sprintf
  1427                           
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1431                           ;sprintf@sp stored from wreg
  1432     0550  1283               	bcf	3,5	;RP0=0, select bank0
  1433     0551  1303               	bcf	3,6	;RP1=0, select bank0
  1434     0552  00AB               	movwf	sprintf@sp
  1435     0553                     l1322:
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1438     0553  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1439     0554  00A7               	movwf	sprintf@ap
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1442     0555  2DFC               	goto	l1364
  1443     0556                     l1324:
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1446     0556  3025               	movlw	37
  1447     0557  062C               	xorwf	sprintf@c,w
  1448     0558  1903               	btfsc	3,2
  1449     0559  2D5B               	goto	u791
  1450     055A  2D5C               	goto	u790
  1451     055B                     u791:
  1452     055B  2D66               	goto	l1330
  1453     055C                     u790:
  1454     055C                     l1326:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1457     055C  082B               	movf	sprintf@sp,w
  1458     055D  0084               	movwf	4
  1459     055E  082C               	movf	sprintf@c,w
  1460     055F  1383               	bcf	3,7	;select IRP bank0
  1461     0560  0080               	movwf	0
  1462     0561                     l1328:
  1463     0561  3001               	movlw	1
  1464     0562  00A3               	movwf	??_sprintf
  1465     0563  0823               	movf	??_sprintf,w
  1466     0564  07AB               	addwf	sprintf@sp,f
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1469     0565  2DFC               	goto	l1364
  1470     0566                     l1330:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1473     0566  01A6               	clrf	sprintf@flag
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1476     0567  2D6D               	goto	l1336
  1477     0568                     l1332:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1480     0568  30C0               	movlw	192
  1481     0569  00A3               	movwf	??_sprintf
  1482     056A  0823               	movf	??_sprintf,w
  1483     056B  04A6               	iorwf	sprintf@flag,f
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1486     056C  2D87               	goto	l1338
  1487     056D                     l1336:
  1488     056D  3001               	movlw	1
  1489     056E  07A0               	addwf	sprintf@f,f
  1490     056F  30FF               	movlw	-1
  1491     0570  0720               	addwf	sprintf@f,w
  1492     0571  0084               	movwf	4
  1493     0572  120A  118A  200D  120A  118A  	fcall	stringdir
  1494     0577  00AC               	movwf	sprintf@c
  1495     0578  00A3               	movwf	??_sprintf
  1496     0579  01A4               	clrf	??_sprintf+1
  1497                           
  1498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1499                           ; Switch size 1, requested type "simple"
  1500                           ; Number of cases is 1, Range of values is 0 to 0
  1501                           ; switch strategies available:
  1502                           ; Name         Instructions Cycles
  1503                           ; simple_byte            4     3 (average)
  1504                           ; direct_byte           11     8 (fixed)
  1505                           ; jumptable            260     6 (fixed)
  1506                           ;	Chosen strategy is simple_byte
  1507     057A  0824               	movf	??_sprintf+1,w
  1508     057B  3A00               	xorlw	0	; case 0
  1509     057C  1903               	skipnz
  1510     057D  2D7F               	goto	l1550
  1511     057E  2DFC               	goto	l1364
  1512     057F                     l1550:
  1513                           
  1514                           ; Switch size 1, requested type "simple"
  1515                           ; Number of cases is 2, Range of values is 0 to 117
  1516                           ; switch strategies available:
  1517                           ; Name         Instructions Cycles
  1518                           ; simple_byte            7     4 (average)
  1519                           ; jumptable            260     6 (fixed)
  1520                           ;	Chosen strategy is simple_byte
  1521     057F  0823               	movf	??_sprintf,w
  1522     0580  3A00               	xorlw	0	; case 0
  1523     0581  1903               	skipnz
  1524     0582  2E0C               	goto	l1366
  1525     0583  3A75               	xorlw	117	; case 117
  1526     0584  1903               	skipnz
  1527     0585  2D68               	goto	l1332
  1528     0586  2DFC               	goto	l1364
  1529     0587                     l1338:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1532     0587  0827               	movf	sprintf@ap,w
  1533     0588  0084               	movwf	4
  1534     0589  1383               	bcf	3,7	;select IRP bank0
  1535     058A  0800               	movf	0,w
  1536     058B  00A8               	movwf	sprintf@val
  1537     058C  0A84               	incf	4,f
  1538     058D  0800               	movf	0,w
  1539     058E  00A9               	movwf	sprintf@val+1
  1540     058F                     l1340:
  1541     058F  3002               	movlw	2
  1542     0590  00A3               	movwf	??_sprintf
  1543     0591  0823               	movf	??_sprintf,w
  1544     0592  07A7               	addwf	sprintf@ap,f
  1545     0593                     l1342:
  1546                           
  1547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1548     0593  01AC               	clrf	sprintf@c
  1549     0594  0AAC               	incf	sprintf@c,f
  1550     0595                     l1348:
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1553     0595  082C               	movf	sprintf@c,w
  1554     0596  00A3               	movwf	??_sprintf
  1555     0597  0723               	addwf	??_sprintf,w
  1556     0598  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1557     0599  0084               	movwf	4
  1558     059A  120A  118A  200D  120A  118A  	fcall	stringdir
  1559     059F  00A4               	movwf	??_sprintf+1
  1560     05A0  120A  118A  200D  120A  118A  	fcall	stringdir
  1561     05A5  00A5               	movwf	??_sprintf+2
  1562     05A6  0825               	movf	??_sprintf+2,w
  1563     05A7  0229               	subwf	sprintf@val+1,w
  1564     05A8  1D03               	skipz
  1565     05A9  2DAC               	goto	u805
  1566     05AA  0824               	movf	??_sprintf+1,w
  1567     05AB  0228               	subwf	sprintf@val,w
  1568     05AC                     u805:
  1569     05AC  1803               	skipnc
  1570     05AD  2DAF               	goto	u801
  1571     05AE  2DB0               	goto	u800
  1572     05AF                     u801:
  1573     05AF  2DB1               	goto	l1352
  1574     05B0                     u800:
  1575     05B0  2DBB               	goto	l1354
  1576     05B1                     l1352:
  1577     05B1  3001               	movlw	1
  1578     05B2  00A3               	movwf	??_sprintf
  1579     05B3  0823               	movf	??_sprintf,w
  1580     05B4  07AC               	addwf	sprintf@c,f
  1581     05B5  3005               	movlw	5
  1582     05B6  062C               	xorwf	sprintf@c,w
  1583     05B7  1D03               	btfss	3,2
  1584     05B8  2DBA               	goto	u811
  1585     05B9  2DBB               	goto	u810
  1586     05BA                     u811:
  1587     05BA  2D95               	goto	l1348
  1588     05BB                     u810:
  1589     05BB                     l1354:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1592     05BB  082C               	movf	sprintf@c,w
  1593     05BC  00AA               	movwf	sprintf@prec
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1596     05BD  2DF3               	goto	l1362
  1597     05BE                     l1356:
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1600     05BE  300A               	movlw	10
  1601     05BF  00F8               	movwf	___lwmod@divisor
  1602     05C0  3000               	movlw	0
  1603     05C1  00F9               	movwf	___lwmod@divisor+1
  1604     05C2  082A               	movf	sprintf@prec,w
  1605     05C3  00A3               	movwf	??_sprintf
  1606     05C4  0723               	addwf	??_sprintf,w
  1607     05C5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1608     05C6  0084               	movwf	4
  1609     05C7  120A  118A  200D  120A  118A  	fcall	stringdir
  1610     05CC  00F0               	movwf	___lwdiv@divisor
  1611     05CD  120A  118A  200D  120A  118A  	fcall	stringdir
  1612     05D2  00F1               	movwf	___lwdiv@divisor+1
  1613     05D3  0829               	movf	sprintf@val+1,w
  1614     05D4  00F3               	movwf	___lwdiv@dividend+1
  1615     05D5  0828               	movf	sprintf@val,w
  1616     05D6  00F2               	movwf	___lwdiv@dividend
  1617     05D7  120A  118A  23A7  120A  118A  	fcall	___lwdiv
  1618     05DC  0871               	movf	?___lwdiv+1,w
  1619     05DD  00FB               	movwf	___lwmod@dividend+1
  1620     05DE  0870               	movf	?___lwdiv,w
  1621     05DF  00FA               	movwf	___lwmod@dividend
  1622     05E0  120A  118A  232B  120A  118A  	fcall	___lwmod
  1623     05E5  0878               	movf	?___lwmod,w
  1624     05E6  3E30               	addlw	48
  1625     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1626     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1627     05E9  00AC               	movwf	sprintf@c
  1628     05EA                     l1358:
  1629                           
  1630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1631     05EA  082B               	movf	sprintf@sp,w
  1632     05EB  0084               	movwf	4
  1633     05EC  082C               	movf	sprintf@c,w
  1634     05ED  1383               	bcf	3,7	;select IRP bank0
  1635     05EE  0080               	movwf	0
  1636     05EF                     l1360:
  1637     05EF  3001               	movlw	1
  1638     05F0  00A3               	movwf	??_sprintf
  1639     05F1  0823               	movf	??_sprintf,w
  1640     05F2  07AB               	addwf	sprintf@sp,f
  1641     05F3                     l1362:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1644     05F3  30FF               	movlw	255
  1645     05F4  00A3               	movwf	??_sprintf
  1646     05F5  0823               	movf	??_sprintf,w
  1647     05F6  07AA               	addwf	sprintf@prec,f
  1648     05F7  0A2A               	incf	sprintf@prec,w
  1649     05F8  1D03               	btfss	3,2
  1650     05F9  2DFB               	goto	u821
  1651     05FA  2DFC               	goto	u820
  1652     05FB                     u821:
  1653     05FB  2DBE               	goto	l1356
  1654     05FC                     u820:
  1655     05FC                     l1364:
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1658     05FC  3001               	movlw	1
  1659     05FD  07A0               	addwf	sprintf@f,f
  1660     05FE  30FF               	movlw	-1
  1661     05FF  0720               	addwf	sprintf@f,w
  1662     0600  0084               	movwf	4
  1663     0601  120A  118A  200D  120A  118A  	fcall	stringdir
  1664     0606  00AC               	movwf	sprintf@c
  1665     0607  082C               	movf	sprintf@c,w
  1666     0608  1D03               	btfss	3,2
  1667     0609  2E0B               	goto	u831
  1668     060A  2E0C               	goto	u830
  1669     060B                     u831:
  1670     060B  2D56               	goto	l1324
  1671     060C                     u830:
  1672     060C                     l1366:
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1675     060C  082B               	movf	sprintf@sp,w
  1676     060D  0084               	movwf	4
  1677     060E  1383               	bcf	3,7	;select IRP bank0
  1678     060F  0180               	clrf	0
  1679     0610                     l242:
  1680     0610  0008               	return
  1681     0611                     __end_of_sprintf:
  1682                           
  1683                           	psect	text2
  1684     032B                     __ptext2:	
  1685 ;; *************** function ___lwmod *****************
  1686 ;; Defined at:
  1687 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  divisor         2    8[COMMON] unsigned int 
  1690 ;;  dividend        2   10[COMMON] unsigned int 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  counter         1   13[COMMON] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2    8[COMMON] unsigned int 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         4       0       0       0       0
  1703 ;;      Locals:         1       0       0       0       0
  1704 ;;      Temps:          1       0       0       0       0
  1705 ;;      Totals:         6       0       0       0       0
  1706 ;;Total ram usage:        6 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_sprintf
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715     032B                     ___lwmod:	
  1716                           ;psect for function ___lwmod
  1717                           
  1718     032B                     l1246:	
  1719                           ;incstack = 0
  1720                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1721                           
  1722     032B  0878               	movf	___lwmod@divisor,w
  1723     032C  0479               	iorwf	___lwmod@divisor+1,w
  1724     032D  1903               	btfsc	3,2
  1725     032E  2B30               	goto	u661
  1726     032F  2B31               	goto	u660
  1727     0330                     u661:
  1728     0330  2B60               	goto	l1264
  1729     0331                     u660:
  1730     0331                     l1248:
  1731     0331  01FD               	clrf	___lwmod@counter
  1732     0332  0AFD               	incf	___lwmod@counter,f
  1733     0333  2B3F               	goto	l1254
  1734     0334                     l1250:
  1735     0334  3001               	movlw	1
  1736     0335                     u675:
  1737     0335  1003               	clrc
  1738     0336  0DF8               	rlf	___lwmod@divisor,f
  1739     0337  0DF9               	rlf	___lwmod@divisor+1,f
  1740     0338  3EFF               	addlw	-1
  1741     0339  1D03               	skipz
  1742     033A  2B35               	goto	u675
  1743     033B                     l1252:
  1744     033B  3001               	movlw	1
  1745     033C  00FC               	movwf	??___lwmod
  1746     033D  087C               	movf	??___lwmod,w
  1747     033E  07FD               	addwf	___lwmod@counter,f
  1748     033F                     l1254:
  1749     033F  1FF9               	btfss	___lwmod@divisor+1,7
  1750     0340  2B42               	goto	u681
  1751     0341  2B43               	goto	u680
  1752     0342                     u681:
  1753     0342  2B34               	goto	l1250
  1754     0343                     u680:
  1755     0343                     l1256:
  1756     0343  0879               	movf	___lwmod@divisor+1,w
  1757     0344  027B               	subwf	___lwmod@dividend+1,w
  1758     0345  1D03               	skipz
  1759     0346  2B49               	goto	u695
  1760     0347  0878               	movf	___lwmod@divisor,w
  1761     0348  027A               	subwf	___lwmod@dividend,w
  1762     0349                     u695:
  1763     0349  1C03               	skipc
  1764     034A  2B4C               	goto	u691
  1765     034B  2B4D               	goto	u690
  1766     034C                     u691:
  1767     034C  2B53               	goto	l1260
  1768     034D                     u690:
  1769     034D                     l1258:
  1770     034D  0878               	movf	___lwmod@divisor,w
  1771     034E  02FA               	subwf	___lwmod@dividend,f
  1772     034F  0879               	movf	___lwmod@divisor+1,w
  1773     0350  1C03               	skipc
  1774     0351  03FB               	decf	___lwmod@dividend+1,f
  1775     0352  02FB               	subwf	___lwmod@dividend+1,f
  1776     0353                     l1260:
  1777     0353  3001               	movlw	1
  1778     0354                     u705:
  1779     0354  1003               	clrc
  1780     0355  0CF9               	rrf	___lwmod@divisor+1,f
  1781     0356  0CF8               	rrf	___lwmod@divisor,f
  1782     0357  3EFF               	addlw	-1
  1783     0358  1D03               	skipz
  1784     0359  2B54               	goto	u705
  1785     035A                     l1262:
  1786     035A  3001               	movlw	1
  1787     035B  02FD               	subwf	___lwmod@counter,f
  1788     035C  1D03               	btfss	3,2
  1789     035D  2B5F               	goto	u711
  1790     035E  2B60               	goto	u710
  1791     035F                     u711:
  1792     035F  2B43               	goto	l1256
  1793     0360                     u710:
  1794     0360                     l1264:
  1795     0360  087B               	movf	___lwmod@dividend+1,w
  1796     0361  00F9               	movwf	?___lwmod+1
  1797     0362  087A               	movf	___lwmod@dividend,w
  1798     0363  00F8               	movwf	?___lwmod
  1799     0364                     l528:
  1800     0364  0008               	return
  1801     0365                     __end_of___lwmod:
  1802                           
  1803                           	psect	text3
  1804     03A7                     __ptext3:	
  1805 ;; *************** function ___lwdiv *****************
  1806 ;; Defined at:
  1807 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  divisor         2    0[COMMON] unsigned int 
  1810 ;;  dividend        2    2[COMMON] unsigned int 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  quotient        2    5[COMMON] unsigned int 
  1813 ;;  counter         1    7[COMMON] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  2    0[COMMON] unsigned int 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         4       0       0       0       0
  1824 ;;      Locals:         3       0       0       0       0
  1825 ;;      Temps:          1       0       0       0       0
  1826 ;;      Totals:         8       0       0       0       0
  1827 ;;Total ram usage:        8 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_sprintf
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836     03A7                     ___lwdiv:	
  1837                           ;psect for function ___lwdiv
  1838                           
  1839     03A7                     l1220:	
  1840                           ;incstack = 0
  1841                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1842                           
  1843     03A7  01F5               	clrf	___lwdiv@quotient
  1844     03A8  01F6               	clrf	___lwdiv@quotient+1
  1845     03A9                     l1222:
  1846     03A9  0870               	movf	___lwdiv@divisor,w
  1847     03AA  0471               	iorwf	___lwdiv@divisor+1,w
  1848     03AB  1903               	btfsc	3,2
  1849     03AC  2BAE               	goto	u591
  1850     03AD  2BAF               	goto	u590
  1851     03AE                     u591:
  1852     03AE  2BE6               	goto	l1242
  1853     03AF                     u590:
  1854     03AF                     l1224:
  1855     03AF  01F7               	clrf	___lwdiv@counter
  1856     03B0  0AF7               	incf	___lwdiv@counter,f
  1857     03B1  2BBD               	goto	l1230
  1858     03B2                     l1226:
  1859     03B2  3001               	movlw	1
  1860     03B3                     u605:
  1861     03B3  1003               	clrc
  1862     03B4  0DF0               	rlf	___lwdiv@divisor,f
  1863     03B5  0DF1               	rlf	___lwdiv@divisor+1,f
  1864     03B6  3EFF               	addlw	-1
  1865     03B7  1D03               	skipz
  1866     03B8  2BB3               	goto	u605
  1867     03B9                     l1228:
  1868     03B9  3001               	movlw	1
  1869     03BA  00F4               	movwf	??___lwdiv
  1870     03BB  0874               	movf	??___lwdiv,w
  1871     03BC  07F7               	addwf	___lwdiv@counter,f
  1872     03BD                     l1230:
  1873     03BD  1FF1               	btfss	___lwdiv@divisor+1,7
  1874     03BE  2BC0               	goto	u611
  1875     03BF  2BC1               	goto	u610
  1876     03C0                     u611:
  1877     03C0  2BB2               	goto	l1226
  1878     03C1                     u610:
  1879     03C1                     l1232:
  1880     03C1  3001               	movlw	1
  1881     03C2                     u625:
  1882     03C2  1003               	clrc
  1883     03C3  0DF5               	rlf	___lwdiv@quotient,f
  1884     03C4  0DF6               	rlf	___lwdiv@quotient+1,f
  1885     03C5  3EFF               	addlw	-1
  1886     03C6  1D03               	skipz
  1887     03C7  2BC2               	goto	u625
  1888     03C8  0871               	movf	___lwdiv@divisor+1,w
  1889     03C9  0273               	subwf	___lwdiv@dividend+1,w
  1890     03CA  1D03               	skipz
  1891     03CB  2BCE               	goto	u635
  1892     03CC  0870               	movf	___lwdiv@divisor,w
  1893     03CD  0272               	subwf	___lwdiv@dividend,w
  1894     03CE                     u635:
  1895     03CE  1C03               	skipc
  1896     03CF  2BD1               	goto	u631
  1897     03D0  2BD2               	goto	u630
  1898     03D1                     u631:
  1899     03D1  2BD9               	goto	l1238
  1900     03D2                     u630:
  1901     03D2                     l1234:
  1902     03D2  0870               	movf	___lwdiv@divisor,w
  1903     03D3  02F2               	subwf	___lwdiv@dividend,f
  1904     03D4  0871               	movf	___lwdiv@divisor+1,w
  1905     03D5  1C03               	skipc
  1906     03D6  03F3               	decf	___lwdiv@dividend+1,f
  1907     03D7  02F3               	subwf	___lwdiv@dividend+1,f
  1908     03D8                     l1236:
  1909     03D8  1475               	bsf	___lwdiv@quotient,0
  1910     03D9                     l1238:
  1911     03D9  3001               	movlw	1
  1912     03DA                     u645:
  1913     03DA  1003               	clrc
  1914     03DB  0CF1               	rrf	___lwdiv@divisor+1,f
  1915     03DC  0CF0               	rrf	___lwdiv@divisor,f
  1916     03DD  3EFF               	addlw	-1
  1917     03DE  1D03               	skipz
  1918     03DF  2BDA               	goto	u645
  1919     03E0                     l1240:
  1920     03E0  3001               	movlw	1
  1921     03E1  02F7               	subwf	___lwdiv@counter,f
  1922     03E2  1D03               	btfss	3,2
  1923     03E3  2BE5               	goto	u651
  1924     03E4  2BE6               	goto	u650
  1925     03E5                     u651:
  1926     03E5  2BC1               	goto	l1232
  1927     03E6                     u650:
  1928     03E6                     l1242:
  1929     03E6  0876               	movf	___lwdiv@quotient+1,w
  1930     03E7  00F1               	movwf	?___lwdiv+1
  1931     03E8  0875               	movf	___lwdiv@quotient,w
  1932     03E9  00F0               	movwf	?___lwdiv
  1933     03EA                     l518:
  1934     03EA  0008               	return
  1935     03EB                     __end_of___lwdiv:
  1936                           
  1937                           	psect	text4
  1938     0247                     __ptext4:	
  1939 ;; *************** function _spiWrite *****************
  1940 ;; Defined at:
  1941 ;;		line 34 in file "configSPI.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  dat             1    wreg     unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  dat             1    0[COMMON] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0
  1958 ;;      Totals:         1       0       0       0       0
  1959 ;;Total ram usage:        1 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968     0247                     _spiWrite:	
  1969                           ;psect for function _spiWrite
  1970                           
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _spiWrite: [wreg]
  1974                           ;spiWrite@dat stored from wreg
  1975     0247  00F0               	movwf	spiWrite@dat
  1976     0248                     l1268:
  1977                           
  1978                           ;configSPI.c: 34: void spiWrite(char dat);configSPI.c: 35: {;configSPI.c: 36:     SSPBUF
      +                           = dat;
  1979     0248  0870               	movf	spiWrite@dat,w
  1980     0249  1283               	bcf	3,5	;RP0=0, select bank0
  1981     024A  1303               	bcf	3,6	;RP1=0, select bank0
  1982     024B  0093               	movwf	19	;volatile
  1983     024C                     l26:
  1984     024C  0008               	return
  1985     024D                     __end_of_spiWrite:
  1986                           
  1987                           	psect	text5
  1988     0254                     __ptext5:	
  1989 ;; *************** function _spiRead *****************
  1990 ;; Defined at:
  1991 ;;		line 47 in file "configSPI.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;		None
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      unsigned char 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2005 ;;      Params:         0       0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0
  2007 ;;      Temps:          0       0       0       0       0
  2008 ;;      Totals:         0       0       0       0       0
  2009 ;;Total ram usage:        0 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 1
  2012 ;; This function calls:
  2013 ;;		_spiReceiveWait
  2014 ;; This function is called by:
  2015 ;;		_main
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019     0254                     _spiRead:	
  2020                           ;psect for function _spiRead
  2021                           
  2022     0254                     l1270:	
  2023                           ;incstack = 0
  2024                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2025                           
  2026                           
  2027                           ;configSPI.c: 49:     spiReceiveWait();
  2028     0254  120A  118A  224D  120A  118A  	fcall	_spiReceiveWait
  2029     0259                     l1272:
  2030                           
  2031                           ;configSPI.c: 50:     return(SSPBUF);
  2032     0259  1283               	bcf	3,5	;RP0=0, select bank0
  2033     025A  1303               	bcf	3,6	;RP1=0, select bank0
  2034     025B  0813               	movf	19,w	;volatile
  2035     025C                     l34:
  2036     025C  0008               	return
  2037     025D                     __end_of_spiRead:
  2038                           
  2039                           	psect	text6
  2040     024D                     __ptext6:	
  2041 ;; *************** function _spiReceiveWait *****************
  2042 ;; Defined at:
  2043 ;;		line 29 in file "configSPI.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		None
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0
  2060 ;;      Totals:         0       0       0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_spiRead
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070     024D                     _spiReceiveWait:	
  2071                           ;psect for function _spiReceiveWait
  2072                           
  2073     024D                     l1184:	
  2074                           ;incstack = 0
  2075                           ; Regs used in _spiReceiveWait: []
  2076                           
  2077     024D                     l20:	
  2078                           ;configSPI.c: 31:     while ( !SSPSTATbits.BF );
  2079                           
  2080     024D  1683               	bsf	3,5	;RP0=1, select bank1
  2081     024E  1303               	bcf	3,6	;RP1=0, select bank1
  2082     024F  1C14               	btfss	20,0	;volatile
  2083     0250  2A52               	goto	u571
  2084     0251  2A53               	goto	u570
  2085     0252                     u571:
  2086     0252  2A4D               	goto	l20
  2087     0253                     u570:
  2088     0253                     l23:
  2089     0253  0008               	return
  2090     0254                     __end_of_spiReceiveWait:
  2091                           
  2092                           	psect	text7
  2093     02C9                     __ptext7:	
  2094 ;; *************** function _setup *****************
  2095 ;; Defined at:
  2096 ;;		line 146 in file "main_M.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 3
  2117 ;; This function calls:
  2118 ;;		_Lcd_Init_4bits
  2119 ;;		_setupINTOSC
  2120 ;;		_spiInit
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126     02C9                     _setup:	
  2127                           ;psect for function _setup
  2128                           
  2129     02C9                     l1306:	
  2130                           ;incstack = 0
  2131                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2132                           
  2133                           
  2134                           ;main_M.c: 148:     ANSEL = 0;
  2135     02C9  1683               	bsf	3,5	;RP0=1, select bank3
  2136     02CA  1703               	bsf	3,6	;RP1=1, select bank3
  2137     02CB  0188               	clrf	8	;volatile
  2138                           
  2139                           ;main_M.c: 149:     ANSELH = 0;
  2140     02CC  0189               	clrf	9	;volatile
  2141                           
  2142                           ;main_M.c: 151:     TRISB = 0;
  2143     02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2144     02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2145     02CF  0186               	clrf	6	;volatile
  2146                           
  2147                           ;main_M.c: 152:     TRISD = 0;
  2148     02D0  0188               	clrf	8	;volatile
  2149                           
  2150                           ;main_M.c: 154:     PORTB = 0;
  2151     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2152     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2153     02D3  0186               	clrf	6	;volatile
  2154                           
  2155                           ;main_M.c: 155:     PORTD = 0;
  2156     02D4  0188               	clrf	8	;volatile
  2157     02D5                     l1308:
  2158                           
  2159                           ;main_M.c: 157:     setupINTOSC(FOSC_4MHZ);
  2160     02D5  3006               	movlw	6
  2161     02D6  120A  118A  226A  120A  118A  	fcall	_setupINTOSC
  2162     02DB                     l1310:
  2163                           
  2164                           ;main_M.c: 158:     Lcd_Init_4bits();
  2165     02DB  120A  118A  248C  120A  118A  	fcall	_Lcd_Init_4bits
  2166     02E0                     l1312:
  2167                           
  2168                           ;main_M.c: 161:     TRISC1 = 0;
  2169     02E0  1683               	bsf	3,5	;RP0=1, select bank1
  2170     02E1  1303               	bcf	3,6	;RP1=0, select bank1
  2171     02E2  1087               	bcf	7,1	;volatile
  2172     02E3                     l1314:
  2173                           
  2174                           ;main_M.c: 162:     PORTCbits.RC1 = 1;
  2175     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2176     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2177     02E5  1487               	bsf	7,1	;volatile
  2178     02E6                     l1316:
  2179                           
  2180                           ;main_M.c: 163:     TRISC2 = 0;
  2181     02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2182     02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2183     02E8  1107               	bcf	7,2	;volatile
  2184     02E9                     l1318:
  2185                           
  2186                           ;main_M.c: 164:     PORTCbits.RC2 = 1;
  2187     02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2188     02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2189     02EB  1507               	bsf	7,2	;volatile
  2190     02EC                     l1320:
  2191                           
  2192                           ;main_M.c: 165:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
  2193     02EC  01F0               	clrf	spiInit@sDataSample
  2194     02ED  01F1               	clrf	spiInit@sClockIdle
  2195     02EE  01F2               	clrf	spiInit@sTransmitEdge
  2196     02EF  3020               	movlw	32
  2197     02F0  120A  118A  2277  120A  118A  	fcall	_spiInit
  2198     02F5                     l135:
  2199     02F5  0008               	return
  2200     02F6                     __end_of_setup:
  2201                           
  2202                           	psect	text8
  2203     0277                     __ptext8:	
  2204 ;; *************** function _spiInit *****************
  2205 ;; Defined at:
  2206 ;;		line 12 in file "configSPI.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  sType           1    wreg     enum E1292
  2209 ;;  sDataSample     1    0[COMMON] enum E1300
  2210 ;;  sClockIdle      1    1[COMMON] enum E1304
  2211 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  sType           1    3[COMMON] enum E1292
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         3       0       0       0       0
  2224 ;;      Locals:         1       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0
  2226 ;;      Totals:         4       0       0       0       0
  2227 ;;Total ram usage:        4 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_setup
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236     0277                     _spiInit:	
  2237                           ;psect for function _spiInit
  2238                           
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2242                           ;spiInit@sType stored from wreg
  2243     0277  00F3               	movwf	spiInit@sType
  2244     0278                     l1174:
  2245                           
  2246                           ;configSPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);configSPI.c: 13: {;configSPI.c: 14:     
      +                          TRISC5 = 0;
  2247     0278  1683               	bsf	3,5	;RP0=1, select bank1
  2248     0279  1303               	bcf	3,6	;RP1=0, select bank1
  2249     027A  1287               	bcf	7,5	;volatile
  2250                           
  2251                           ;configSPI.c: 15:     if(sType & 0b00000100)
  2252     027B  1D73               	btfss	spiInit@sType,2
  2253     027C  2A7E               	goto	u561
  2254     027D  2A7F               	goto	u560
  2255     027E                     u561:
  2256     027E  2A83               	goto	l1180
  2257     027F                     u560:
  2258     027F                     l1176:
  2259                           
  2260                           ;configSPI.c: 16:     {;configSPI.c: 17:         SSPSTAT = sTransmitEdge;
  2261     027F  0872               	movf	spiInit@sTransmitEdge,w
  2262     0280  0094               	movwf	20	;volatile
  2263     0281                     l1178:
  2264                           
  2265                           ;configSPI.c: 18:         TRISC3 = 1;
  2266     0281  1587               	bsf	7,3	;volatile
  2267                           
  2268                           ;configSPI.c: 19:     }
  2269     0282  2A87               	goto	l16
  2270     0283                     l1180:
  2271                           
  2272                           ;configSPI.c: 21:     {;configSPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2273     0283  0870               	movf	spiInit@sDataSample,w
  2274     0284  0472               	iorwf	spiInit@sTransmitEdge,w
  2275     0285  0094               	movwf	20	;volatile
  2276     0286                     l1182:
  2277                           
  2278                           ;configSPI.c: 23:         TRISC3 = 0;
  2279     0286  1187               	bcf	7,3	;volatile
  2280     0287                     l16:	
  2281                           ;configSPI.c: 24:     }
  2282                           
  2283                           
  2284                           ;configSPI.c: 26:     SSPCON = sType | sClockIdle;
  2285     0287  0873               	movf	spiInit@sType,w
  2286     0288  0471               	iorwf	spiInit@sClockIdle,w
  2287     0289  1283               	bcf	3,5	;RP0=0, select bank0
  2288     028A  1303               	bcf	3,6	;RP1=0, select bank0
  2289     028B  0094               	movwf	20	;volatile
  2290     028C                     l17:
  2291     028C  0008               	return
  2292     028D                     __end_of_spiInit:
  2293                           
  2294                           	psect	text9
  2295     026A                     __ptext9:	
  2296 ;; *************** function _setupINTOSC *****************
  2297 ;; Defined at:
  2298 ;;		line 11 in file "configINTOSC.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  F               1    wreg     enum E1292
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  F               1    1[COMMON] enum E1292
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       0       0       0       0
  2313 ;;      Locals:         1       0       0       0       0
  2314 ;;      Temps:          1       0       0       0       0
  2315 ;;      Totals:         2       0       0       0       0
  2316 ;;Total ram usage:        2 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_setup
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325     026A                     _setupINTOSC:	
  2326                           ;psect for function _setupINTOSC
  2327                           
  2328                           
  2329                           ;incstack = 0
  2330                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  2331                           ;setupINTOSC@F stored from wreg
  2332     026A  00F1               	movwf	setupINTOSC@F
  2333     026B                     l1186:
  2334                           
  2335                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  2336     026B  0871               	movf	setupINTOSC@F,w
  2337     026C  00F0               	movwf	??_setupINTOSC
  2338     026D  0EF0               	swapf	??_setupINTOSC,f
  2339     026E  1683               	bsf	3,5	;RP0=1, select bank1
  2340     026F  1303               	bcf	3,6	;RP1=0, select bank1
  2341     0270  080F               	movf	15,w	;volatile
  2342     0271  0670               	xorwf	??_setupINTOSC,w
  2343     0272  398F               	andlw	-113
  2344     0273  0670               	xorwf	??_setupINTOSC,w
  2345     0274  008F               	movwf	15	;volatile
  2346     0275                     l1188:
  2347                           
  2348                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  2349     0275  140F               	bsf	15,0	;volatile
  2350     0276                     l39:
  2351     0276  0008               	return
  2352     0277                     __end_of_setupINTOSC:
  2353                           
  2354                           	psect	text10
  2355     048C                     __ptext10:	
  2356 ;; *************** function _Lcd_Init_4bits *****************
  2357 ;; Defined at:
  2358 ;;		line 66 in file "configLCD_4bits.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0, pclath, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2372 ;;      Params:         0       0       0       0       0
  2373 ;;      Locals:         0       0       0       0       0
  2374 ;;      Temps:          2       0       0       0       0
  2375 ;;      Totals:         2       0       0       0       0
  2376 ;;Total ram usage:        2 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 2
  2379 ;; This function calls:
  2380 ;;		_Lcd_Cmd_4bits
  2381 ;;		_Lcd_Port_4bits
  2382 ;; This function is called by:
  2383 ;;		_setup
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387     048C                     _Lcd_Init_4bits:	
  2388                           ;psect for function _Lcd_Init_4bits
  2389                           
  2390     048C                     l1190:	
  2391                           ;incstack = 0
  2392                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  2393                           
  2394                           
  2395                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  2396     048C  3000               	movlw	0
  2397     048D  120A  118A  22A7  120A  118A  	fcall	_Lcd_Port_4bits
  2398     0492                     l1192:
  2399                           
  2400                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2401     0492  3034               	movlw	52
  2402     0493  00F5               	movwf	??_Lcd_Init_4bits+1
  2403     0494  30F1               	movlw	241
  2404     0495  00F4               	movwf	??_Lcd_Init_4bits
  2405     0496                     u1077:
  2406     0496  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2407     0497  2C96               	goto	u1077
  2408     0498  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2409     0499  2C96               	goto	u1077
  2410     049A  2C9B               	nop2
  2411     049B                     l1194:
  2412                           
  2413                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  2414     049B  3003               	movlw	3
  2415     049C  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  2416                           
  2417                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2418     04A1  300D               	movlw	13
  2419     04A2  00F5               	movwf	??_Lcd_Init_4bits+1
  2420     04A3  30FB               	movlw	251
  2421     04A4  00F4               	movwf	??_Lcd_Init_4bits
  2422     04A5                     u1087:
  2423     04A5  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2424     04A6  2CA5               	goto	u1087
  2425     04A7  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2426     04A8  2CA5               	goto	u1087
  2427     04A9  2CAA               	nop2
  2428     04AA                     l1196:
  2429                           
  2430                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  2431     04AA  3003               	movlw	3
  2432     04AB  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  2433     04B0                     l1198:
  2434                           
  2435                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2436     04B0  301D               	movlw	29
  2437     04B1  00F5               	movwf	??_Lcd_Init_4bits+1
  2438     04B2  3091               	movlw	145
  2439     04B3  00F4               	movwf	??_Lcd_Init_4bits
  2440     04B4                     u1097:
  2441     04B4  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2442     04B5  2CB4               	goto	u1097
  2443     04B6  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2444     04B7  2CB4               	goto	u1097
  2445                           
  2446                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  2447     04B8  3003               	movlw	3
  2448     04B9  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  2449                           
  2450                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  2451     04BE  3002               	movlw	2
  2452     04BF  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  2453                           
  2454                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  2455     04C4  3002               	movlw	2
  2456     04C5  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  2457                           
  2458                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  2459     04CA  3008               	movlw	8
  2460     04CB  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  2461                           
  2462                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  2463     04D0  3000               	movlw	0
  2464     04D1  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  2465                           
  2466                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  2467     04D6  300C               	movlw	12
  2468     04D7  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  2469                           
  2470                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  2471     04DC  3000               	movlw	0
  2472     04DD  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  2473                           
  2474                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  2475     04E2  3006               	movlw	6
  2476     04E3  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  2477     04E8                     l69:
  2478     04E8  0008               	return
  2479     04E9                     __end_of_Lcd_Init_4bits:
  2480                           
  2481                           	psect	text11
  2482     0431                     __ptext11:	
  2483 ;; *************** function ___awmod *****************
  2484 ;; Defined at:
  2485 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  divisor         2    9[COMMON] int 
  2488 ;;  dividend        2   11[COMMON] int 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  sign            1    1[BANK0 ] unsigned char 
  2491 ;;  counter         1    0[BANK0 ] unsigned char 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  2    9[COMMON] int 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2501 ;;      Params:         4       0       0       0       0
  2502 ;;      Locals:         0       2       0       0       0
  2503 ;;      Temps:          1       0       0       0       0
  2504 ;;      Totals:         5       2       0       0       0
  2505 ;;Total ram usage:        7 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514     0431                     ___awmod:	
  2515                           ;psect for function ___awmod
  2516                           
  2517     0431                     l1418:	
  2518                           ;incstack = 0
  2519                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2520                           
  2521     0431  1283               	bcf	3,5	;RP0=0, select bank0
  2522     0432  1303               	bcf	3,6	;RP1=0, select bank0
  2523     0433  01A1               	clrf	___awmod@sign
  2524     0434                     l1420:
  2525     0434  1FFC               	btfss	___awmod@dividend+1,7
  2526     0435  2C37               	goto	u941
  2527     0436  2C38               	goto	u940
  2528     0437                     u941:
  2529     0437  2C3F               	goto	l1426
  2530     0438                     u940:
  2531     0438                     l1422:
  2532     0438  09FB               	comf	___awmod@dividend,f
  2533     0439  09FC               	comf	___awmod@dividend+1,f
  2534     043A  0AFB               	incf	___awmod@dividend,f
  2535     043B  1903               	skipnz
  2536     043C  0AFC               	incf	___awmod@dividend+1,f
  2537     043D                     l1424:
  2538     043D  01A1               	clrf	___awmod@sign
  2539     043E  0AA1               	incf	___awmod@sign,f
  2540     043F                     l1426:
  2541     043F  1FFA               	btfss	___awmod@divisor+1,7
  2542     0440  2C42               	goto	u951
  2543     0441  2C43               	goto	u950
  2544     0442                     u951:
  2545     0442  2C48               	goto	l1430
  2546     0443                     u950:
  2547     0443                     l1428:
  2548     0443  09F9               	comf	___awmod@divisor,f
  2549     0444  09FA               	comf	___awmod@divisor+1,f
  2550     0445  0AF9               	incf	___awmod@divisor,f
  2551     0446  1903               	skipnz
  2552     0447  0AFA               	incf	___awmod@divisor+1,f
  2553     0448                     l1430:
  2554     0448  0879               	movf	___awmod@divisor,w
  2555     0449  047A               	iorwf	___awmod@divisor+1,w
  2556     044A  1903               	btfsc	3,2
  2557     044B  2C4D               	goto	u961
  2558     044C  2C4E               	goto	u960
  2559     044D                     u961:
  2560     044D  2C7D               	goto	l1448
  2561     044E                     u960:
  2562     044E                     l1432:
  2563     044E  01A0               	clrf	___awmod@counter
  2564     044F  0AA0               	incf	___awmod@counter,f
  2565     0450  2C5C               	goto	l1438
  2566     0451                     l1434:
  2567     0451  3001               	movlw	1
  2568     0452                     u975:
  2569     0452  1003               	clrc
  2570     0453  0DF9               	rlf	___awmod@divisor,f
  2571     0454  0DFA               	rlf	___awmod@divisor+1,f
  2572     0455  3EFF               	addlw	-1
  2573     0456  1D03               	skipz
  2574     0457  2C52               	goto	u975
  2575     0458                     l1436:
  2576     0458  3001               	movlw	1
  2577     0459  00FD               	movwf	??___awmod
  2578     045A  087D               	movf	??___awmod,w
  2579     045B  07A0               	addwf	___awmod@counter,f
  2580     045C                     l1438:
  2581     045C  1FFA               	btfss	___awmod@divisor+1,7
  2582     045D  2C5F               	goto	u981
  2583     045E  2C60               	goto	u980
  2584     045F                     u981:
  2585     045F  2C51               	goto	l1434
  2586     0460                     u980:
  2587     0460                     l1440:
  2588     0460  087A               	movf	___awmod@divisor+1,w
  2589     0461  027C               	subwf	___awmod@dividend+1,w
  2590     0462  1D03               	skipz
  2591     0463  2C66               	goto	u995
  2592     0464  0879               	movf	___awmod@divisor,w
  2593     0465  027B               	subwf	___awmod@dividend,w
  2594     0466                     u995:
  2595     0466  1C03               	skipc
  2596     0467  2C69               	goto	u991
  2597     0468  2C6A               	goto	u990
  2598     0469                     u991:
  2599     0469  2C70               	goto	l1444
  2600     046A                     u990:
  2601     046A                     l1442:
  2602     046A  0879               	movf	___awmod@divisor,w
  2603     046B  02FB               	subwf	___awmod@dividend,f
  2604     046C  087A               	movf	___awmod@divisor+1,w
  2605     046D  1C03               	skipc
  2606     046E  03FC               	decf	___awmod@dividend+1,f
  2607     046F  02FC               	subwf	___awmod@dividend+1,f
  2608     0470                     l1444:
  2609     0470  3001               	movlw	1
  2610     0471                     u1005:
  2611     0471  1003               	clrc
  2612     0472  0CFA               	rrf	___awmod@divisor+1,f
  2613     0473  0CF9               	rrf	___awmod@divisor,f
  2614     0474  3EFF               	addlw	-1
  2615     0475  1D03               	skipz
  2616     0476  2C71               	goto	u1005
  2617     0477                     l1446:
  2618     0477  3001               	movlw	1
  2619     0478  02A0               	subwf	___awmod@counter,f
  2620     0479  1D03               	btfss	3,2
  2621     047A  2C7C               	goto	u1011
  2622     047B  2C7D               	goto	u1010
  2623     047C                     u1011:
  2624     047C  2C60               	goto	l1440
  2625     047D                     u1010:
  2626     047D                     l1448:
  2627     047D  0821               	movf	___awmod@sign,w
  2628     047E  1903               	btfsc	3,2
  2629     047F  2C81               	goto	u1021
  2630     0480  2C82               	goto	u1020
  2631     0481                     u1021:
  2632     0481  2C87               	goto	l1452
  2633     0482                     u1020:
  2634     0482                     l1450:
  2635     0482  09FB               	comf	___awmod@dividend,f
  2636     0483  09FC               	comf	___awmod@dividend+1,f
  2637     0484  0AFB               	incf	___awmod@dividend,f
  2638     0485  1903               	skipnz
  2639     0486  0AFC               	incf	___awmod@dividend+1,f
  2640     0487                     l1452:
  2641     0487  087C               	movf	___awmod@dividend+1,w
  2642     0488  00FA               	movwf	?___awmod+1
  2643     0489  087B               	movf	___awmod@dividend,w
  2644     048A  00F9               	movwf	?___awmod
  2645     048B                     l412:
  2646     048B  0008               	return
  2647     048C                     __end_of___awmod:
  2648                           
  2649                           	psect	text12
  2650     04E9                     __ptext12:	
  2651 ;; *************** function ___awdiv *****************
  2652 ;; Defined at:
  2653 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  divisor         2    0[COMMON] int 
  2656 ;;  dividend        2    2[COMMON] int 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  quotient        2    7[COMMON] int 
  2659 ;;  sign            1    6[COMMON] unsigned char 
  2660 ;;  counter         1    5[COMMON] unsigned char 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  2    0[COMMON] int 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2, status,0
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         4       0       0       0       0
  2671 ;;      Locals:         4       0       0       0       0
  2672 ;;      Temps:          1       0       0       0       0
  2673 ;;      Totals:         9       0       0       0       0
  2674 ;;Total ram usage:        9 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683     04E9                     ___awdiv:	
  2684                           ;psect for function ___awdiv
  2685                           
  2686     04E9                     l1374:	
  2687                           ;incstack = 0
  2688                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2689                           
  2690     04E9  01F6               	clrf	___awdiv@sign
  2691     04EA                     l1376:
  2692     04EA  1FF1               	btfss	___awdiv@divisor+1,7
  2693     04EB  2CED               	goto	u841
  2694     04EC  2CEE               	goto	u840
  2695     04ED                     u841:
  2696     04ED  2CF5               	goto	l1382
  2697     04EE                     u840:
  2698     04EE                     l1378:
  2699     04EE  09F0               	comf	___awdiv@divisor,f
  2700     04EF  09F1               	comf	___awdiv@divisor+1,f
  2701     04F0  0AF0               	incf	___awdiv@divisor,f
  2702     04F1  1903               	skipnz
  2703     04F2  0AF1               	incf	___awdiv@divisor+1,f
  2704     04F3                     l1380:
  2705     04F3  01F6               	clrf	___awdiv@sign
  2706     04F4  0AF6               	incf	___awdiv@sign,f
  2707     04F5                     l1382:
  2708     04F5  1FF3               	btfss	___awdiv@dividend+1,7
  2709     04F6  2CF8               	goto	u851
  2710     04F7  2CF9               	goto	u850
  2711     04F8                     u851:
  2712     04F8  2D02               	goto	l1388
  2713     04F9                     u850:
  2714     04F9                     l1384:
  2715     04F9  09F2               	comf	___awdiv@dividend,f
  2716     04FA  09F3               	comf	___awdiv@dividend+1,f
  2717     04FB  0AF2               	incf	___awdiv@dividend,f
  2718     04FC  1903               	skipnz
  2719     04FD  0AF3               	incf	___awdiv@dividend+1,f
  2720     04FE                     l1386:
  2721     04FE  3001               	movlw	1
  2722     04FF  00F4               	movwf	??___awdiv
  2723     0500  0874               	movf	??___awdiv,w
  2724     0501  06F6               	xorwf	___awdiv@sign,f
  2725     0502                     l1388:
  2726     0502  01F7               	clrf	___awdiv@quotient
  2727     0503  01F8               	clrf	___awdiv@quotient+1
  2728     0504                     l1390:
  2729     0504  0870               	movf	___awdiv@divisor,w
  2730     0505  0471               	iorwf	___awdiv@divisor+1,w
  2731     0506  1903               	btfsc	3,2
  2732     0507  2D09               	goto	u861
  2733     0508  2D0A               	goto	u860
  2734     0509                     u861:
  2735     0509  2D41               	goto	l1410
  2736     050A                     u860:
  2737     050A                     l1392:
  2738     050A  01F5               	clrf	___awdiv@counter
  2739     050B  0AF5               	incf	___awdiv@counter,f
  2740     050C  2D18               	goto	l1398
  2741     050D                     l1394:
  2742     050D  3001               	movlw	1
  2743     050E                     u875:
  2744     050E  1003               	clrc
  2745     050F  0DF0               	rlf	___awdiv@divisor,f
  2746     0510  0DF1               	rlf	___awdiv@divisor+1,f
  2747     0511  3EFF               	addlw	-1
  2748     0512  1D03               	skipz
  2749     0513  2D0E               	goto	u875
  2750     0514                     l1396:
  2751     0514  3001               	movlw	1
  2752     0515  00F4               	movwf	??___awdiv
  2753     0516  0874               	movf	??___awdiv,w
  2754     0517  07F5               	addwf	___awdiv@counter,f
  2755     0518                     l1398:
  2756     0518  1FF1               	btfss	___awdiv@divisor+1,7
  2757     0519  2D1B               	goto	u881
  2758     051A  2D1C               	goto	u880
  2759     051B                     u881:
  2760     051B  2D0D               	goto	l1394
  2761     051C                     u880:
  2762     051C                     l1400:
  2763     051C  3001               	movlw	1
  2764     051D                     u895:
  2765     051D  1003               	clrc
  2766     051E  0DF7               	rlf	___awdiv@quotient,f
  2767     051F  0DF8               	rlf	___awdiv@quotient+1,f
  2768     0520  3EFF               	addlw	-1
  2769     0521  1D03               	skipz
  2770     0522  2D1D               	goto	u895
  2771     0523  0871               	movf	___awdiv@divisor+1,w
  2772     0524  0273               	subwf	___awdiv@dividend+1,w
  2773     0525  1D03               	skipz
  2774     0526  2D29               	goto	u905
  2775     0527  0870               	movf	___awdiv@divisor,w
  2776     0528  0272               	subwf	___awdiv@dividend,w
  2777     0529                     u905:
  2778     0529  1C03               	skipc
  2779     052A  2D2C               	goto	u901
  2780     052B  2D2D               	goto	u900
  2781     052C                     u901:
  2782     052C  2D34               	goto	l1406
  2783     052D                     u900:
  2784     052D                     l1402:
  2785     052D  0870               	movf	___awdiv@divisor,w
  2786     052E  02F2               	subwf	___awdiv@dividend,f
  2787     052F  0871               	movf	___awdiv@divisor+1,w
  2788     0530  1C03               	skipc
  2789     0531  03F3               	decf	___awdiv@dividend+1,f
  2790     0532  02F3               	subwf	___awdiv@dividend+1,f
  2791     0533                     l1404:
  2792     0533  1477               	bsf	___awdiv@quotient,0
  2793     0534                     l1406:
  2794     0534  3001               	movlw	1
  2795     0535                     u915:
  2796     0535  1003               	clrc
  2797     0536  0CF1               	rrf	___awdiv@divisor+1,f
  2798     0537  0CF0               	rrf	___awdiv@divisor,f
  2799     0538  3EFF               	addlw	-1
  2800     0539  1D03               	skipz
  2801     053A  2D35               	goto	u915
  2802     053B                     l1408:
  2803     053B  3001               	movlw	1
  2804     053C  02F5               	subwf	___awdiv@counter,f
  2805     053D  1D03               	btfss	3,2
  2806     053E  2D40               	goto	u921
  2807     053F  2D41               	goto	u920
  2808     0540                     u921:
  2809     0540  2D1C               	goto	l1400
  2810     0541                     u920:
  2811     0541                     l1410:
  2812     0541  0876               	movf	___awdiv@sign,w
  2813     0542  1903               	btfsc	3,2
  2814     0543  2D45               	goto	u931
  2815     0544  2D46               	goto	u930
  2816     0545                     u931:
  2817     0545  2D4B               	goto	l1414
  2818     0546                     u930:
  2819     0546                     l1412:
  2820     0546  09F7               	comf	___awdiv@quotient,f
  2821     0547  09F8               	comf	___awdiv@quotient+1,f
  2822     0548  0AF7               	incf	___awdiv@quotient,f
  2823     0549  1903               	skipnz
  2824     054A  0AF8               	incf	___awdiv@quotient+1,f
  2825     054B                     l1414:
  2826     054B  0878               	movf	___awdiv@quotient+1,w
  2827     054C  00F1               	movwf	?___awdiv+1
  2828     054D  0877               	movf	___awdiv@quotient,w
  2829     054E  00F0               	movwf	?___awdiv
  2830     054F                     l399:
  2831     054F  0008               	return
  2832     0550                     __end_of___awdiv:
  2833                           
  2834                           	psect	text13
  2835     0365                     __ptext13:	
  2836 ;; *************** function _Lcd_Write_String_4bits *****************
  2837 ;; Defined at:
  2838 ;;		line 99 in file "configLCD_4bits.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  a               2    5[COMMON] PTR unsigned char 
  2841 ;;		 -> main@ADC2(9), main@ADC1(9), STR_3(4), STR_2(4), 
  2842 ;;		 -> STR_1(4), 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  i               2   10[COMMON] int 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         2       0       0       0       0
  2855 ;;      Locals:         2       0       0       0       0
  2856 ;;      Temps:          3       0       0       0       0
  2857 ;;      Totals:         7       0       0       0       0
  2858 ;;Total ram usage:        7 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 2
  2861 ;; This function calls:
  2862 ;;		_Lcd_Write_Char_4bits
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868     0365                     _Lcd_Write_String_4bits:	
  2869                           ;psect for function _Lcd_Write_String_4bits
  2870                           
  2871     0365                     l1298:	
  2872                           ;incstack = 0
  2873                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2874                           
  2875                           
  2876                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  2877     0365  01FA               	clrf	Lcd_Write_String_4bits@i
  2878     0366  01FB               	clrf	Lcd_Write_String_4bits@i+1
  2879     0367  2B8A               	goto	l1304
  2880     0368                     l1300:
  2881                           
  2882                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  2883     0368  087A               	movf	Lcd_Write_String_4bits@i,w
  2884     0369  0775               	addwf	Lcd_Write_String_4bits@a,w
  2885     036A  00F8               	movwf	??_Lcd_Write_String_4bits+1
  2886     036B  0876               	movf	Lcd_Write_String_4bits@a+1,w
  2887     036C  00F7               	movwf	??_Lcd_Write_String_4bits
  2888     036D  1803               	skipnc
  2889     036E  0AF7               	incf	??_Lcd_Write_String_4bits,f
  2890     036F  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  2891     0370  2B72               	goto	u760
  2892     0371  03F7               	decf	??_Lcd_Write_String_4bits,f
  2893     0372                     u760:
  2894     0372  0877               	movf	??_Lcd_Write_String_4bits,w
  2895     0373  00F9               	movwf	??_Lcd_Write_String_4bits+2
  2896     0374  0879               	movf	??_Lcd_Write_String_4bits+2,w
  2897     0375  1283               	bcf	3,5	;RP0=0, select bank0
  2898     0376  1303               	bcf	3,6	;RP1=0, select bank0
  2899     0377  00FF               	movwf	btemp+1
  2900     0378  0878               	movf	??_Lcd_Write_String_4bits+1,w
  2901     0379  0084               	movwf	4
  2902     037A  120A  118A  2003  120A  118A  	fcall	stringtab
  2903     037F  120A  118A  22F6  120A  118A  	fcall	_Lcd_Write_Char_4bits
  2904     0384                     l1302:
  2905     0384  3001               	movlw	1
  2906     0385  07FA               	addwf	Lcd_Write_String_4bits@i,f
  2907     0386  1803               	skipnc
  2908     0387  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
  2909     0388  3000               	movlw	0
  2910     0389  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
  2911     038A                     l1304:
  2912     038A  087A               	movf	Lcd_Write_String_4bits@i,w
  2913     038B  0775               	addwf	Lcd_Write_String_4bits@a,w
  2914     038C  00F8               	movwf	??_Lcd_Write_String_4bits+1
  2915     038D  0876               	movf	Lcd_Write_String_4bits@a+1,w
  2916     038E  00F7               	movwf	??_Lcd_Write_String_4bits
  2917     038F  1803               	skipnc
  2918     0390  0AF7               	incf	??_Lcd_Write_String_4bits,f
  2919     0391  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  2920     0392  2B94               	goto	u770
  2921     0393  03F7               	decf	??_Lcd_Write_String_4bits,f
  2922     0394                     u770:
  2923     0394  0877               	movf	??_Lcd_Write_String_4bits,w
  2924     0395  00F9               	movwf	??_Lcd_Write_String_4bits+2
  2925     0396  0879               	movf	??_Lcd_Write_String_4bits+2,w
  2926     0397  1283               	bcf	3,5	;RP0=0, select bank0
  2927     0398  1303               	bcf	3,6	;RP1=0, select bank0
  2928     0399  00FF               	movwf	btemp+1
  2929     039A  0878               	movf	??_Lcd_Write_String_4bits+1,w
  2930     039B  0084               	movwf	4
  2931     039C  120A  118A  2003  120A  118A  	fcall	stringtab
  2932     03A1  3A00               	xorlw	0
  2933     03A2  1D03               	skipz
  2934     03A3  2BA5               	goto	u781
  2935     03A4  2BA6               	goto	u780
  2936     03A5                     u781:
  2937     03A5  2B68               	goto	l1300
  2938     03A6                     u780:
  2939     03A6                     l78:
  2940     03A6  0008               	return
  2941     03A7                     __end_of_Lcd_Write_String_4bits:
  2942                           
  2943                           	psect	text14
  2944     02F6                     __ptext14:	
  2945 ;; *************** function _Lcd_Write_Char_4bits *****************
  2946 ;; Defined at:
  2947 ;;		line 84 in file "configLCD_4bits.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  a               1    wreg     unsigned char 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  a               1    4[COMMON] unsigned char 
  2952 ;;  y               1    3[COMMON] unsigned char 
  2953 ;;  temp            1    2[COMMON] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         3       0       0       0       0
  2965 ;;      Temps:          1       0       0       0       0
  2966 ;;      Totals:         4       0       0       0       0
  2967 ;;Total ram usage:        4 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 1
  2970 ;; This function calls:
  2971 ;;		_Lcd_Port_4bits
  2972 ;; This function is called by:
  2973 ;;		_Lcd_Write_String_4bits
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977     02F6                     _Lcd_Write_Char_4bits:	
  2978                           ;psect for function _Lcd_Write_Char_4bits
  2979                           
  2980                           
  2981                           ;incstack = 0
  2982                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  2983                           ;Lcd_Write_Char_4bits@a stored from wreg
  2984     02F6  00F4               	movwf	Lcd_Write_Char_4bits@a
  2985     02F7                     l1200:
  2986                           
  2987                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  2988     02F7  0874               	movf	Lcd_Write_Char_4bits@a,w
  2989     02F8  390F               	andlw	15
  2990     02F9  00F2               	movwf	Lcd_Write_Char_4bits@temp
  2991                           
  2992                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  2993     02FA  0874               	movf	Lcd_Write_Char_4bits@a,w
  2994     02FB  39F0               	andlw	240
  2995     02FC  00F3               	movwf	Lcd_Write_Char_4bits@y
  2996     02FD                     l1202:
  2997                           
  2998                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  2999     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  3000     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  3001     02FF  1508               	bsf	8,2	;volatile
  3002     0300                     l1204:
  3003                           
  3004                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  3005     0300  0873               	movf	Lcd_Write_Char_4bits@y,w
  3006     0301  00F1               	movwf	??_Lcd_Write_Char_4bits
  3007     0302  3004               	movlw	4
  3008     0303                     u585:
  3009     0303  1003               	clrc
  3010     0304  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
  3011     0305  3EFF               	addlw	-1
  3012     0306  1D03               	skipz
  3013     0307  2B03               	goto	u585
  3014     0308  0871               	movf	??_Lcd_Write_Char_4bits,w
  3015     0309  120A  118A  22A7  120A  118A  	fcall	_Lcd_Port_4bits
  3016     030E                     l1206:
  3017                           
  3018                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  3019     030E  1283               	bcf	3,5	;RP0=0, select bank0
  3020     030F  1303               	bcf	3,6	;RP1=0, select bank0
  3021     0310  1588               	bsf	8,3	;volatile
  3022     0311                     l1208:
  3023                           
  3024                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3025     0311  301A               	movlw	26
  3026     0312  00F1               	movwf	??_Lcd_Write_Char_4bits
  3027     0313                     u1107:
  3028     0313  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  3029     0314  2B13               	goto	u1107
  3030     0315  0000               	nop
  3031     0316                     l1210:
  3032                           
  3033                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  3034     0316  1283               	bcf	3,5	;RP0=0, select bank0
  3035     0317  1303               	bcf	3,6	;RP1=0, select bank0
  3036     0318  1188               	bcf	8,3	;volatile
  3037     0319                     l1212:
  3038                           
  3039                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  3040     0319  0872               	movf	Lcd_Write_Char_4bits@temp,w
  3041     031A  120A  118A  22A7  120A  118A  	fcall	_Lcd_Port_4bits
  3042     031F                     l1214:
  3043                           
  3044                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  3045     031F  1283               	bcf	3,5	;RP0=0, select bank0
  3046     0320  1303               	bcf	3,6	;RP1=0, select bank0
  3047     0321  1588               	bsf	8,3	;volatile
  3048     0322                     l1216:
  3049                           
  3050                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3051     0322  301A               	movlw	26
  3052     0323  00F1               	movwf	??_Lcd_Write_Char_4bits
  3053     0324                     u1117:
  3054     0324  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  3055     0325  2B24               	goto	u1117
  3056     0326  0000               	nop
  3057     0327                     l1218:
  3058                           
  3059                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  3060     0327  1283               	bcf	3,5	;RP0=0, select bank0
  3061     0328  1303               	bcf	3,6	;RP1=0, select bank0
  3062     0329  1188               	bcf	8,3	;volatile
  3063     032A                     l72:
  3064     032A  0008               	return
  3065     032B                     __end_of_Lcd_Write_Char_4bits:
  3066                           
  3067                           	psect	text15
  3068     03EB                     __ptext15:	
  3069 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  3070 ;; Defined at:
  3071 ;;		line 49 in file "configLCD_4bits.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  a               1    wreg     unsigned char 
  3074 ;;  b               1    4[COMMON] unsigned char 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  a               1    6[COMMON] unsigned char 
  3077 ;;  temp            1    9[COMMON] unsigned char 
  3078 ;;  y               1    8[COMMON] unsigned char 
  3079 ;;  z               1    7[COMMON] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0, pclath, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3089 ;;      Params:         1       0       0       0       0
  3090 ;;      Locals:         4       0       0       0       0
  3091 ;;      Temps:          1       0       0       0       0
  3092 ;;      Totals:         6       0       0       0       0
  3093 ;;Total ram usage:        6 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; Hardware stack levels required when called: 2
  3096 ;; This function calls:
  3097 ;;		_Lcd_Cmd_4bits
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103     03EB                     _Lcd_Set_Cursor_4bits:	
  3104                           ;psect for function _Lcd_Set_Cursor_4bits
  3105                           
  3106                           
  3107                           ;incstack = 0
  3108                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  3109                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  3110     03EB  00F6               	movwf	Lcd_Set_Cursor_4bits@a
  3111     03EC                     l1278:
  3112                           
  3113                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  3114     03EC  0376               	decf	Lcd_Set_Cursor_4bits@a,w
  3115     03ED  1D03               	btfss	3,2
  3116     03EE  2BF0               	goto	u721
  3117     03EF  2BF1               	goto	u720
  3118     03F0                     u721:
  3119     03F0  2C0E               	goto	l1288
  3120     03F1                     u720:
  3121     03F1                     l1280:
  3122                           
  3123                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  3124     03F1  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  3125     03F2  3E7F               	addlw	127
  3126     03F3  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  3127                           
  3128                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  3129     03F4  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3130     03F5  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  3131     03F6  3004               	movlw	4
  3132     03F7                     u735:
  3133     03F7  1003               	clrc
  3134     03F8  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  3135     03F9  3EFF               	addlw	-1
  3136     03FA  1D03               	skipz
  3137     03FB  2BF7               	goto	u735
  3138     03FC  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  3139     03FD  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  3140     03FE                     l1282:
  3141                           
  3142                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  3143     03FE  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3144     03FF  390F               	andlw	15
  3145     0400  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  3146     0401                     l1284:
  3147                           
  3148                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  3149     0401  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  3150     0402  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  3151     0407                     l1286:
  3152                           
  3153                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  3154     0407  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  3155     0408  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  3156                           
  3157                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  3158     040D  2C30               	goto	l66
  3159     040E                     l1288:
  3160     040E  3002               	movlw	2
  3161     040F  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
  3162     0410  1D03               	btfss	3,2
  3163     0411  2C13               	goto	u741
  3164     0412  2C14               	goto	u740
  3165     0413                     u741:
  3166     0413  2C30               	goto	l66
  3167     0414                     u740:
  3168     0414                     l1290:
  3169                           
  3170                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  3171     0414  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  3172     0415  3EBF               	addlw	191
  3173     0416  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  3174                           
  3175                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  3176     0417  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3177     0418  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  3178     0419  3004               	movlw	4
  3179     041A                     u755:
  3180     041A  1003               	clrc
  3181     041B  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  3182     041C  3EFF               	addlw	-1
  3183     041D  1D03               	skipz
  3184     041E  2C1A               	goto	u755
  3185     041F  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  3186     0420  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  3187     0421                     l1292:
  3188                           
  3189                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  3190     0421  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3191     0422  390F               	andlw	15
  3192     0423  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  3193     0424                     l1294:
  3194                           
  3195                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  3196     0424  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  3197     0425  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  3198     042A                     l1296:
  3199                           
  3200                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  3201     042A  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  3202     042B  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  3203     0430                     l66:
  3204     0430  0008               	return
  3205     0431                     __end_of_Lcd_Set_Cursor_4bits:
  3206                           
  3207                           	psect	text16
  3208     025D                     __ptext16:	
  3209 ;; *************** function _Lcd_Clear_4bits *****************
  3210 ;; Defined at:
  3211 ;;		line 44 in file "configLCD_4bits.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 2
  3232 ;; This function calls:
  3233 ;;		_Lcd_Cmd_4bits
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239     025D                     _Lcd_Clear_4bits:	
  3240                           ;psect for function _Lcd_Clear_4bits
  3241                           
  3242     025D                     l1276:	
  3243                           ;incstack = 0
  3244                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  3245                           
  3246                           
  3247                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  3248     025D  3000               	movlw	0
  3249     025E  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  3250                           
  3251                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  3252     0263  3001               	movlw	1
  3253     0264  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd_4bits
  3254     0269                     l60:
  3255     0269  0008               	return
  3256     026A                     __end_of_Lcd_Clear_4bits:
  3257                           
  3258                           	psect	text17
  3259     028D                     __ptext17:	
  3260 ;; *************** function _Lcd_Cmd_4bits *****************
  3261 ;; Defined at:
  3262 ;;		line 36 in file "configLCD_4bits.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  a               1    wreg     unsigned char 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  a               1    3[COMMON] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, pclath, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3276 ;;      Params:         0       0       0       0       0
  3277 ;;      Locals:         1       0       0       0       0
  3278 ;;      Temps:          2       0       0       0       0
  3279 ;;      Totals:         3       0       0       0       0
  3280 ;;Total ram usage:        3 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 1
  3283 ;; This function calls:
  3284 ;;		_Lcd_Port_4bits
  3285 ;; This function is called by:
  3286 ;;		_Lcd_Clear_4bits
  3287 ;;		_Lcd_Set_Cursor_4bits
  3288 ;;		_Lcd_Init_4bits
  3289 ;;		_Lcd_Shift_Right_4bits
  3290 ;;		_Lcd_Shift_Left_4bits
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294     028D                     _Lcd_Cmd_4bits:	
  3295                           ;psect for function _Lcd_Cmd_4bits
  3296                           
  3297                           
  3298                           ;incstack = 0
  3299                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  3300                           ;Lcd_Cmd_4bits@a stored from wreg
  3301     028D  00F3               	movwf	Lcd_Cmd_4bits@a
  3302     028E                     l1164:
  3303                           
  3304                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  3305     028E  1283               	bcf	3,5	;RP0=0, select bank0
  3306     028F  1303               	bcf	3,6	;RP1=0, select bank0
  3307     0290  1108               	bcf	8,2	;volatile
  3308     0291                     l1166:
  3309                           
  3310                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  3311     0291  0873               	movf	Lcd_Cmd_4bits@a,w
  3312     0292  120A  118A  22A7  120A  118A  	fcall	_Lcd_Port_4bits
  3313     0297                     l1168:
  3314                           
  3315                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  3316     0297  1283               	bcf	3,5	;RP0=0, select bank0
  3317     0298  1303               	bcf	3,6	;RP1=0, select bank0
  3318     0299  1588               	bsf	8,3	;volatile
  3319     029A                     l1170:
  3320                           
  3321                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3322     029A  300B               	movlw	11
  3323     029B  00F2               	movwf	??_Lcd_Cmd_4bits+1
  3324     029C  3062               	movlw	98
  3325     029D  00F1               	movwf	??_Lcd_Cmd_4bits
  3326     029E                     u1127:
  3327     029E  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
  3328     029F  2A9E               	goto	u1127
  3329     02A0  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
  3330     02A1  2A9E               	goto	u1127
  3331     02A2  0000               	nop
  3332     02A3                     l1172:
  3333                           
  3334                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  3335     02A3  1283               	bcf	3,5	;RP0=0, select bank0
  3336     02A4  1303               	bcf	3,6	;RP1=0, select bank0
  3337     02A5  1188               	bcf	8,3	;volatile
  3338     02A6                     l57:
  3339     02A6  0008               	return
  3340     02A7                     __end_of_Lcd_Cmd_4bits:
  3341                           
  3342                           	psect	text18
  3343     02A7                     __ptext18:	
  3344 ;; *************** function _Lcd_Port_4bits *****************
  3345 ;; Defined at:
  3346 ;;		line 14 in file "configLCD_4bits.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  a               1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  a               1    0[COMMON] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3360 ;;      Params:         0       0       0       0       0
  3361 ;;      Locals:         1       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0
  3363 ;;      Totals:         1       0       0       0       0
  3364 ;;Total ram usage:        1 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_Lcd_Cmd_4bits
  3370 ;;		_Lcd_Init_4bits
  3371 ;;		_Lcd_Write_Char_4bits
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375     02A7                     _Lcd_Port_4bits:	
  3376                           ;psect for function _Lcd_Port_4bits
  3377                           
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in _Lcd_Port_4bits: [wreg]
  3381                           ;Lcd_Port_4bits@a stored from wreg
  3382     02A7  00F0               	movwf	Lcd_Port_4bits@a
  3383     02A8                     l1154:
  3384                           
  3385                           ;configLCD_4bits.c: 15:     if (a & 1)
  3386     02A8  1C70               	btfss	Lcd_Port_4bits@a,0
  3387     02A9  2AAB               	goto	u521
  3388     02AA  2AAC               	goto	u520
  3389     02AB                     u521:
  3390     02AB  2AB0               	goto	l46
  3391     02AC                     u520:
  3392     02AC                     l1156:
  3393                           
  3394                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  3395     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  3396     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  3397     02AE  1608               	bsf	8,4	;volatile
  3398     02AF  2AB3               	goto	l47
  3399     02B0                     l46:	
  3400                           ;configLCD_4bits.c: 17:     else
  3401                           
  3402                           
  3403                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  3404     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3405     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3406     02B2  1208               	bcf	8,4	;volatile
  3407     02B3                     l47:
  3408                           
  3409                           ;configLCD_4bits.c: 20:     if (a & 2)
  3410     02B3  1CF0               	btfss	Lcd_Port_4bits@a,1
  3411     02B4  2AB6               	goto	u531
  3412     02B5  2AB7               	goto	u530
  3413     02B6                     u531:
  3414     02B6  2AB9               	goto	l48
  3415     02B7                     u530:
  3416     02B7                     l1158:
  3417                           
  3418                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  3419     02B7  1688               	bsf	8,5	;volatile
  3420     02B8  2ABA               	goto	l49
  3421     02B9                     l48:	
  3422                           ;configLCD_4bits.c: 22:     else
  3423                           
  3424                           
  3425                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  3426     02B9  1288               	bcf	8,5	;volatile
  3427     02BA                     l49:
  3428                           
  3429                           ;configLCD_4bits.c: 25:     if (a & 4)
  3430     02BA  1D70               	btfss	Lcd_Port_4bits@a,2
  3431     02BB  2ABD               	goto	u541
  3432     02BC  2ABE               	goto	u540
  3433     02BD                     u541:
  3434     02BD  2AC0               	goto	l50
  3435     02BE                     u540:
  3436     02BE                     l1160:
  3437                           
  3438                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  3439     02BE  1708               	bsf	8,6	;volatile
  3440     02BF  2AC1               	goto	l51
  3441     02C0                     l50:	
  3442                           ;configLCD_4bits.c: 27:     else
  3443                           
  3444                           
  3445                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  3446     02C0  1308               	bcf	8,6	;volatile
  3447     02C1                     l51:
  3448                           
  3449                           ;configLCD_4bits.c: 30:     if (a & 8)
  3450     02C1  1DF0               	btfss	Lcd_Port_4bits@a,3
  3451     02C2  2AC4               	goto	u551
  3452     02C3  2AC5               	goto	u550
  3453     02C4                     u551:
  3454     02C4  2AC7               	goto	l52
  3455     02C5                     u550:
  3456     02C5                     l1162:
  3457                           
  3458                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  3459     02C5  1788               	bsf	8,7	;volatile
  3460     02C6  2AC8               	goto	l54
  3461     02C7                     l52:	
  3462                           ;configLCD_4bits.c: 32:     else
  3463                           
  3464                           
  3465                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  3466     02C7  1388               	bcf	8,7	;volatile
  3467     02C8                     l54:
  3468     02C8  0008               	return
  3469     02C9                     __end_of_Lcd_Port_4bits:
  3470     007E                     btemp	set	126	;btemp
  3471     007E                     wtemp0	set	126
  3472                           
  3473                           	psect	idloc
  3474                           
  3475                           ;Config register IDLOC0 @ 0x2000
  3476                           ;	unspecified, using default values
  3477     2000                     	org	8192
  3478     2000  3FFF               	dw	16383
  3479                           
  3480                           ;Config register IDLOC1 @ 0x2001
  3481                           ;	unspecified, using default values
  3482     2001                     	org	8193
  3483     2001  3FFF               	dw	16383
  3484                           
  3485                           ;Config register IDLOC2 @ 0x2002
  3486                           ;	unspecified, using default values
  3487     2002                     	org	8194
  3488     2002  3FFF               	dw	16383
  3489                           
  3490                           ;Config register IDLOC3 @ 0x2003
  3491                           ;	unspecified, using default values
  3492     2003                     	org	8195
  3493     2003  3FFF               	dw	16383
  3494                           
  3495                           	psect	config
  3496                           
  3497                           ;Config register CONFIG1 @ 0x2007
  3498                           ;	Oscillator Selection bits
  3499                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3500                           ;	Watchdog Timer Enable bit
  3501                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3502                           ;	Power-up Timer Enable bit
  3503                           ;	PWRTE = OFF, PWRT disabled
  3504                           ;	RE3/MCLR pin function select bit
  3505                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3506                           ;	Code Protection bit
  3507                           ;	CP = OFF, Program memory code protection is disabled
  3508                           ;	Data Code Protection bit
  3509                           ;	CPD = OFF, Data memory code protection is disabled
  3510                           ;	Brown Out Reset Selection bits
  3511                           ;	BOREN = OFF, BOR disabled
  3512                           ;	Internal External Switchover bit
  3513                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3514                           ;	Fail-Safe Clock Monitor Enabled bit
  3515                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3516                           ;	Low Voltage Programming Enable bit
  3517                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3518                           ;	In-Circuit Debugger Mode bit
  3519                           ;	DEBUG = 0x1, unprogramme  3520     2007                     	org	8199
  3521     2007  20D4               	dw	8404
  3522                           
  3523                           ;Config register CONFIG2 @ 0x2008
  3524                           ;	Brown-out Reset Selection bit
  3525                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3526                           ;	Flash Program Memory Self Write Enable bits
  3527                           ;	WRT = OFF, Write protection off
  3528     2008                     	org	8200
  3529     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@ADC2(BANK0[9]), main@ADC1(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 9
		 -> main@ADC2(BANK0[9]), main@ADC1(BANK0[9]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init_4bits
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    ___awmod->___awdiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    6802
                                             13 BANK0     28    28      0
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1666
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     580
                     _Lcd_Init_4bits
                        _setupINTOSC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2     952
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1    1064
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      29       5       51.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 01:07:42 2023

                             pc 0002                     _SSPSTATbits 0094                              l20 024D  
                            l23 0253                              l16 0287                              l17 028C  
                            l50 02C0                              l34 025C                              l26 024C  
                            l51 02C1                              l52 02C7                              l60 0269  
                            l54 02C8                              l46 02B0                              l47 02B3  
                            l39 0276                              l48 02B9                              l72 032A  
                            l49 02BA                              l57 02A6                              l66 0430  
                            l69 04E8                              l78 03A6                    ___awdiv@sign 0076  
                            fsr 0004                             l135 02F5                             l242 0610  
                           l412 048B                             l518 03EA                             l528 0364  
                           l399 054F                             u520 02AC                             u521 02AB  
                           u530 02B7                             u610 03C1                             u531 02B6  
                           u611 03C0                             u540 02BE                             u541 02BD  
                           u605 03B3                             u550 02C5                             u630 03D2  
                           u710 0360                             u551 02C4                             u631 03D1  
                           u711 035F                             u720 03F1                             u560 027F  
                           u800 05B0                             u721 03F0                             u561 027E  
                           u625 03C2                             u705 0354                             u801 05AF  
                           u570 0253                             u650 03E6                             u810 05BB  
                           u571 0252                             u651 03E5                             u635 03CE  
                           u811 05BA                             u740 0414                             u900 052D  
                           u660 0331                             u820 05FC                             u741 0413  
                           u901 052C                             u645 03DA                             u661 0330  
                           u821 05FB                             u805 05AC                             u590 03AF  
                           u830 060C                             u735 03F7                             u591 03AE  
                           u831 060B                             u760 0372                             u920 0541  
                           u840 04EE                             u680 0343                             u585 0303  
                           u921 0540                             u905 0529                             u841 04ED  
                           u681 0342                             u770 0394                             u930 0546  
                           u850 04F9                             u690 034D                             u755 041A  
                           u931 0545                             u915 0535                             u851 04F8  
                           u691 034C                             u675 0335                             u780 03A6  
                           u860 050A                             u940 0438                             u781 03A5  
                           u861 0509                             u941 0437                             u950 0443  
                           u790 055C                             u951 0442                             u695 0349  
                           u791 055B                             u880 051C                             u960 044E  
                           u881 051B                             u961 044D                             u875 050E  
                           u980 0460                             u981 045F                             u990 046A  
                           u895 051D                             u991 0469                             u975 0452  
                           u995 0466                             fsr0 0004                             indf 0000  
                  ___awmod@sign 0021                            l1200 02F7                            l1210 0316  
                          l1202 02FD                            l1212 0319                            l1204 0300  
                          l1300 0368                            l1220 03A7                            l1214 031F  
                          l1206 030E                            l1302 0384                            l1310 02DB  
                          l1230 03BD                            l1222 03A9                            l1160 02BE  
                          l1216 0322                            l1208 0311                            l1304 038A  
                          l1400 051C                            l1320 02EC                            l1312 02E0  
                          l1240 03E0                            l1232 03C1                            l1224 03AF  
                          l1162 02C5                            l1154 02A8                            l1170 029A  
                          l1218 0327                            l1402 052D                            l1410 0541  
                          l1314 02E3                            l1306 02C9                            l1234 03D2  
                          l1226 03B2                            l1242 03E6                            l1250 0334  
                          l1330 0566                            l1322 0553                            l1156 02AC  
                          l1172 02A3                            l1164 028E                            l1412 0546  
                          l1404 0533                            l1420 0434                            l1180 0283  
                          l1316 02E6                            l1308 02D5                            l1236 03D8  
                          l1228 03B9                            l1260 0353                            l1252 033B  
                          l1340 058F                            l1332 0568                            l1324 0556  
                          l1500 06F8                            l1158 02B7                            l1166 0291  
                          l1414 054B                            l1406 0534                            l1430 0448  
                          l1422 0438                            l1190 048C                            l1182 0286  
                          l1174 0278                            l1318 02E9                            l1270 0254  
                          l1238 03D9                            l1262 035A                            l1254 033F  
                          l1246 032B                            l1342 0593                            l1326 055C  
                          l1510 0726                            l1502 0701                            l1168 0297  
                          l1280 03F1                            l1408 053B                            l1440 0460  
                          l1432 044E                            l1424 043D                            l1192 0492  
                          l1176 027F                            l1184 024D                            l1272 0259  
                          l1256 0343                            l1248 0331                            l1264 0360  
                          l1360 05EF                            l1352 05B1                            l1336 056D  
                          l1328 0561                            l1520 07A3                            l1512 073E  
                          l1504 0712                            l1290 0414                            l1282 03FE  
                          l1450 0482                            l1442 046A                            l1434 0451  
                          l1426 043F                            l1418 0431                            l1194 049B  
                          l1186 026B                            l1178 0281                            l1258 034D  
                          l1362 05F3                            l1354 05BB                            l1338 0587  
                          l1522 07C5                            l1514 0740                            l1506 071A  
                          l1276 025D                            l1292 0421                            l1284 0401  
                          l1380 04F3                            l1452 0487                            l1444 0470  
                          l1436 0458                            l1428 0443                            l1196 04AA  
                          l1188 0275                            l1268 0248                            l1356 05BE  
                          l1348 0595                            l1364 05FC                            l1524 07CD  
                          l1516 0748                            l1508 0723                            l1460 0611  
                          l1294 0424                            l1286 0407                            l1278 03EC  
                          l1390 0504                            l1382 04F5                            l1374 04E9  
                          l1446 0477                            l1438 045C                            l1198 04B0  
                          l1358 05EA                            l1366 060C                            l1550 057F  
                          l1526 07D6                            l1518 0794                            l1470 064E  
                          l1462 0623                            l1296 042A                            l1288 040E  
                          l1392 050A                            l1384 04F9                            l1376 04EA  
                          l1448 047D                            l1528 07E7                            l1480 066B  
                          l1472 0651                            l1464 062C                            l1298 0365  
                          l1394 050D                            l1386 04FE                            l1378 04EE  
                          l1490 06BF                            l1482 0673                            l1474 0659  
                          l1466 063D                            l1396 0514                            l1388 0502  
                          l1492 06CE                            l1484 0676                            l1476 0661  
                          l1468 0645                            l1398 0518                            l1494 06D6  
                          l1486 068A                            l1478 0669                            l1496 06DF  
                          l1488 06AB                            l1498 06F0                            STR_1 001D  
                          STR_2 0021                            STR_3 0025                            STR_4 0029  
                          STR_5 0029                            STR_6 0029                            STR_7 0029  
                          STR_8 0029                            STR_9 0029                            u1010 047D  
                          u1011 047C                            u1020 0482                            u1021 0481  
                          u1005 0471                            u1107 0313                            u1117 0324  
                          u1037 0655                            u1127 029E                            u1047 066F  
                          u1057 072A                            u1067 0744                            u1077 0496  
                          u1087 04A5                            u1097 04B4                            _main 0611  
        _Lcd_Write_String_4bits 0365                            btemp 007E                            start 0000  
                         ?_main 0070               ??_Lcd_Clear_4bits 0074                 __end_of___awdiv 0550  
               __end_of___awmod 048C                           _ANSEL 0188                 ___awdiv@divisor 0070  
               __end_of___lwdiv 03EB                 __end_of___lwmod 0365                 ___awdiv@counter 0075  
                         _PORTB 0006                           _PORTD 0008                           _TRISB 0086  
                         _TRISD 0088           __end_of_Lcd_Cmd_4bits 02A7                 __end_of_dpowers 001D  
                         _setup 02C9                           pclath 000A                 __end_of_spiInit 028D  
               __end_of_spiRead 025D                           status 0003                           wtemp0 007E  
               __end_of_sprintf 0611                 __initialization 07FC                    __end_of_main 07FC  
                        ??_main 002D                ___awdiv@dividend 0072                          ?_setup 0070  
                        _ANSELH 0189                          _TRISC1 0439                          _TRISC2 043A  
                        _TRISC3 043B                          _TRISC5 043D                          _SSPCON 0014  
                        _SSPBUF 0013        Lcd_Write_Char_4bits@temp 0072                       ??___awdiv 0074  
                     ??___awmod 007D                       ??___lwdiv 0074                       ??___lwmod 007C  
              ___awdiv@quotient 0077                 ___awmod@divisor 0079                 ___awmod@counter 0020  
                  ?_setupINTOSC 0070                __end_of_spiWrite 024D                       ??_spiInit 0073  
                     ??_spiRead 0070                  _Lcd_Init_4bits 048C                       ??_sprintf 0023  
       __end_of__initialization 07FC                  __pcstackCOMMON 0070           Lcd_Write_Char_4bits@a 0074  
         Lcd_Write_Char_4bits@y 0073                   __end_of_setup 02F6          __end_of_Lcd_Init_4bits 04E9  
       ?_Lcd_Write_String_4bits 0075                         ??_setup 0076                  _Lcd_Port_4bits 02A7  
               _Lcd_Clear_4bits 025D                      __pmaintext 0611    __end_of_Lcd_Write_Char_4bits 032B  
               Lcd_Port_4bits@a 0070                 ?_Lcd_Init_4bits 0070  __end_of_Lcd_Write_String_4bits 03A7  
                       _SSPSTAT 0094                      __stringtab 0003          __end_of_Lcd_Port_4bits 02C9  
                     ?_spiWrite 0070                         ___awdiv 04E9                         ___awmod 0431  
                       ___lwdiv 03A7                         ___lwmod 032B                         __ptext1 0550  
                       __ptext2 032B                         __ptext3 03A7                         __ptext4 0247  
                       __ptext5 0254                         __ptext6 024D                         __ptext7 02C9  
                       __ptext8 0277                         __ptext9 026A                         _dpowers 0013  
              ___awmod@dividend 007B                         _spiInit 0277                         _spiRead 0254  
  __end_of_Lcd_Set_Cursor_4bits 0431                         _sprintf 0550            end_of_initialization 07FC  
               ?_Lcd_Port_4bits 0070         __end_of_Lcd_Clear_4bits 026A                      ??_spiWrite 0070  
                     _PORTCbits 0007                       _PORTDbits 0008                      main@VAL1_C 0043  
                    main@VAL1_D 0042                      main@VAL2_C 0046                      main@VAL2_D 0045  
                    main@VAL1_U 0041                      main@VAL2_U 0044                     spiWrite@dat 0070  
          _Lcd_Write_Char_4bits 02F6                  _spiReceiveWait 024D             start_initialization 07FC  
                 _Lcd_Cmd_4bits 028D           Lcd_Set_Cursor_4bits@a 0076           Lcd_Set_Cursor_4bits@b 0074  
         Lcd_Set_Cursor_4bits@y 0078           Lcd_Set_Cursor_4bits@z 0077                ?_Lcd_Clear_4bits 0070  
         ?_Lcd_Write_Char_4bits 0070          __end_of_spiReceiveWait 0254        Lcd_Set_Cursor_4bits@temp 0079  
          _Lcd_Set_Cursor_4bits 03EB                ??_Lcd_Init_4bits 0074                       ___latbits 0002  
                 __pcstackBANK0 0020                  ?_Lcd_Cmd_4bits 0070                     sprintf@flag 0026  
                   sprintf@prec 002A                ___lwdiv@dividend 0072                 ?_spiReceiveWait 0070  
         ?_Lcd_Set_Cursor_4bits 0074                        ?___awdiv 0070                        ?___awmod 0079  
                      ?___lwdiv 0070                        ?___lwmod 0078                       __pstrings 0003  
              ??_Lcd_Port_4bits 0070                        ?_spiInit 0070                        ?_spiRead 0070  
              ___lwdiv@quotient 0075                        ?_sprintf 0020            spiInit@sTransmitEdge 0072  
        ??_Lcd_Write_Char_4bits 0071              spiInit@sDataSample 0070                     __stringbase 0012  
                 ??_setupINTOSC 0070                 ??_Lcd_Cmd_4bits 0071         Lcd_Write_String_4bits@a 0075  
       Lcd_Write_String_4bits@i 007A          ??_Lcd_Set_Cursor_4bits 0075              __end_of__stringtab 0013  
      ??_Lcd_Write_String_4bits 0077                  Lcd_Cmd_4bits@a 0073                      sprintf@val 0028  
               ___lwdiv@divisor 0070                 ___lwdiv@counter 0077                        __ptext10 048C  
                      __ptext11 0431                        __ptext12 04E9                        __ptext13 0365  
                      __ptext14 02F6                        __ptext15 03EB                        __ptext16 025D  
                      __ptext17 028D                        __ptext18 02A7             __end_of_setupINTOSC 0277  
                      main@ADC1 002F                        main@ADC2 0038                        _spiWrite 0247  
                      main@VAL1 0047                        main@VAL2 0048                    spiInit@sType 0073  
             spiInit@sClockIdle 0071                       sprintf@ap 0027                       sprintf@sp 002B  
              ___lwmod@dividend 007A                ??_spiReceiveWait 0070                       stringcode 000D  
                    _OSCCONbits 008F                     _setupINTOSC 026A                        sprintf@c 002C  
                      sprintf@f 0020                    setupINTOSC@F 0071                 ___lwmod@divisor 0078  
               ___lwmod@counter 007D                        stringdir 000D                        stringtab 0003  
