

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 16:16:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0088                     	;# 
   418     0089                     	;# 
   419     008C                     	;# 
   420     008D                     	;# 
   421     008E                     	;# 
   422     008F                     	;# 
   423     0090                     	;# 
   424     0091                     	;# 
   425     0092                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0094                     	;# 
   430     0095                     	;# 
   431     0096                     	;# 
   432     0097                     	;# 
   433     0098                     	;# 
   434     0099                     	;# 
   435     009A                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     0105                     	;# 
   442     0107                     	;# 
   443     0108                     	;# 
   444     0109                     	;# 
   445     010C                     	;# 
   446     010C                     	;# 
   447     010D                     	;# 
   448     010E                     	;# 
   449     010F                     	;# 
   450     0185                     	;# 
   451     0187                     	;# 
   452     0188                     	;# 
   453     0189                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456                           
   457                           	psect	strings
   458     0003                     __pstrings:
   459     0003                     stringtab:
   460     0003                     __stringtab:
   461                           
   462                           ;	String table - string pointers are 1 byte each
   463     0003  1BFF               	btfsc	btemp+1,7
   464     0004  280D               	ljmp	stringcode
   465     0005  1383               	bcf	3,7
   466     0006  187F               	btfsc	btemp+1,0
   467     0007  1783               	bsf	3,7
   468     0008  0800               	movf	0,w
   469     0009  0A84               	incf	4,f
   470     000A  1903               	skipnz
   471     000B  0AFF               	incf	btemp+1,f
   472     000C  0008               	return
   473     000D                     stringcode:
   474     000D                     stringdir:
   475     000D  3000               	movlw	high stringdir
   476     000E  008A               	movwf	10
   477     000F  0804               	movf	4,w
   478     0010  0A84               	incf	4,f
   479     0011  0782               	addwf	2,f
   480     0012                     __stringbase:
   481     0012  3400               	retlw	0
   482     0013                     __end_of__stringtab:
   483     0013                     _dpowers:
   484     0013  3401               	retlw	1
   485     0014  3400               	retlw	0
   486     0015  340A               	retlw	10
   487     0016  3400               	retlw	0
   488     0017  3464               	retlw	100
   489     0018  3400               	retlw	0
   490     0019  34E8               	retlw	232
   491     001A  3403               	retlw	3
   492     001B  3410               	retlw	16
   493     001C  3427               	retlw	39
   494     001D                     __end_of_dpowers:
   495     0008                     _PORTD	set	8
   496     0006                     _PORTB	set	6
   497     0007                     _PORTCbits	set	7
   498     0008                     _PORTDbits	set	8
   499     0013                     _SSPBUF	set	19
   500     0014                     _SSPCON	set	20
   501     0088                     _TRISD	set	136
   502     0086                     _TRISB	set	134
   503     008F                     _OSCCONbits	set	143
   504     0094                     _SSPSTATbits	set	148
   505     0094                     _SSPSTAT	set	148
   506     043A                     _TRISC2	set	1082
   507     0439                     _TRISC1	set	1081
   508     043B                     _TRISC3	set	1083
   509     043D                     _TRISC5	set	1085
   510     0189                     _ANSELH	set	393
   511     0188                     _ANSEL	set	392
   512     001D                     STR_1:
   513     001D  3453               	retlw	83	;'S'
   514     001E  3431               	retlw	49	;'1'
   515     001F  343A               	retlw	58	;':'
   516     0020  3400               	retlw	0
   517     0021                     STR_2:
   518     0021  3453               	retlw	83	;'S'
   519     0022  3432               	retlw	50	;'2'
   520     0023  343A               	retlw	58	;':'
   521     0024  3400               	retlw	0
   522     0025                     STR_3:
   523     0025  3453               	retlw	83	;'S'
   524     0026  3433               	retlw	51	;'3'
   525     0027  343A               	retlw	58	;':'
   526     0028  3400               	retlw	0
   527     0029                     STR_4:
   528     0029  3425               	retlw	37	;'%'
   529     002A  3475               	retlw	117	;'u'
   530     002B  3400               	retlw	0
   531     0029                     
   532                           	psect	cinit
   533     07FC                     start_initialization:	
   534                           ; #config settings
   535                           
   536     07FC                     __initialization:
   537     07FC                     end_of_initialization:	
   538                           ;End of C runtime variable initialization code
   539                           
   540     07FC                     __end_of__initialization:
   541     07FC  0183               	clrf	3
   542     07FD  120A  118A  2D3E   	ljmp	_main	;jump to C main() function
   543                           
   544                           	psect	cstackCOMMON
   545     0070                     __pcstackCOMMON:
   546     0070                     ?_setup:
   547     0070                     ?_spiInit:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_spiReceiveWait:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ??_spiReceiveWait:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_spiWrite:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ??_spiWrite:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_spiRead:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ??_spiRead:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_setupINTOSC:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ??_setupINTOSC:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_Lcd_Port_4bits:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ??_Lcd_Port_4bits:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_Lcd_Cmd_4bits:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_Lcd_Clear_4bits:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_Lcd_Init_4bits:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ?_Lcd_Write_Char_4bits:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?_main:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?___awdiv:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?___lwdiv:	
   599                           ; 2 bytes @ 0x0
   600                           
   601     0070                     spiInit@sDataSample:	
   602                           ; 2 bytes @ 0x0
   603                           
   604     0070                     spiWrite@dat:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     Lcd_Port_4bits@a:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ___awdiv@divisor:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ___lwdiv@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616                           
   617                           ; 2 bytes @ 0x0
   618     0070                     	ds	1
   619     0071                     ??_Lcd_Cmd_4bits:
   620     0071                     ??_Lcd_Write_Char_4bits:	
   621                           ; 1 bytes @ 0x1
   622                           
   623     0071                     spiInit@sClockIdle:	
   624                           ; 1 bytes @ 0x1
   625                           
   626     0071                     setupINTOSC@F:	
   627                           ; 1 bytes @ 0x1
   628                           
   629                           
   630                           ; 1 bytes @ 0x1
   631     0071                     	ds	1
   632     0072                     spiInit@sTransmitEdge:
   633     0072                     Lcd_Write_Char_4bits@temp:	
   634                           ; 1 bytes @ 0x2
   635                           
   636     0072                     ___awdiv@dividend:	
   637                           ; 1 bytes @ 0x2
   638                           
   639     0072                     ___lwdiv@dividend:	
   640                           ; 2 bytes @ 0x2
   641                           
   642                           
   643                           ; 2 bytes @ 0x2
   644     0072                     	ds	1
   645     0073                     ??_spiInit:
   646     0073                     spiInit@sType:	
   647                           ; 1 bytes @ 0x3
   648                           
   649     0073                     Lcd_Cmd_4bits@a:	
   650                           ; 1 bytes @ 0x3
   651                           
   652     0073                     Lcd_Write_Char_4bits@y:	
   653                           ; 1 bytes @ 0x3
   654                           
   655                           
   656                           ; 1 bytes @ 0x3
   657     0073                     	ds	1
   658     0074                     ??_Lcd_Clear_4bits:
   659     0074                     ?_Lcd_Set_Cursor_4bits:	
   660                           ; 1 bytes @ 0x4
   661                           
   662     0074                     ??_Lcd_Init_4bits:	
   663                           ; 1 bytes @ 0x4
   664                           
   665     0074                     ??___awdiv:	
   666                           ; 1 bytes @ 0x4
   667                           
   668     0074                     ??___lwdiv:	
   669                           ; 1 bytes @ 0x4
   670                           
   671     0074                     Lcd_Set_Cursor_4bits@b:	
   672                           ; 1 bytes @ 0x4
   673                           
   674     0074                     Lcd_Write_Char_4bits@a:	
   675                           ; 1 bytes @ 0x4
   676                           
   677                           
   678                           ; 1 bytes @ 0x4
   679     0074                     	ds	1
   680     0075                     ??_Lcd_Set_Cursor_4bits:
   681     0075                     ?_Lcd_Write_String_4bits:	
   682                           ; 1 bytes @ 0x5
   683                           
   684     0075                     ___awdiv@counter:	
   685                           ; 1 bytes @ 0x5
   686                           
   687     0075                     Lcd_Write_String_4bits@a:	
   688                           ; 1 bytes @ 0x5
   689                           
   690     0075                     ___lwdiv@quotient:	
   691                           ; 2 bytes @ 0x5
   692                           
   693                           
   694                           ; 2 bytes @ 0x5
   695     0075                     	ds	1
   696     0076                     ??_setup:
   697     0076                     Lcd_Set_Cursor_4bits@a:	
   698                           ; 1 bytes @ 0x6
   699                           
   700     0076                     ___awdiv@sign:	
   701                           ; 1 bytes @ 0x6
   702                           
   703                           
   704                           ; 1 bytes @ 0x6
   705     0076                     	ds	1
   706     0077                     ??_Lcd_Write_String_4bits:
   707     0077                     Lcd_Set_Cursor_4bits@z:	
   708                           ; 1 bytes @ 0x7
   709                           
   710     0077                     ___lwdiv@counter:	
   711                           ; 1 bytes @ 0x7
   712                           
   713     0077                     ___awdiv@quotient:	
   714                           ; 1 bytes @ 0x7
   715                           
   716                           
   717                           ; 2 bytes @ 0x7
   718     0077                     	ds	1
   719     0078                     ?___lwmod:
   720     0078                     Lcd_Set_Cursor_4bits@y:	
   721                           ; 2 bytes @ 0x8
   722                           
   723     0078                     ___lwmod@divisor:	
   724                           ; 1 bytes @ 0x8
   725                           
   726                           
   727                           ; 2 bytes @ 0x8
   728     0078                     	ds	1
   729     0079                     ?___awmod:
   730     0079                     Lcd_Set_Cursor_4bits@temp:	
   731                           ; 2 bytes @ 0x9
   732                           
   733     0079                     ___awmod@divisor:	
   734                           ; 1 bytes @ 0x9
   735                           
   736                           
   737                           ; 2 bytes @ 0x9
   738     0079                     	ds	1
   739     007A                     Lcd_Write_String_4bits@i:
   740     007A                     ___lwmod@dividend:	
   741                           ; 2 bytes @ 0xA
   742                           
   743                           
   744                           ; 2 bytes @ 0xA
   745     007A                     	ds	1
   746     007B                     ___awmod@dividend:
   747                           
   748                           ; 2 bytes @ 0xB
   749     007B                     	ds	1
   750     007C                     ??___lwmod:
   751                           
   752                           ; 1 bytes @ 0xC
   753     007C                     	ds	1
   754     007D                     ??___awmod:
   755     007D                     ___lwmod@counter:	
   756                           ; 1 bytes @ 0xD
   757                           
   758                           
   759                           ; 1 bytes @ 0xD
   760     007D                     	ds	1
   761                           
   762                           	psect	cstackBANK0
   763     0020                     __pcstackBANK0:
   764     0020                     ?_sprintf:
   765     0020                     sprintf@f:	
   766                           ; 2 bytes @ 0x0
   767                           
   768     0020                     ___awmod@counter:	
   769                           ; 1 bytes @ 0x0
   770                           
   771                           
   772                           ; 1 bytes @ 0x0
   773     0020                     	ds	1
   774     0021                     ___awmod@sign:
   775                           
   776                           ; 1 bytes @ 0x1
   777     0021                     	ds	2
   778     0023                     ??_sprintf:
   779                           
   780                           ; 1 bytes @ 0x3
   781     0023                     	ds	3
   782     0026                     sprintf@flag:
   783                           
   784                           ; 1 bytes @ 0x6
   785     0026                     	ds	1
   786     0027                     sprintf@ap:
   787                           
   788                           ; 1 bytes @ 0x7
   789     0027                     	ds	1
   790     0028                     sprintf@val:
   791                           
   792                           ; 2 bytes @ 0x8
   793     0028                     	ds	2
   794     002A                     sprintf@prec:
   795                           
   796                           ; 1 bytes @ 0xA
   797     002A                     	ds	1
   798     002B                     sprintf@sp:
   799                           
   800                           ; 1 bytes @ 0xB
   801     002B                     	ds	1
   802     002C                     sprintf@c:
   803                           
   804                           ; 1 bytes @ 0xC
   805     002C                     	ds	1
   806     002D                     ??_main:
   807                           
   808                           ; 1 bytes @ 0xD
   809     002D                     	ds	2
   810     002F                     main@ADC1:
   811                           
   812                           ; 9 bytes @ 0xF
   813     002F                     	ds	9
   814     0038                     main@ADC2:
   815                           
   816                           ; 9 bytes @ 0x18
   817     0038                     	ds	9
   818     0041                     main@CONT_S:
   819                           
   820                           ; 9 bytes @ 0x21
   821     0041                     	ds	9
   822     004A                     main@VAL1_U:
   823                           
   824                           ; 1 bytes @ 0x2A
   825     004A                     	ds	1
   826     004B                     main@VAL1_D:
   827                           
   828                           ; 1 bytes @ 0x2B
   829     004B                     	ds	1
   830     004C                     main@VAL1_C:
   831                           
   832                           ; 1 bytes @ 0x2C
   833     004C                     	ds	1
   834     004D                     main@VAL2_U:
   835                           
   836                           ; 1 bytes @ 0x2D
   837     004D                     	ds	1
   838     004E                     main@VAL2_D:
   839                           
   840                           ; 1 bytes @ 0x2E
   841     004E                     	ds	1
   842     004F                     main@VAL2_C:
   843                           
   844                           ; 1 bytes @ 0x2F
   845     004F                     	ds	1
   846     0050                     main@CONT_U:
   847                           
   848                           ; 1 bytes @ 0x30
   849     0050                     	ds	1
   850     0051                     main@CONT_D:
   851                           
   852                           ; 1 bytes @ 0x31
   853     0051                     	ds	1
   854     0052                     main@CONT_C:
   855                           
   856                           ; 1 bytes @ 0x32
   857     0052                     	ds	1
   858     0053                     main@VAL_W:
   859                           
   860                           ; 1 bytes @ 0x33
   861     0053                     	ds	1
   862     0054                     main@VAL1:
   863                           
   864                           ; 1 bytes @ 0x34
   865     0054                     	ds	1
   866     0055                     main@VAL2:
   867                           
   868                           ; 1 bytes @ 0x35
   869     0055                     	ds	1
   870     0056                     main@CONT:
   871                           
   872                           ; 1 bytes @ 0x36
   873     0056                     	ds	1
   874     0057                     main@VAL_READ:
   875                           
   876                           ; 1 bytes @ 0x37
   877     0057                     	ds	1
   878                           
   879                           	psect	maintext
   880     053E                     __pmaintext:	
   881 ;;
   882 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   883 ;;
   884 ;; *************** function _main *****************
   885 ;; Defined at:
   886 ;;		line 60 in file "main_M.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  CONT_S          9   33[BANK0 ] unsigned char [9]
   891 ;;  ADC2            9   24[BANK0 ] unsigned char [9]
   892 ;;  ADC1            9   15[BANK0 ] unsigned char [9]
   893 ;;  VAL_READ        1   55[BANK0 ] unsigned char 
   894 ;;  CONT            1   54[BANK0 ] unsigned char 
   895 ;;  VAL2            1   53[BANK0 ] unsigned char 
   896 ;;  VAL1            1   52[BANK0 ] unsigned char 
   897 ;;  VAL_W           1   51[BANK0 ] unsigned char 
   898 ;;  CONT_C          1   50[BANK0 ] unsigned char 
   899 ;;  CONT_D          1   49[BANK0 ] unsigned char 
   900 ;;  CONT_U          1   48[BANK0 ] unsigned char 
   901 ;;  VAL2_C          1   47[BANK0 ] unsigned char 
   902 ;;  VAL2_D          1   46[BANK0 ] unsigned char 
   903 ;;  VAL2_U          1   45[BANK0 ] unsigned char 
   904 ;;  VAL1_C          1   44[BANK0 ] unsigned char 
   905 ;;  VAL1_D          1   43[BANK0 ] unsigned char 
   906 ;;  VAL1_U          1   42[BANK0 ] unsigned char 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : B00/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       0       0       0       0
   917 ;;      Locals:         0      41       0       0       0
   918 ;;      Temps:          0       2       0       0       0
   919 ;;      Totals:         0      43       0       0       0
   920 ;;Total ram usage:       43 bytes
   921 ;; Hardware stack levels required when called: 4
   922 ;; This function calls:
   923 ;;		_Lcd_Clear_4bits
   924 ;;		_Lcd_Set_Cursor_4bits
   925 ;;		_Lcd_Write_String_4bits
   926 ;;		___awdiv
   927 ;;		___awmod
   928 ;;		_setup
   929 ;;		_spiRead
   930 ;;		_spiWrite
   931 ;;		_sprintf
   932 ;; This function is called by:
   933 ;;		Startup code after reset
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937     053E                     _main:	
   938                           ;psect for function _main
   939                           
   940     053E                     l1494:	
   941                           ;incstack = 0
   942                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   943                           
   944                           
   945                           ;main_M.c: 62:     setup();
   946     053E  120A  118A  21F6  120A  118A  	fcall	_setup
   947                           
   948                           ;main_M.c: 64:     uint8_t VAL_READ;;main_M.c: 65:     uint8_t VAL_W;;main_M.c: 67:     
      +                          uint8_t VAL1;;main_M.c: 68:     uint8_t VAL1_U;;main_M.c: 69:     uint8_t VAL1_D;;main_M
      +                          .c: 70:     uint8_t VAL1_C;;main_M.c: 72:     uint8_t VAL2;;main_M.c: 73:     uint8_t VA
      +                          L2_U;;main_M.c: 74:     uint8_t VAL2_D;;main_M.c: 75:     uint8_t VAL2_C;;main_M.c: 77: 
      +                              uint8_t CONT;;main_M.c: 78:     uint8_t CONT_U;;main_M.c: 79:     uint8_t CONT_D;;ma
      +                          in_M.c: 80:     uint8_t CONT_C;;main_M.c: 82:     char ADC1[9];;main_M.c: 83:     char A
      +                          DC2[9];
   949     0543  120A  118A  218A  120A  118A  	fcall	_Lcd_Clear_4bits
   950                           
   951                           ;main_M.c: 87:     Lcd_Set_Cursor_4bits(1,1);
   952     0548  01F4               	clrf	Lcd_Set_Cursor_4bits@b
   953     0549  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
   954     054A  3001               	movlw	1
   955     054B  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   956     0550                     l1496:
   957                           
   958                           ;main_M.c: 88:     Lcd_Write_String_4bits("S1:");
   959     0550  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   960     0551  00F5               	movwf	Lcd_Write_String_4bits@a
   961     0552  3080               	movlw	128
   962     0553  00F6               	movwf	Lcd_Write_String_4bits@a+1
   963     0554  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
   964     0559                     l1498:
   965                           
   966                           ;main_M.c: 89:     Lcd_Set_Cursor_4bits(1,7);
   967     0559  3007               	movlw	7
   968     055A  00F4               	movwf	Lcd_Set_Cursor_4bits@b
   969     055B  3001               	movlw	1
   970     055C  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   971                           
   972                           ;main_M.c: 90:     Lcd_Write_String_4bits("S2:");
   973     0561  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   974     0562  00F5               	movwf	Lcd_Write_String_4bits@a
   975     0563  3080               	movlw	128
   976     0564  00F6               	movwf	Lcd_Write_String_4bits@a+1
   977     0565  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
   978     056A                     l1500:
   979                           
   980                           ;main_M.c: 91:     Lcd_Set_Cursor_4bits(1,13);
   981     056A  300D               	movlw	13
   982     056B  00F4               	movwf	Lcd_Set_Cursor_4bits@b
   983     056C  3001               	movlw	1
   984     056D  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   985     0572                     l1502:
   986                           
   987                           ;main_M.c: 92:     Lcd_Write_String_4bits("S3:");
   988     0572  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   989     0573  00F5               	movwf	Lcd_Write_String_4bits@a
   990     0574  3080               	movlw	128
   991     0575  00F6               	movwf	Lcd_Write_String_4bits@a+1
   992     0576  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
   993     057B                     l1504:
   994                           
   995                           ;main_M.c: 95:     {;main_M.c: 96:        PORTCbits.RC1 = 0;
   996     057B  1283               	bcf	3,5	;RP0=0, select bank0
   997     057C  1303               	bcf	3,6	;RP1=0, select bank0
   998     057D  1087               	bcf	7,1	;volatile
   999     057E                     l1506:
  1000                           
  1001                           ;main_M.c: 97:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1002     057E  30C7               	movlw	199
  1003     057F  1283               	bcf	3,5	;RP0=0, select bank0
  1004     0580  1303               	bcf	3,6	;RP1=0, select bank0
  1005     0581  00AD               	movwf	??_main
  1006     0582                     u1077:
  1007     0582  2D83               	nop2
  1008     0583  0BAD               	decfsz	??_main,f
  1009     0584  2D82               	goto	u1077
  1010     0585  2D86               	nop2
  1011     0586                     l1508:
  1012                           
  1013                           ;main_M.c: 99:        spiWrite(VAL_READ);
  1014     0586  1283               	bcf	3,5	;RP0=0, select bank0
  1015     0587  1303               	bcf	3,6	;RP1=0, select bank0
  1016     0588  0857               	movf	main@VAL_READ,w
  1017     0589  120A  118A  2174  120A  118A  	fcall	_spiWrite
  1018     058E                     l1510:
  1019                           
  1020                           ;main_M.c: 100:        VAL1 = spiRead();
  1021     058E  120A  118A  2181  120A  118A  	fcall	_spiRead
  1022     0593  1283               	bcf	3,5	;RP0=0, select bank0
  1023     0594  1303               	bcf	3,6	;RP1=0, select bank0
  1024     0595  00D4               	movwf	main@VAL1
  1025     0596                     l1512:
  1026                           
  1027                           ;main_M.c: 102:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1028     0596  30C7               	movlw	199
  1029     0597  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0598  1303               	bcf	3,6	;RP1=0, select bank0
  1031     0599  00AD               	movwf	??_main
  1032     059A                     u1087:
  1033     059A  2D9B               	nop2
  1034     059B  0BAD               	decfsz	??_main,f
  1035     059C  2D9A               	goto	u1087
  1036     059D  2D9E               	nop2
  1037     059E                     l1514:
  1038                           
  1039                           ;main_M.c: 103:        PORTCbits.RC1 = 1;
  1040     059E  1283               	bcf	3,5	;RP0=0, select bank0
  1041     059F  1303               	bcf	3,6	;RP1=0, select bank0
  1042     05A0  1487               	bsf	7,1	;volatile
  1043                           
  1044                           ;main_M.c: 105:       VAL1_C = (VAL1/100);
  1045     05A1  3064               	movlw	100
  1046     05A2  00F0               	movwf	___awdiv@divisor
  1047     05A3  3000               	movlw	0
  1048     05A4  00F1               	movwf	___awdiv@divisor+1
  1049     05A5  0854               	movf	main@VAL1,w
  1050     05A6  00AD               	movwf	??_main
  1051     05A7  01AE               	clrf	??_main+1
  1052     05A8  082D               	movf	??_main,w
  1053     05A9  00F2               	movwf	___awdiv@dividend
  1054     05AA  082E               	movf	??_main+1,w
  1055     05AB  00F3               	movwf	___awdiv@dividend+1
  1056     05AC  120A  118A  2416  120A  118A  	fcall	___awdiv
  1057     05B1  0870               	movf	?___awdiv,w
  1058     05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1059     05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1060     05B4  00CC               	movwf	main@VAL1_C
  1061                           
  1062                           ;main_M.c: 106:       VAL1_D = (VAL1/10)%10;
  1063     05B5  300A               	movlw	10
  1064     05B6  00F9               	movwf	___awmod@divisor
  1065     05B7  3000               	movlw	0
  1066     05B8  00FA               	movwf	___awmod@divisor+1
  1067     05B9  300A               	movlw	10
  1068     05BA  00F0               	movwf	___awdiv@divisor
  1069     05BB  3000               	movlw	0
  1070     05BC  00F1               	movwf	___awdiv@divisor+1
  1071     05BD  0854               	movf	main@VAL1,w
  1072     05BE  00AD               	movwf	??_main
  1073     05BF  01AE               	clrf	??_main+1
  1074     05C0  082D               	movf	??_main,w
  1075     05C1  00F2               	movwf	___awdiv@dividend
  1076     05C2  082E               	movf	??_main+1,w
  1077     05C3  00F3               	movwf	___awdiv@dividend+1
  1078     05C4  120A  118A  2416  120A  118A  	fcall	___awdiv
  1079     05C9  0871               	movf	?___awdiv+1,w
  1080     05CA  00FC               	movwf	___awmod@dividend+1
  1081     05CB  0870               	movf	?___awdiv,w
  1082     05CC  00FB               	movwf	___awmod@dividend
  1083     05CD  120A  118A  235E  120A  118A  	fcall	___awmod
  1084     05D2  0879               	movf	?___awmod,w
  1085     05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1086     05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1087     05D5  00CB               	movwf	main@VAL1_D
  1088                           
  1089                           ;main_M.c: 107:       VAL1_U = VAL1%10;
  1090     05D6  300A               	movlw	10
  1091     05D7  00F9               	movwf	___awmod@divisor
  1092     05D8  3000               	movlw	0
  1093     05D9  00FA               	movwf	___awmod@divisor+1
  1094     05DA  0854               	movf	main@VAL1,w
  1095     05DB  00AD               	movwf	??_main
  1096     05DC  01AE               	clrf	??_main+1
  1097     05DD  082D               	movf	??_main,w
  1098     05DE  00FB               	movwf	___awmod@dividend
  1099     05DF  082E               	movf	??_main+1,w
  1100     05E0  00FC               	movwf	___awmod@dividend+1
  1101     05E1  120A  118A  235E  120A  118A  	fcall	___awmod
  1102     05E6  0879               	movf	?___awmod,w
  1103     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1104     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1105     05E9  00CA               	movwf	main@VAL1_U
  1106     05EA                     l1516:
  1107                           
  1108                           ;main_M.c: 109:       sprintf(ADC1, "%u", VAL1_C);
  1109     05EA  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1110     05EB  00A0               	movwf	sprintf@f
  1111     05EC  084C               	movf	main@VAL1_C,w
  1112     05ED  00AD               	movwf	??_main
  1113     05EE  01AE               	clrf	??_main+1
  1114     05EF  082D               	movf	??_main,w
  1115     05F0  00A1               	movwf	?_sprintf+1
  1116     05F1  082E               	movf	??_main+1,w
  1117     05F2  00A2               	movwf	?_sprintf+2
  1118     05F3  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1119     05F4  120A  118A  247D  120A  118A  	fcall	_sprintf
  1120     05F9                     l1518:
  1121                           
  1122                           ;main_M.c: 110:       Lcd_Set_Cursor_4bits(2,1);
  1123     05F9  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1124     05FA  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1125     05FB  3002               	movlw	2
  1126     05FC  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1127                           
  1128                           ;main_M.c: 111:       Lcd_Write_String_4bits(ADC1);
  1129     0601  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1130     0602  00F5               	movwf	Lcd_Write_String_4bits@a
  1131     0603  3000               	movlw	0
  1132     0604  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1133     0605  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
  1134                           
  1135                           ;main_M.c: 113:       sprintf(ADC1, "%u", VAL1_D);
  1136     060A  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1137     060B  1283               	bcf	3,5	;RP0=0, select bank0
  1138     060C  1303               	bcf	3,6	;RP1=0, select bank0
  1139     060D  00A0               	movwf	sprintf@f
  1140     060E  084B               	movf	main@VAL1_D,w
  1141     060F  00AD               	movwf	??_main
  1142     0610  01AE               	clrf	??_main+1
  1143     0611  082D               	movf	??_main,w
  1144     0612  00A1               	movwf	?_sprintf+1
  1145     0613  082E               	movf	??_main+1,w
  1146     0614  00A2               	movwf	?_sprintf+2
  1147     0615  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1148     0616  120A  118A  247D  120A  118A  	fcall	_sprintf
  1149     061B                     l1520:
  1150                           
  1151                           ;main_M.c: 114:       Lcd_Set_Cursor_4bits(2,2);
  1152     061B  3002               	movlw	2
  1153     061C  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1154     061D  3002               	movlw	2
  1155     061E  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1156     0623                     l1522:
  1157                           
  1158                           ;main_M.c: 115:       Lcd_Write_String_4bits(ADC1);
  1159     0623  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1160     0624  00F5               	movwf	Lcd_Write_String_4bits@a
  1161     0625  3000               	movlw	0
  1162     0626  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1163     0627  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
  1164     062C                     l1524:
  1165                           
  1166                           ;main_M.c: 117:       sprintf(ADC1, "%u", VAL1_U);
  1167     062C  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1168     062D  1283               	bcf	3,5	;RP0=0, select bank0
  1169     062E  1303               	bcf	3,6	;RP1=0, select bank0
  1170     062F  00A0               	movwf	sprintf@f
  1171     0630  084A               	movf	main@VAL1_U,w
  1172     0631  00AD               	movwf	??_main
  1173     0632  01AE               	clrf	??_main+1
  1174     0633  082D               	movf	??_main,w
  1175     0634  00A1               	movwf	?_sprintf+1
  1176     0635  082E               	movf	??_main+1,w
  1177     0636  00A2               	movwf	?_sprintf+2
  1178     0637  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1179     0638  120A  118A  247D  120A  118A  	fcall	_sprintf
  1180     063D                     l1526:
  1181                           
  1182                           ;main_M.c: 118:       Lcd_Set_Cursor_4bits(2,3);
  1183     063D  3003               	movlw	3
  1184     063E  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1185     063F  3002               	movlw	2
  1186     0640  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1187                           
  1188                           ;main_M.c: 119:       Lcd_Write_String_4bits(ADC1);
  1189     0645  302F               	movlw	(low (main@ADC1| 0))& (0+255)
  1190     0646  00F5               	movwf	Lcd_Write_String_4bits@a
  1191     0647  3000               	movlw	0
  1192     0648  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1193     0649  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
  1194     064E                     l1528:
  1195                           
  1196                           ;main_M.c: 121:       PORTCbits.RC2 = 0;
  1197     064E  1283               	bcf	3,5	;RP0=0, select bank0
  1198     064F  1303               	bcf	3,6	;RP1=0, select bank0
  1199     0650  1107               	bcf	7,2	;volatile
  1200     0651                     l1530:
  1201                           
  1202                           ;main_M.c: 122:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1203     0651  30C7               	movlw	199
  1204     0652  1283               	bcf	3,5	;RP0=0, select bank0
  1205     0653  1303               	bcf	3,6	;RP1=0, select bank0
  1206     0654  00AD               	movwf	??_main
  1207     0655                     u1097:
  1208     0655  2E56               	nop2
  1209     0656  0BAD               	decfsz	??_main,f
  1210     0657  2E55               	goto	u1097
  1211     0658  2E59               	nop2
  1212     0659                     l1532:
  1213                           
  1214                           ;main_M.c: 124:        spiWrite(VAL_READ);
  1215     0659  1283               	bcf	3,5	;RP0=0, select bank0
  1216     065A  1303               	bcf	3,6	;RP1=0, select bank0
  1217     065B  0857               	movf	main@VAL_READ,w
  1218     065C  120A  118A  2174  120A  118A  	fcall	_spiWrite
  1219     0661                     l1534:
  1220                           
  1221                           ;main_M.c: 125:        VAL_W = spiRead();
  1222     0661  120A  118A  2181  120A  118A  	fcall	_spiRead
  1223     0666  1283               	bcf	3,5	;RP0=0, select bank0
  1224     0667  1303               	bcf	3,6	;RP1=0, select bank0
  1225     0668  00D3               	movwf	main@VAL_W
  1226     0669                     l1536:
  1227                           
  1228                           ;main_M.c: 127:        if (VAL_W == 'A')
  1229     0669  3041               	movlw	65
  1230     066A  0653               	xorwf	main@VAL_W,w
  1231     066B  1D03               	btfss	3,2
  1232     066C  2E6E               	goto	u1051
  1233     066D  2E6F               	goto	u1050
  1234     066E                     u1051:
  1235     066E  2E7D               	goto	l1540
  1236     066F                     u1050:
  1237     066F                     l1538:
  1238                           
  1239                           ;main_M.c: 128:        {;main_M.c: 129:            spiWrite(VAL_READ);
  1240     066F  0857               	movf	main@VAL_READ,w
  1241     0670  120A  118A  2174  120A  118A  	fcall	_spiWrite
  1242                           
  1243                           ;main_M.c: 130:            VAL2 = spiRead();
  1244     0675  120A  118A  2181  120A  118A  	fcall	_spiRead
  1245     067A  1283               	bcf	3,5	;RP0=0, select bank0
  1246     067B  1303               	bcf	3,6	;RP1=0, select bank0
  1247     067C  00D5               	movwf	main@VAL2
  1248     067D                     l1540:
  1249                           
  1250                           ;main_M.c: 133:        if (VAL_W == 'C')
  1251     067D  3043               	movlw	67
  1252     067E  0653               	xorwf	main@VAL_W,w
  1253     067F  1D03               	btfss	3,2
  1254     0680  2E82               	goto	u1061
  1255     0681  2E83               	goto	u1060
  1256     0682                     u1061:
  1257     0682  2E91               	goto	l1544
  1258     0683                     u1060:
  1259     0683                     l1542:
  1260                           
  1261                           ;main_M.c: 134:        {;main_M.c: 135:            spiWrite(VAL_READ);
  1262     0683  0857               	movf	main@VAL_READ,w
  1263     0684  120A  118A  2174  120A  118A  	fcall	_spiWrite
  1264                           
  1265                           ;main_M.c: 136:            CONT = spiRead();
  1266     0689  120A  118A  2181  120A  118A  	fcall	_spiRead
  1267     068E  1283               	bcf	3,5	;RP0=0, select bank0
  1268     068F  1303               	bcf	3,6	;RP1=0, select bank0
  1269     0690  00D6               	movwf	main@CONT
  1270     0691                     l1544:
  1271                           
  1272                           ;main_M.c: 139:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1273     0691  30C7               	movlw	199
  1274     0692  1283               	bcf	3,5	;RP0=0, select bank0
  1275     0693  1303               	bcf	3,6	;RP1=0, select bank0
  1276     0694  00AD               	movwf	??_main
  1277     0695                     u1107:
  1278     0695  2E96               	nop2
  1279     0696  0BAD               	decfsz	??_main,f
  1280     0697  2E95               	goto	u1107
  1281     0698  2E99               	nop2
  1282     0699                     l1546:
  1283                           
  1284                           ;main_M.c: 140:        PORTCbits.RC2 = 1;
  1285     0699  1283               	bcf	3,5	;RP0=0, select bank0
  1286     069A  1303               	bcf	3,6	;RP1=0, select bank0
  1287     069B  1507               	bsf	7,2	;volatile
  1288     069C                     l1548:
  1289                           
  1290                           ;main_M.c: 142:       VAL2_C = (VAL2/100);
  1291     069C  3064               	movlw	100
  1292     069D  00F0               	movwf	___awdiv@divisor
  1293     069E  3000               	movlw	0
  1294     069F  00F1               	movwf	___awdiv@divisor+1
  1295     06A0  0855               	movf	main@VAL2,w
  1296     06A1  00AD               	movwf	??_main
  1297     06A2  01AE               	clrf	??_main+1
  1298     06A3  082D               	movf	??_main,w
  1299     06A4  00F2               	movwf	___awdiv@dividend
  1300     06A5  082E               	movf	??_main+1,w
  1301     06A6  00F3               	movwf	___awdiv@dividend+1
  1302     06A7  120A  118A  2416  120A  118A  	fcall	___awdiv
  1303     06AC  0870               	movf	?___awdiv,w
  1304     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1305     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1306     06AF  00CF               	movwf	main@VAL2_C
  1307     06B0                     l1550:
  1308                           
  1309                           ;main_M.c: 143:       VAL2_D = (VAL2/10)%10;
  1310     06B0  300A               	movlw	10
  1311     06B1  00F9               	movwf	___awmod@divisor
  1312     06B2  3000               	movlw	0
  1313     06B3  00FA               	movwf	___awmod@divisor+1
  1314     06B4  300A               	movlw	10
  1315     06B5  00F0               	movwf	___awdiv@divisor
  1316     06B6  3000               	movlw	0
  1317     06B7  00F1               	movwf	___awdiv@divisor+1
  1318     06B8  0855               	movf	main@VAL2,w
  1319     06B9  00AD               	movwf	??_main
  1320     06BA  01AE               	clrf	??_main+1
  1321     06BB  082D               	movf	??_main,w
  1322     06BC  00F2               	movwf	___awdiv@dividend
  1323     06BD  082E               	movf	??_main+1,w
  1324     06BE  00F3               	movwf	___awdiv@dividend+1
  1325     06BF  120A  118A  2416  120A  118A  	fcall	___awdiv
  1326     06C4  0871               	movf	?___awdiv+1,w
  1327     06C5  00FC               	movwf	___awmod@dividend+1
  1328     06C6  0870               	movf	?___awdiv,w
  1329     06C7  00FB               	movwf	___awmod@dividend
  1330     06C8  120A  118A  235E  120A  118A  	fcall	___awmod
  1331     06CD  0879               	movf	?___awmod,w
  1332     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1333     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  1334     06D0  00CE               	movwf	main@VAL2_D
  1335     06D1                     l1552:
  1336                           
  1337                           ;main_M.c: 144:       VAL2_U = VAL2%10;
  1338     06D1  300A               	movlw	10
  1339     06D2  00F9               	movwf	___awmod@divisor
  1340     06D3  3000               	movlw	0
  1341     06D4  00FA               	movwf	___awmod@divisor+1
  1342     06D5  0855               	movf	main@VAL2,w
  1343     06D6  00AD               	movwf	??_main
  1344     06D7  01AE               	clrf	??_main+1
  1345     06D8  082D               	movf	??_main,w
  1346     06D9  00FB               	movwf	___awmod@dividend
  1347     06DA  082E               	movf	??_main+1,w
  1348     06DB  00FC               	movwf	___awmod@dividend+1
  1349     06DC  120A  118A  235E  120A  118A  	fcall	___awmod
  1350     06E1  0879               	movf	?___awmod,w
  1351     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1352     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1353     06E4  00CD               	movwf	main@VAL2_U
  1354     06E5                     l1554:
  1355                           
  1356                           ;main_M.c: 146:       sprintf(ADC2, "%u", VAL2_C);
  1357     06E5  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1358     06E6  00A0               	movwf	sprintf@f
  1359     06E7  084F               	movf	main@VAL2_C,w
  1360     06E8  00AD               	movwf	??_main
  1361     06E9  01AE               	clrf	??_main+1
  1362     06EA  082D               	movf	??_main,w
  1363     06EB  00A1               	movwf	?_sprintf+1
  1364     06EC  082E               	movf	??_main+1,w
  1365     06ED  00A2               	movwf	?_sprintf+2
  1366     06EE  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1367     06EF  120A  118A  247D  120A  118A  	fcall	_sprintf
  1368     06F4                     l1556:
  1369                           
  1370                           ;main_M.c: 147:       Lcd_Set_Cursor_4bits(2,7);
  1371     06F4  3007               	movlw	7
  1372     06F5  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1373     06F6  3002               	movlw	2
  1374     06F7  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1375     06FC                     l1558:
  1376                           
  1377                           ;main_M.c: 148:       Lcd_Write_String_4bits(ADC2);
  1378     06FC  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1379     06FD  00F5               	movwf	Lcd_Write_String_4bits@a
  1380     06FE  3000               	movlw	0
  1381     06FF  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1382     0700  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
  1383     0705                     l1560:
  1384                           
  1385                           ;main_M.c: 150:       sprintf(ADC2, "%u", VAL2_D);
  1386     0705  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1387     0706  1283               	bcf	3,5	;RP0=0, select bank0
  1388     0707  1303               	bcf	3,6	;RP1=0, select bank0
  1389     0708  00A0               	movwf	sprintf@f
  1390     0709  084E               	movf	main@VAL2_D,w
  1391     070A  00AD               	movwf	??_main
  1392     070B  01AE               	clrf	??_main+1
  1393     070C  082D               	movf	??_main,w
  1394     070D  00A1               	movwf	?_sprintf+1
  1395     070E  082E               	movf	??_main+1,w
  1396     070F  00A2               	movwf	?_sprintf+2
  1397     0710  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1398     0711  120A  118A  247D  120A  118A  	fcall	_sprintf
  1399     0716                     l1562:
  1400                           
  1401                           ;main_M.c: 151:       Lcd_Set_Cursor_4bits(2,8);
  1402     0716  3008               	movlw	8
  1403     0717  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1404     0718  3002               	movlw	2
  1405     0719  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1406     071E                     l1564:
  1407                           
  1408                           ;main_M.c: 152:       Lcd_Write_String_4bits(ADC2);
  1409     071E  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1410     071F  00F5               	movwf	Lcd_Write_String_4bits@a
  1411     0720  3000               	movlw	0
  1412     0721  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1413     0722  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
  1414     0727                     l1566:
  1415                           
  1416                           ;main_M.c: 154:       sprintf(ADC2, "%u", VAL2_U);
  1417     0727  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1418     0728  1283               	bcf	3,5	;RP0=0, select bank0
  1419     0729  1303               	bcf	3,6	;RP1=0, select bank0
  1420     072A  00A0               	movwf	sprintf@f
  1421     072B  084D               	movf	main@VAL2_U,w
  1422     072C  00AD               	movwf	??_main
  1423     072D  01AE               	clrf	??_main+1
  1424     072E  082D               	movf	??_main,w
  1425     072F  00A1               	movwf	?_sprintf+1
  1426     0730  082E               	movf	??_main+1,w
  1427     0731  00A2               	movwf	?_sprintf+2
  1428     0732  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1429     0733  120A  118A  247D  120A  118A  	fcall	_sprintf
  1430     0738                     l1568:
  1431                           
  1432                           ;main_M.c: 155:       Lcd_Set_Cursor_4bits(2,9);
  1433     0738  3009               	movlw	9
  1434     0739  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1435     073A  3002               	movlw	2
  1436     073B  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1437     0740                     l1570:
  1438                           
  1439                           ;main_M.c: 156:       Lcd_Write_String_4bits(ADC2);
  1440     0740  3038               	movlw	(low (main@ADC2| 0))& (0+255)
  1441     0741  00F5               	movwf	Lcd_Write_String_4bits@a
  1442     0742  3000               	movlw	0
  1443     0743  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1444     0744  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
  1445     0749                     l1572:
  1446                           
  1447                           ;main_M.c: 158:       CONT_C = (CONT/100);
  1448     0749  3064               	movlw	100
  1449     074A  00F0               	movwf	___awdiv@divisor
  1450     074B  3000               	movlw	0
  1451     074C  00F1               	movwf	___awdiv@divisor+1
  1452     074D  1283               	bcf	3,5	;RP0=0, select bank0
  1453     074E  1303               	bcf	3,6	;RP1=0, select bank0
  1454     074F  0856               	movf	main@CONT,w
  1455     0750  00AD               	movwf	??_main
  1456     0751  01AE               	clrf	??_main+1
  1457     0752  082D               	movf	??_main,w
  1458     0753  00F2               	movwf	___awdiv@dividend
  1459     0754  082E               	movf	??_main+1,w
  1460     0755  00F3               	movwf	___awdiv@dividend+1
  1461     0756  120A  118A  2416  120A  118A  	fcall	___awdiv
  1462     075B  0870               	movf	?___awdiv,w
  1463     075C  1283               	bcf	3,5	;RP0=0, select bank0
  1464     075D  1303               	bcf	3,6	;RP1=0, select bank0
  1465     075E  00D2               	movwf	main@CONT_C
  1466     075F                     l1574:
  1467                           
  1468                           ;main_M.c: 159:       CONT_D = (CONT/10)%10;
  1469     075F  300A               	movlw	10
  1470     0760  00F9               	movwf	___awmod@divisor
  1471     0761  3000               	movlw	0
  1472     0762  00FA               	movwf	___awmod@divisor+1
  1473     0763  300A               	movlw	10
  1474     0764  00F0               	movwf	___awdiv@divisor
  1475     0765  3000               	movlw	0
  1476     0766  00F1               	movwf	___awdiv@divisor+1
  1477     0767  0856               	movf	main@CONT,w
  1478     0768  00AD               	movwf	??_main
  1479     0769  01AE               	clrf	??_main+1
  1480     076A  082D               	movf	??_main,w
  1481     076B  00F2               	movwf	___awdiv@dividend
  1482     076C  082E               	movf	??_main+1,w
  1483     076D  00F3               	movwf	___awdiv@dividend+1
  1484     076E  120A  118A  2416  120A  118A  	fcall	___awdiv
  1485     0773  0871               	movf	?___awdiv+1,w
  1486     0774  00FC               	movwf	___awmod@dividend+1
  1487     0775  0870               	movf	?___awdiv,w
  1488     0776  00FB               	movwf	___awmod@dividend
  1489     0777  120A  118A  235E  120A  118A  	fcall	___awmod
  1490     077C  0879               	movf	?___awmod,w
  1491     077D  1283               	bcf	3,5	;RP0=0, select bank0
  1492     077E  1303               	bcf	3,6	;RP1=0, select bank0
  1493     077F  00D1               	movwf	main@CONT_D
  1494     0780                     l1576:
  1495                           
  1496                           ;main_M.c: 160:       CONT_U = CONT%10;
  1497     0780  300A               	movlw	10
  1498     0781  00F9               	movwf	___awmod@divisor
  1499     0782  3000               	movlw	0
  1500     0783  00FA               	movwf	___awmod@divisor+1
  1501     0784  0856               	movf	main@CONT,w
  1502     0785  00AD               	movwf	??_main
  1503     0786  01AE               	clrf	??_main+1
  1504     0787  082D               	movf	??_main,w
  1505     0788  00FB               	movwf	___awmod@dividend
  1506     0789  082E               	movf	??_main+1,w
  1507     078A  00FC               	movwf	___awmod@dividend+1
  1508     078B  120A  118A  235E  120A  118A  	fcall	___awmod
  1509     0790  0879               	movf	?___awmod,w
  1510     0791  1283               	bcf	3,5	;RP0=0, select bank0
  1511     0792  1303               	bcf	3,6	;RP1=0, select bank0
  1512     0793  00D0               	movwf	main@CONT_U
  1513     0794                     l1578:
  1514                           
  1515                           ;main_M.c: 162:       sprintf(CONT_S, "%u", CONT_C);
  1516     0794  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1517     0795  00A0               	movwf	sprintf@f
  1518     0796  0852               	movf	main@CONT_C,w
  1519     0797  00AD               	movwf	??_main
  1520     0798  01AE               	clrf	??_main+1
  1521     0799  082D               	movf	??_main,w
  1522     079A  00A1               	movwf	?_sprintf+1
  1523     079B  082E               	movf	??_main+1,w
  1524     079C  00A2               	movwf	?_sprintf+2
  1525     079D  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1526     079E  120A  118A  247D  120A  118A  	fcall	_sprintf
  1527     07A3                     l1580:
  1528                           
  1529                           ;main_M.c: 163:       Lcd_Set_Cursor_4bits(2,13);
  1530     07A3  300D               	movlw	13
  1531     07A4  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1532     07A5  3002               	movlw	2
  1533     07A6  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1534     07AB                     l1582:
  1535                           
  1536                           ;main_M.c: 164:       Lcd_Write_String_4bits(CONT_S);
  1537     07AB  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1538     07AC  00F5               	movwf	Lcd_Write_String_4bits@a
  1539     07AD  3000               	movlw	0
  1540     07AE  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1541     07AF  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
  1542     07B4                     l1584:
  1543                           
  1544                           ;main_M.c: 166:       sprintf(CONT_S, "%u", CONT_D);
  1545     07B4  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1546     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1547     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1548     07B7  00A0               	movwf	sprintf@f
  1549     07B8  0851               	movf	main@CONT_D,w
  1550     07B9  00AD               	movwf	??_main
  1551     07BA  01AE               	clrf	??_main+1
  1552     07BB  082D               	movf	??_main,w
  1553     07BC  00A1               	movwf	?_sprintf+1
  1554     07BD  082E               	movf	??_main+1,w
  1555     07BE  00A2               	movwf	?_sprintf+2
  1556     07BF  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1557     07C0  120A  118A  247D  120A  118A  	fcall	_sprintf
  1558     07C5                     l1586:
  1559                           
  1560                           ;main_M.c: 167:       Lcd_Set_Cursor_4bits(2,14);
  1561     07C5  300E               	movlw	14
  1562     07C6  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1563     07C7  3002               	movlw	2
  1564     07C8  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1565     07CD                     l1588:
  1566                           
  1567                           ;main_M.c: 168:       Lcd_Write_String_4bits(CONT_S);
  1568     07CD  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1569     07CE  00F5               	movwf	Lcd_Write_String_4bits@a
  1570     07CF  3000               	movlw	0
  1571     07D0  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1572     07D1  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
  1573     07D6                     l1590:
  1574                           
  1575                           ;main_M.c: 170:       sprintf(CONT_S, "%u", CONT_U);
  1576     07D6  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1577     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1578     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1579     07D9  00A0               	movwf	sprintf@f
  1580     07DA  0850               	movf	main@CONT_U,w
  1581     07DB  00AD               	movwf	??_main
  1582     07DC  01AE               	clrf	??_main+1
  1583     07DD  082D               	movf	??_main,w
  1584     07DE  00A1               	movwf	?_sprintf+1
  1585     07DF  082E               	movf	??_main+1,w
  1586     07E0  00A2               	movwf	?_sprintf+2
  1587     07E1  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1588     07E2  120A  118A  247D  120A  118A  	fcall	_sprintf
  1589     07E7                     l1592:
  1590                           
  1591                           ;main_M.c: 171:       Lcd_Set_Cursor_4bits(2,15);
  1592     07E7  300F               	movlw	15
  1593     07E8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1594     07E9  3002               	movlw	2
  1595     07EA  120A  118A  2318  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1596     07EF                     l1594:
  1597                           
  1598                           ;main_M.c: 172:       Lcd_Write_String_4bits(CONT_S);
  1599     07EF  3041               	movlw	(low (main@CONT_S| 0))& (0+255)
  1600     07F0  00F5               	movwf	Lcd_Write_String_4bits@a
  1601     07F1  3000               	movlw	0
  1602     07F2  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1603     07F3  120A  118A  2292  120A  118A  	fcall	_Lcd_Write_String_4bits
  1604     07F8  2D7B               	goto	l1504
  1605     07F9  120A  118A  2800   	ljmp	start
  1606     07FC                     __end_of_main:
  1607                           
  1608                           	psect	text1
  1609     047D                     __ptext1:	
  1610 ;; *************** function _sprintf *****************
  1611 ;; Defined at:
  1612 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  sp              1    wreg     PTR unsigned char 
  1615 ;;		 -> main@CONT_S(9), main@ADC2(9), main@ADC1(9), 
  1616 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1617 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(3), 
  1618 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  1619 ;;		 -> STR_4(3), 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1622 ;;		 -> main@CONT_S(9), main@ADC2(9), main@ADC1(9), 
  1623 ;;  tmpval          4    0        struct .
  1624 ;;  val             2    8[BANK0 ] unsigned int 
  1625 ;;  cp              2    0        PTR const unsigned char 
  1626 ;;  len             2    0        unsigned int 
  1627 ;;  c               1   12[BANK0 ] unsigned char 
  1628 ;;  prec            1   10[BANK0 ] char 
  1629 ;;  ap              1    7[BANK0 ] PTR void [1]
  1630 ;;		 -> ?_sprintf(2), 
  1631 ;;  flag            1    6[BANK0 ] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  2    0[BANK0 ] int 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1641 ;;      Params:         0       3       0       0       0
  1642 ;;      Locals:         0       7       0       0       0
  1643 ;;      Temps:          0       3       0       0       0
  1644 ;;      Totals:         0      13       0       0       0
  1645 ;;Total ram usage:       13 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 1
  1648 ;; This function calls:
  1649 ;;		___lwdiv
  1650 ;;		___lwmod
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656     047D                     _sprintf:	
  1657                           ;psect for function _sprintf
  1658                           
  1659                           
  1660                           ;incstack = 0
  1661                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1662                           ;sprintf@sp stored from wreg
  1663     047D  1283               	bcf	3,5	;RP0=0, select bank0
  1664     047E  1303               	bcf	3,6	;RP1=0, select bank0
  1665     047F  00AB               	movwf	sprintf@sp
  1666     0480                     l1356:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1669     0480  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1670     0481  00A7               	movwf	sprintf@ap
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1673     0482  2D29               	goto	l1398
  1674     0483                     l1358:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1677     0483  3025               	movlw	37
  1678     0484  062C               	xorwf	sprintf@c,w
  1679     0485  1903               	btfsc	3,2
  1680     0486  2C88               	goto	u811
  1681     0487  2C89               	goto	u810
  1682     0488                     u811:
  1683     0488  2C93               	goto	l1364
  1684     0489                     u810:
  1685     0489                     l1360:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1688     0489  082B               	movf	sprintf@sp,w
  1689     048A  0084               	movwf	4
  1690     048B  082C               	movf	sprintf@c,w
  1691     048C  1383               	bcf	3,7	;select IRP bank0
  1692     048D  0080               	movwf	0
  1693     048E                     l1362:
  1694     048E  3001               	movlw	1
  1695     048F  00A3               	movwf	??_sprintf
  1696     0490  0823               	movf	??_sprintf,w
  1697     0491  07AB               	addwf	sprintf@sp,f
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1700     0492  2D29               	goto	l1398
  1701     0493                     l1364:
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1704     0493  01A6               	clrf	sprintf@flag
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1707     0494  2C9A               	goto	l1370
  1708     0495                     l1366:
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1711     0495  30C0               	movlw	192
  1712     0496  00A3               	movwf	??_sprintf
  1713     0497  0823               	movf	??_sprintf,w
  1714     0498  04A6               	iorwf	sprintf@flag,f
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1717     0499  2CB4               	goto	l1372
  1718     049A                     l1370:
  1719     049A  3001               	movlw	1
  1720     049B  07A0               	addwf	sprintf@f,f
  1721     049C  30FF               	movlw	-1
  1722     049D  0720               	addwf	sprintf@f,w
  1723     049E  0084               	movwf	4
  1724     049F  120A  118A  200D  120A  118A  	fcall	stringdir
  1725     04A4  00AC               	movwf	sprintf@c
  1726     04A5  00A3               	movwf	??_sprintf
  1727     04A6  01A4               	clrf	??_sprintf+1
  1728                           
  1729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1730                           ; Switch size 1, requested type "simple"
  1731                           ; Number of cases is 1, Range of values is 0 to 0
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte            4     3 (average)
  1735                           ; direct_byte           11     8 (fixed)
  1736                           ; jumptable            260     6 (fixed)
  1737                           ;	Chosen strategy is simple_byte
  1738     04A7  0824               	movf	??_sprintf+1,w
  1739     04A8  3A00               	xorlw	0	; case 0
  1740     04A9  1903               	skipnz
  1741     04AA  2CAC               	goto	l1616
  1742     04AB  2D29               	goto	l1398
  1743     04AC                     l1616:
  1744                           
  1745                           ; Switch size 1, requested type "simple"
  1746                           ; Number of cases is 2, Range of values is 0 to 117
  1747                           ; switch strategies available:
  1748                           ; Name         Instructions Cycles
  1749                           ; simple_byte            7     4 (average)
  1750                           ; jumptable            260     6 (fixed)
  1751                           ;	Chosen strategy is simple_byte
  1752     04AC  0823               	movf	??_sprintf,w
  1753     04AD  3A00               	xorlw	0	; case 0
  1754     04AE  1903               	skipnz
  1755     04AF  2D39               	goto	l1400
  1756     04B0  3A75               	xorlw	117	; case 117
  1757     04B1  1903               	skipnz
  1758     04B2  2C95               	goto	l1366
  1759     04B3  2D29               	goto	l1398
  1760     04B4                     l1372:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1763     04B4  0827               	movf	sprintf@ap,w
  1764     04B5  0084               	movwf	4
  1765     04B6  1383               	bcf	3,7	;select IRP bank0
  1766     04B7  0800               	movf	0,w
  1767     04B8  00A8               	movwf	sprintf@val
  1768     04B9  0A84               	incf	4,f
  1769     04BA  0800               	movf	0,w
  1770     04BB  00A9               	movwf	sprintf@val+1
  1771     04BC                     l1374:
  1772     04BC  3002               	movlw	2
  1773     04BD  00A3               	movwf	??_sprintf
  1774     04BE  0823               	movf	??_sprintf,w
  1775     04BF  07A7               	addwf	sprintf@ap,f
  1776     04C0                     l1376:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1779     04C0  01AC               	clrf	sprintf@c
  1780     04C1  0AAC               	incf	sprintf@c,f
  1781     04C2                     l1382:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1784     04C2  082C               	movf	sprintf@c,w
  1785     04C3  00A3               	movwf	??_sprintf
  1786     04C4  0723               	addwf	??_sprintf,w
  1787     04C5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1788     04C6  0084               	movwf	4
  1789     04C7  120A  118A  200D  120A  118A  	fcall	stringdir
  1790     04CC  00A4               	movwf	??_sprintf+1
  1791     04CD  120A  118A  200D  120A  118A  	fcall	stringdir
  1792     04D2  00A5               	movwf	??_sprintf+2
  1793     04D3  0825               	movf	??_sprintf+2,w
  1794     04D4  0229               	subwf	sprintf@val+1,w
  1795     04D5  1D03               	skipz
  1796     04D6  2CD9               	goto	u825
  1797     04D7  0824               	movf	??_sprintf+1,w
  1798     04D8  0228               	subwf	sprintf@val,w
  1799     04D9                     u825:
  1800     04D9  1803               	skipnc
  1801     04DA  2CDC               	goto	u821
  1802     04DB  2CDD               	goto	u820
  1803     04DC                     u821:
  1804     04DC  2CDE               	goto	l1386
  1805     04DD                     u820:
  1806     04DD  2CE8               	goto	l1388
  1807     04DE                     l1386:
  1808     04DE  3001               	movlw	1
  1809     04DF  00A3               	movwf	??_sprintf
  1810     04E0  0823               	movf	??_sprintf,w
  1811     04E1  07AC               	addwf	sprintf@c,f
  1812     04E2  3005               	movlw	5
  1813     04E3  062C               	xorwf	sprintf@c,w
  1814     04E4  1D03               	btfss	3,2
  1815     04E5  2CE7               	goto	u831
  1816     04E6  2CE8               	goto	u830
  1817     04E7                     u831:
  1818     04E7  2CC2               	goto	l1382
  1819     04E8                     u830:
  1820     04E8                     l1388:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1823     04E8  082C               	movf	sprintf@c,w
  1824     04E9  00AA               	movwf	sprintf@prec
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1827     04EA  2D20               	goto	l1396
  1828     04EB                     l1390:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1831     04EB  300A               	movlw	10
  1832     04EC  00F8               	movwf	___lwmod@divisor
  1833     04ED  3000               	movlw	0
  1834     04EE  00F9               	movwf	___lwmod@divisor+1
  1835     04EF  082A               	movf	sprintf@prec,w
  1836     04F0  00A3               	movwf	??_sprintf
  1837     04F1  0723               	addwf	??_sprintf,w
  1838     04F2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1839     04F3  0084               	movwf	4
  1840     04F4  120A  118A  200D  120A  118A  	fcall	stringdir
  1841     04F9  00F0               	movwf	___lwdiv@divisor
  1842     04FA  120A  118A  200D  120A  118A  	fcall	stringdir
  1843     04FF  00F1               	movwf	___lwdiv@divisor+1
  1844     0500  0829               	movf	sprintf@val+1,w
  1845     0501  00F3               	movwf	___lwdiv@dividend+1
  1846     0502  0828               	movf	sprintf@val,w
  1847     0503  00F2               	movwf	___lwdiv@dividend
  1848     0504  120A  118A  22D4  120A  118A  	fcall	___lwdiv
  1849     0509  0871               	movf	?___lwdiv+1,w
  1850     050A  00FB               	movwf	___lwmod@dividend+1
  1851     050B  0870               	movf	?___lwdiv,w
  1852     050C  00FA               	movwf	___lwmod@dividend
  1853     050D  120A  118A  2258  120A  118A  	fcall	___lwmod
  1854     0512  0878               	movf	?___lwmod,w
  1855     0513  3E30               	addlw	48
  1856     0514  1283               	bcf	3,5	;RP0=0, select bank0
  1857     0515  1303               	bcf	3,6	;RP1=0, select bank0
  1858     0516  00AC               	movwf	sprintf@c
  1859     0517                     l1392:
  1860                           
  1861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1862     0517  082B               	movf	sprintf@sp,w
  1863     0518  0084               	movwf	4
  1864     0519  082C               	movf	sprintf@c,w
  1865     051A  1383               	bcf	3,7	;select IRP bank0
  1866     051B  0080               	movwf	0
  1867     051C                     l1394:
  1868     051C  3001               	movlw	1
  1869     051D  00A3               	movwf	??_sprintf
  1870     051E  0823               	movf	??_sprintf,w
  1871     051F  07AB               	addwf	sprintf@sp,f
  1872     0520                     l1396:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1875     0520  30FF               	movlw	255
  1876     0521  00A3               	movwf	??_sprintf
  1877     0522  0823               	movf	??_sprintf,w
  1878     0523  07AA               	addwf	sprintf@prec,f
  1879     0524  0A2A               	incf	sprintf@prec,w
  1880     0525  1D03               	btfss	3,2
  1881     0526  2D28               	goto	u841
  1882     0527  2D29               	goto	u840
  1883     0528                     u841:
  1884     0528  2CEB               	goto	l1390
  1885     0529                     u840:
  1886     0529                     l1398:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1889     0529  3001               	movlw	1
  1890     052A  07A0               	addwf	sprintf@f,f
  1891     052B  30FF               	movlw	-1
  1892     052C  0720               	addwf	sprintf@f,w
  1893     052D  0084               	movwf	4
  1894     052E  120A  118A  200D  120A  118A  	fcall	stringdir
  1895     0533  00AC               	movwf	sprintf@c
  1896     0534  082C               	movf	sprintf@c,w
  1897     0535  1D03               	btfss	3,2
  1898     0536  2D38               	goto	u851
  1899     0537  2D39               	goto	u850
  1900     0538                     u851:
  1901     0538  2C83               	goto	l1358
  1902     0539                     u850:
  1903     0539                     l1400:
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1906     0539  082B               	movf	sprintf@sp,w
  1907     053A  0084               	movwf	4
  1908     053B  1383               	bcf	3,7	;select IRP bank0
  1909     053C  0180               	clrf	0
  1910     053D                     l244:
  1911     053D  0008               	return
  1912     053E                     __end_of_sprintf:
  1913                           
  1914                           	psect	text2
  1915     0258                     __ptext2:	
  1916 ;; *************** function ___lwmod *****************
  1917 ;; Defined at:
  1918 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  divisor         2    8[COMMON] unsigned int 
  1921 ;;  dividend        2   10[COMMON] unsigned int 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  counter         1   13[COMMON] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  2    8[COMMON] unsigned int 
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         4       0       0       0       0
  1934 ;;      Locals:         1       0       0       0       0
  1935 ;;      Temps:          1       0       0       0       0
  1936 ;;      Totals:         6       0       0       0       0
  1937 ;;Total ram usage:        6 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_sprintf
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946     0258                     ___lwmod:	
  1947                           ;psect for function ___lwmod
  1948                           
  1949     0258                     l1280:	
  1950                           ;incstack = 0
  1951                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1952                           
  1953     0258  0878               	movf	___lwmod@divisor,w
  1954     0259  0479               	iorwf	___lwmod@divisor+1,w
  1955     025A  1903               	btfsc	3,2
  1956     025B  2A5D               	goto	u681
  1957     025C  2A5E               	goto	u680
  1958     025D                     u681:
  1959     025D  2A8D               	goto	l1298
  1960     025E                     u680:
  1961     025E                     l1282:
  1962     025E  01FD               	clrf	___lwmod@counter
  1963     025F  0AFD               	incf	___lwmod@counter,f
  1964     0260  2A6C               	goto	l1288
  1965     0261                     l1284:
  1966     0261  3001               	movlw	1
  1967     0262                     u695:
  1968     0262  1003               	clrc
  1969     0263  0DF8               	rlf	___lwmod@divisor,f
  1970     0264  0DF9               	rlf	___lwmod@divisor+1,f
  1971     0265  3EFF               	addlw	-1
  1972     0266  1D03               	skipz
  1973     0267  2A62               	goto	u695
  1974     0268                     l1286:
  1975     0268  3001               	movlw	1
  1976     0269  00FC               	movwf	??___lwmod
  1977     026A  087C               	movf	??___lwmod,w
  1978     026B  07FD               	addwf	___lwmod@counter,f
  1979     026C                     l1288:
  1980     026C  1FF9               	btfss	___lwmod@divisor+1,7
  1981     026D  2A6F               	goto	u701
  1982     026E  2A70               	goto	u700
  1983     026F                     u701:
  1984     026F  2A61               	goto	l1284
  1985     0270                     u700:
  1986     0270                     l1290:
  1987     0270  0879               	movf	___lwmod@divisor+1,w
  1988     0271  027B               	subwf	___lwmod@dividend+1,w
  1989     0272  1D03               	skipz
  1990     0273  2A76               	goto	u715
  1991     0274  0878               	movf	___lwmod@divisor,w
  1992     0275  027A               	subwf	___lwmod@dividend,w
  1993     0276                     u715:
  1994     0276  1C03               	skipc
  1995     0277  2A79               	goto	u711
  1996     0278  2A7A               	goto	u710
  1997     0279                     u711:
  1998     0279  2A80               	goto	l1294
  1999     027A                     u710:
  2000     027A                     l1292:
  2001     027A  0878               	movf	___lwmod@divisor,w
  2002     027B  02FA               	subwf	___lwmod@dividend,f
  2003     027C  0879               	movf	___lwmod@divisor+1,w
  2004     027D  1C03               	skipc
  2005     027E  03FB               	decf	___lwmod@dividend+1,f
  2006     027F  02FB               	subwf	___lwmod@dividend+1,f
  2007     0280                     l1294:
  2008     0280  3001               	movlw	1
  2009     0281                     u725:
  2010     0281  1003               	clrc
  2011     0282  0CF9               	rrf	___lwmod@divisor+1,f
  2012     0283  0CF8               	rrf	___lwmod@divisor,f
  2013     0284  3EFF               	addlw	-1
  2014     0285  1D03               	skipz
  2015     0286  2A81               	goto	u725
  2016     0287                     l1296:
  2017     0287  3001               	movlw	1
  2018     0288  02FD               	subwf	___lwmod@counter,f
  2019     0289  1D03               	btfss	3,2
  2020     028A  2A8C               	goto	u731
  2021     028B  2A8D               	goto	u730
  2022     028C                     u731:
  2023     028C  2A70               	goto	l1290
  2024     028D                     u730:
  2025     028D                     l1298:
  2026     028D  087B               	movf	___lwmod@dividend+1,w
  2027     028E  00F9               	movwf	?___lwmod+1
  2028     028F  087A               	movf	___lwmod@dividend,w
  2029     0290  00F8               	movwf	?___lwmod
  2030     0291                     l530:
  2031     0291  0008               	return
  2032     0292                     __end_of___lwmod:
  2033                           
  2034                           	psect	text3
  2035     02D4                     __ptext3:	
  2036 ;; *************** function ___lwdiv *****************
  2037 ;; Defined at:
  2038 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  divisor         2    0[COMMON] unsigned int 
  2041 ;;  dividend        2    2[COMMON] unsigned int 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  quotient        2    5[COMMON] unsigned int 
  2044 ;;  counter         1    7[COMMON] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2    0[COMMON] unsigned int 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         4       0       0       0       0
  2055 ;;      Locals:         3       0       0       0       0
  2056 ;;      Temps:          1       0       0       0       0
  2057 ;;      Totals:         8       0       0       0       0
  2058 ;;Total ram usage:        8 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_sprintf
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067     02D4                     ___lwdiv:	
  2068                           ;psect for function ___lwdiv
  2069                           
  2070     02D4                     l1254:	
  2071                           ;incstack = 0
  2072                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2073                           
  2074     02D4  01F5               	clrf	___lwdiv@quotient
  2075     02D5  01F6               	clrf	___lwdiv@quotient+1
  2076     02D6                     l1256:
  2077     02D6  0870               	movf	___lwdiv@divisor,w
  2078     02D7  0471               	iorwf	___lwdiv@divisor+1,w
  2079     02D8  1903               	btfsc	3,2
  2080     02D9  2ADB               	goto	u611
  2081     02DA  2ADC               	goto	u610
  2082     02DB                     u611:
  2083     02DB  2B13               	goto	l1276
  2084     02DC                     u610:
  2085     02DC                     l1258:
  2086     02DC  01F7               	clrf	___lwdiv@counter
  2087     02DD  0AF7               	incf	___lwdiv@counter,f
  2088     02DE  2AEA               	goto	l1264
  2089     02DF                     l1260:
  2090     02DF  3001               	movlw	1
  2091     02E0                     u625:
  2092     02E0  1003               	clrc
  2093     02E1  0DF0               	rlf	___lwdiv@divisor,f
  2094     02E2  0DF1               	rlf	___lwdiv@divisor+1,f
  2095     02E3  3EFF               	addlw	-1
  2096     02E4  1D03               	skipz
  2097     02E5  2AE0               	goto	u625
  2098     02E6                     l1262:
  2099     02E6  3001               	movlw	1
  2100     02E7  00F4               	movwf	??___lwdiv
  2101     02E8  0874               	movf	??___lwdiv,w
  2102     02E9  07F7               	addwf	___lwdiv@counter,f
  2103     02EA                     l1264:
  2104     02EA  1FF1               	btfss	___lwdiv@divisor+1,7
  2105     02EB  2AED               	goto	u631
  2106     02EC  2AEE               	goto	u630
  2107     02ED                     u631:
  2108     02ED  2ADF               	goto	l1260
  2109     02EE                     u630:
  2110     02EE                     l1266:
  2111     02EE  3001               	movlw	1
  2112     02EF                     u645:
  2113     02EF  1003               	clrc
  2114     02F0  0DF5               	rlf	___lwdiv@quotient,f
  2115     02F1  0DF6               	rlf	___lwdiv@quotient+1,f
  2116     02F2  3EFF               	addlw	-1
  2117     02F3  1D03               	skipz
  2118     02F4  2AEF               	goto	u645
  2119     02F5  0871               	movf	___lwdiv@divisor+1,w
  2120     02F6  0273               	subwf	___lwdiv@dividend+1,w
  2121     02F7  1D03               	skipz
  2122     02F8  2AFB               	goto	u655
  2123     02F9  0870               	movf	___lwdiv@divisor,w
  2124     02FA  0272               	subwf	___lwdiv@dividend,w
  2125     02FB                     u655:
  2126     02FB  1C03               	skipc
  2127     02FC  2AFE               	goto	u651
  2128     02FD  2AFF               	goto	u650
  2129     02FE                     u651:
  2130     02FE  2B06               	goto	l1272
  2131     02FF                     u650:
  2132     02FF                     l1268:
  2133     02FF  0870               	movf	___lwdiv@divisor,w
  2134     0300  02F2               	subwf	___lwdiv@dividend,f
  2135     0301  0871               	movf	___lwdiv@divisor+1,w
  2136     0302  1C03               	skipc
  2137     0303  03F3               	decf	___lwdiv@dividend+1,f
  2138     0304  02F3               	subwf	___lwdiv@dividend+1,f
  2139     0305                     l1270:
  2140     0305  1475               	bsf	___lwdiv@quotient,0
  2141     0306                     l1272:
  2142     0306  3001               	movlw	1
  2143     0307                     u665:
  2144     0307  1003               	clrc
  2145     0308  0CF1               	rrf	___lwdiv@divisor+1,f
  2146     0309  0CF0               	rrf	___lwdiv@divisor,f
  2147     030A  3EFF               	addlw	-1
  2148     030B  1D03               	skipz
  2149     030C  2B07               	goto	u665
  2150     030D                     l1274:
  2151     030D  3001               	movlw	1
  2152     030E  02F7               	subwf	___lwdiv@counter,f
  2153     030F  1D03               	btfss	3,2
  2154     0310  2B12               	goto	u671
  2155     0311  2B13               	goto	u670
  2156     0312                     u671:
  2157     0312  2AEE               	goto	l1266
  2158     0313                     u670:
  2159     0313                     l1276:
  2160     0313  0876               	movf	___lwdiv@quotient+1,w
  2161     0314  00F1               	movwf	?___lwdiv+1
  2162     0315  0875               	movf	___lwdiv@quotient,w
  2163     0316  00F0               	movwf	?___lwdiv
  2164     0317                     l520:
  2165     0317  0008               	return
  2166     0318                     __end_of___lwdiv:
  2167                           
  2168                           	psect	text4
  2169     0174                     __ptext4:	
  2170 ;; *************** function _spiWrite *****************
  2171 ;; Defined at:
  2172 ;;		line 34 in file "configSPI.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  dat             1    wreg     unsigned char 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  dat             1    0[COMMON] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         0       0       0       0       0
  2187 ;;      Locals:         1       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0
  2189 ;;      Totals:         1       0       0       0       0
  2190 ;;Total ram usage:        1 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199     0174                     _spiWrite:	
  2200                           ;psect for function _spiWrite
  2201                           
  2202                           
  2203                           ;incstack = 0
  2204                           ; Regs used in _spiWrite: [wreg]
  2205                           ;spiWrite@dat stored from wreg
  2206     0174  00F0               	movwf	spiWrite@dat
  2207     0175                     l1302:
  2208                           
  2209                           ;configSPI.c: 34: void spiWrite(char dat);configSPI.c: 35: {;configSPI.c: 36:     SSPBUF
      +                           = dat;
  2210     0175  0870               	movf	spiWrite@dat,w
  2211     0176  1283               	bcf	3,5	;RP0=0, select bank0
  2212     0177  1303               	bcf	3,6	;RP1=0, select bank0
  2213     0178  0093               	movwf	19	;volatile
  2214     0179                     l26:
  2215     0179  0008               	return
  2216     017A                     __end_of_spiWrite:
  2217                           
  2218                           	psect	text5
  2219     0181                     __ptext5:	
  2220 ;; *************** function _spiRead *****************
  2221 ;; Defined at:
  2222 ;;		line 47 in file "configSPI.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      unsigned char 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         0       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0
  2239 ;;      Totals:         0       0       0       0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 1
  2243 ;; This function calls:
  2244 ;;		_spiReceiveWait
  2245 ;; This function is called by:
  2246 ;;		_main
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250     0181                     _spiRead:	
  2251                           ;psect for function _spiRead
  2252                           
  2253     0181                     l1304:	
  2254                           ;incstack = 0
  2255                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2256                           
  2257                           
  2258                           ;configSPI.c: 49:     spiReceiveWait();
  2259     0181  120A  118A  217A  120A  118A  	fcall	_spiReceiveWait
  2260     0186                     l1306:
  2261                           
  2262                           ;configSPI.c: 50:     return(SSPBUF);
  2263     0186  1283               	bcf	3,5	;RP0=0, select bank0
  2264     0187  1303               	bcf	3,6	;RP1=0, select bank0
  2265     0188  0813               	movf	19,w	;volatile
  2266     0189                     l34:
  2267     0189  0008               	return
  2268     018A                     __end_of_spiRead:
  2269                           
  2270                           	psect	text6
  2271     017A                     __ptext6:	
  2272 ;; *************** function _spiReceiveWait *****************
  2273 ;; Defined at:
  2274 ;;		line 29 in file "configSPI.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		None
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_spiRead
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301     017A                     _spiReceiveWait:	
  2302                           ;psect for function _spiReceiveWait
  2303                           
  2304     017A                     l1218:	
  2305                           ;incstack = 0
  2306                           ; Regs used in _spiReceiveWait: []
  2307                           
  2308     017A                     l20:	
  2309                           ;configSPI.c: 31:     while ( !SSPSTATbits.BF );
  2310                           
  2311     017A  1683               	bsf	3,5	;RP0=1, select bank1
  2312     017B  1303               	bcf	3,6	;RP1=0, select bank1
  2313     017C  1C14               	btfss	20,0	;volatile
  2314     017D  297F               	goto	u591
  2315     017E  2980               	goto	u590
  2316     017F                     u591:
  2317     017F  297A               	goto	l20
  2318     0180                     u590:
  2319     0180                     l23:
  2320     0180  0008               	return
  2321     0181                     __end_of_spiReceiveWait:
  2322                           
  2323                           	psect	text7
  2324     01F6                     __ptext7:	
  2325 ;; *************** function _setup *****************
  2326 ;; Defined at:
  2327 ;;		line 181 in file "main_M.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         0       0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0
  2344 ;;      Totals:         0       0       0       0       0
  2345 ;;Total ram usage:        0 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 3
  2348 ;; This function calls:
  2349 ;;		_Lcd_Init_4bits
  2350 ;;		_setupINTOSC
  2351 ;;		_spiInit
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357     01F6                     _setup:	
  2358                           ;psect for function _setup
  2359                           
  2360     01F6                     l1340:	
  2361                           ;incstack = 0
  2362                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2363                           
  2364                           
  2365                           ;main_M.c: 183:     ANSEL = 0;
  2366     01F6  1683               	bsf	3,5	;RP0=1, select bank3
  2367     01F7  1703               	bsf	3,6	;RP1=1, select bank3
  2368     01F8  0188               	clrf	8	;volatile
  2369                           
  2370                           ;main_M.c: 184:     ANSELH = 0;
  2371     01F9  0189               	clrf	9	;volatile
  2372                           
  2373                           ;main_M.c: 186:     TRISB = 0;
  2374     01FA  1683               	bsf	3,5	;RP0=1, select bank1
  2375     01FB  1303               	bcf	3,6	;RP1=0, select bank1
  2376     01FC  0186               	clrf	6	;volatile
  2377                           
  2378                           ;main_M.c: 187:     TRISD = 0;
  2379     01FD  0188               	clrf	8	;volatile
  2380                           
  2381                           ;main_M.c: 189:     PORTB = 0;
  2382     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2383     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2384     0200  0186               	clrf	6	;volatile
  2385                           
  2386                           ;main_M.c: 190:     PORTD = 0;
  2387     0201  0188               	clrf	8	;volatile
  2388     0202                     l1342:
  2389                           
  2390                           ;main_M.c: 192:     setupINTOSC(FOSC_4MHZ);
  2391     0202  3006               	movlw	6
  2392     0203  120A  118A  2197  120A  118A  	fcall	_setupINTOSC
  2393     0208                     l1344:
  2394                           
  2395                           ;main_M.c: 193:     Lcd_Init_4bits();
  2396     0208  120A  118A  23B9  120A  118A  	fcall	_Lcd_Init_4bits
  2397     020D                     l1346:
  2398                           
  2399                           ;main_M.c: 196:     TRISC1 = 0;
  2400     020D  1683               	bsf	3,5	;RP0=1, select bank1
  2401     020E  1303               	bcf	3,6	;RP1=0, select bank1
  2402     020F  1087               	bcf	7,1	;volatile
  2403     0210                     l1348:
  2404                           
  2405                           ;main_M.c: 197:     PORTCbits.RC1 = 1;
  2406     0210  1283               	bcf	3,5	;RP0=0, select bank0
  2407     0211  1303               	bcf	3,6	;RP1=0, select bank0
  2408     0212  1487               	bsf	7,1	;volatile
  2409     0213                     l1350:
  2410                           
  2411                           ;main_M.c: 198:     TRISC2 = 0;
  2412     0213  1683               	bsf	3,5	;RP0=1, select bank1
  2413     0214  1303               	bcf	3,6	;RP1=0, select bank1
  2414     0215  1107               	bcf	7,2	;volatile
  2415     0216                     l1352:
  2416                           
  2417                           ;main_M.c: 199:     PORTCbits.RC2 = 1;
  2418     0216  1283               	bcf	3,5	;RP0=0, select bank0
  2419     0217  1303               	bcf	3,6	;RP1=0, select bank0
  2420     0218  1507               	bsf	7,2	;volatile
  2421     0219                     l1354:
  2422                           
  2423                           ;main_M.c: 200:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
  2424     0219  01F0               	clrf	spiInit@sDataSample
  2425     021A  01F1               	clrf	spiInit@sClockIdle
  2426     021B  01F2               	clrf	spiInit@sTransmitEdge
  2427     021C  3020               	movlw	32
  2428     021D  120A  118A  21A4  120A  118A  	fcall	_spiInit
  2429     0222                     l137:
  2430     0222  0008               	return
  2431     0223                     __end_of_setup:
  2432                           
  2433                           	psect	text8
  2434     01A4                     __ptext8:	
  2435 ;; *************** function _spiInit *****************
  2436 ;; Defined at:
  2437 ;;		line 12 in file "configSPI.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  sType           1    wreg     enum E1292
  2440 ;;  sDataSample     1    0[COMMON] enum E1300
  2441 ;;  sClockIdle      1    1[COMMON] enum E1304
  2442 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  sType           1    3[COMMON] enum E1292
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2454 ;;      Params:         3       0       0       0       0
  2455 ;;      Locals:         1       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0
  2457 ;;      Totals:         4       0       0       0       0
  2458 ;;Total ram usage:        4 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_setup
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467     01A4                     _spiInit:	
  2468                           ;psect for function _spiInit
  2469                           
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2473                           ;spiInit@sType stored from wreg
  2474     01A4  00F3               	movwf	spiInit@sType
  2475     01A5                     l1208:
  2476                           
  2477                           ;configSPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);configSPI.c: 13: {;configSPI.c: 14:     
      +                          TRISC5 = 0;
  2478     01A5  1683               	bsf	3,5	;RP0=1, select bank1
  2479     01A6  1303               	bcf	3,6	;RP1=0, select bank1
  2480     01A7  1287               	bcf	7,5	;volatile
  2481                           
  2482                           ;configSPI.c: 15:     if(sType & 0b00000100)
  2483     01A8  1D73               	btfss	spiInit@sType,2
  2484     01A9  29AB               	goto	u581
  2485     01AA  29AC               	goto	u580
  2486     01AB                     u581:
  2487     01AB  29B0               	goto	l1214
  2488     01AC                     u580:
  2489     01AC                     l1210:
  2490                           
  2491                           ;configSPI.c: 16:     {;configSPI.c: 17:         SSPSTAT = sTransmitEdge;
  2492     01AC  0872               	movf	spiInit@sTransmitEdge,w
  2493     01AD  0094               	movwf	20	;volatile
  2494     01AE                     l1212:
  2495                           
  2496                           ;configSPI.c: 18:         TRISC3 = 1;
  2497     01AE  1587               	bsf	7,3	;volatile
  2498                           
  2499                           ;configSPI.c: 19:     }
  2500     01AF  29B4               	goto	l16
  2501     01B0                     l1214:
  2502                           
  2503                           ;configSPI.c: 21:     {;configSPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2504     01B0  0870               	movf	spiInit@sDataSample,w
  2505     01B1  0472               	iorwf	spiInit@sTransmitEdge,w
  2506     01B2  0094               	movwf	20	;volatile
  2507     01B3                     l1216:
  2508                           
  2509                           ;configSPI.c: 23:         TRISC3 = 0;
  2510     01B3  1187               	bcf	7,3	;volatile
  2511     01B4                     l16:	
  2512                           ;configSPI.c: 24:     }
  2513                           
  2514                           
  2515                           ;configSPI.c: 26:     SSPCON = sType | sClockIdle;
  2516     01B4  0873               	movf	spiInit@sType,w
  2517     01B5  0471               	iorwf	spiInit@sClockIdle,w
  2518     01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2519     01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2520     01B8  0094               	movwf	20	;volatile
  2521     01B9                     l17:
  2522     01B9  0008               	return
  2523     01BA                     __end_of_spiInit:
  2524                           
  2525                           	psect	text9
  2526     0197                     __ptext9:	
  2527 ;; *************** function _setupINTOSC *****************
  2528 ;; Defined at:
  2529 ;;		line 11 in file "configINTOSC.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  F               1    wreg     enum E1292
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  F               1    1[COMMON] enum E1292
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2543 ;;      Params:         0       0       0       0       0
  2544 ;;      Locals:         1       0       0       0       0
  2545 ;;      Temps:          1       0       0       0       0
  2546 ;;      Totals:         2       0       0       0       0
  2547 ;;Total ram usage:        2 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_setup
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556     0197                     _setupINTOSC:	
  2557                           ;psect for function _setupINTOSC
  2558                           
  2559                           
  2560                           ;incstack = 0
  2561                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  2562                           ;setupINTOSC@F stored from wreg
  2563     0197  00F1               	movwf	setupINTOSC@F
  2564     0198                     l1220:
  2565                           
  2566                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  2567     0198  0871               	movf	setupINTOSC@F,w
  2568     0199  00F0               	movwf	??_setupINTOSC
  2569     019A  0EF0               	swapf	??_setupINTOSC,f
  2570     019B  1683               	bsf	3,5	;RP0=1, select bank1
  2571     019C  1303               	bcf	3,6	;RP1=0, select bank1
  2572     019D  080F               	movf	15,w	;volatile
  2573     019E  0670               	xorwf	??_setupINTOSC,w
  2574     019F  398F               	andlw	-113
  2575     01A0  0670               	xorwf	??_setupINTOSC,w
  2576     01A1  008F               	movwf	15	;volatile
  2577     01A2                     l1222:
  2578                           
  2579                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  2580     01A2  140F               	bsf	15,0	;volatile
  2581     01A3                     l39:
  2582     01A3  0008               	return
  2583     01A4                     __end_of_setupINTOSC:
  2584                           
  2585                           	psect	text10
  2586     03B9                     __ptext10:	
  2587 ;; *************** function _Lcd_Init_4bits *****************
  2588 ;; Defined at:
  2589 ;;		line 66 in file "configLCD_4bits.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0
  2605 ;;      Temps:          2       0       0       0       0
  2606 ;;      Totals:         2       0       0       0       0
  2607 ;;Total ram usage:        2 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 2
  2610 ;; This function calls:
  2611 ;;		_Lcd_Cmd_4bits
  2612 ;;		_Lcd_Port_4bits
  2613 ;; This function is called by:
  2614 ;;		_setup
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618     03B9                     _Lcd_Init_4bits:	
  2619                           ;psect for function _Lcd_Init_4bits
  2620                           
  2621     03B9                     l1224:	
  2622                           ;incstack = 0
  2623                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  2624                           
  2625                           
  2626                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  2627     03B9  3000               	movlw	0
  2628     03BA  120A  118A  21D4  120A  118A  	fcall	_Lcd_Port_4bits
  2629     03BF                     l1226:
  2630                           
  2631                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2632     03BF  3034               	movlw	52
  2633     03C0  00F5               	movwf	??_Lcd_Init_4bits+1
  2634     03C1  30F1               	movlw	241
  2635     03C2  00F4               	movwf	??_Lcd_Init_4bits
  2636     03C3                     u1117:
  2637     03C3  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2638     03C4  2BC3               	goto	u1117
  2639     03C5  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2640     03C6  2BC3               	goto	u1117
  2641     03C7  2BC8               	nop2
  2642     03C8                     l1228:
  2643                           
  2644                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  2645     03C8  3003               	movlw	3
  2646     03C9  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  2647                           
  2648                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2649     03CE  300D               	movlw	13
  2650     03CF  00F5               	movwf	??_Lcd_Init_4bits+1
  2651     03D0  30FB               	movlw	251
  2652     03D1  00F4               	movwf	??_Lcd_Init_4bits
  2653     03D2                     u1127:
  2654     03D2  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2655     03D3  2BD2               	goto	u1127
  2656     03D4  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2657     03D5  2BD2               	goto	u1127
  2658     03D6  2BD7               	nop2
  2659     03D7                     l1230:
  2660                           
  2661                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  2662     03D7  3003               	movlw	3
  2663     03D8  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  2664     03DD                     l1232:
  2665                           
  2666                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2667     03DD  301D               	movlw	29
  2668     03DE  00F5               	movwf	??_Lcd_Init_4bits+1
  2669     03DF  3091               	movlw	145
  2670     03E0  00F4               	movwf	??_Lcd_Init_4bits
  2671     03E1                     u1137:
  2672     03E1  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2673     03E2  2BE1               	goto	u1137
  2674     03E3  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2675     03E4  2BE1               	goto	u1137
  2676                           
  2677                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  2678     03E5  3003               	movlw	3
  2679     03E6  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  2680                           
  2681                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  2682     03EB  3002               	movlw	2
  2683     03EC  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  2684                           
  2685                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  2686     03F1  3002               	movlw	2
  2687     03F2  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  2688                           
  2689                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  2690     03F7  3008               	movlw	8
  2691     03F8  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  2692                           
  2693                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  2694     03FD  3000               	movlw	0
  2695     03FE  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  2696                           
  2697                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  2698     0403  300C               	movlw	12
  2699     0404  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  2700                           
  2701                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  2702     0409  3000               	movlw	0
  2703     040A  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  2704                           
  2705                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  2706     040F  3006               	movlw	6
  2707     0410  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  2708     0415                     l69:
  2709     0415  0008               	return
  2710     0416                     __end_of_Lcd_Init_4bits:
  2711                           
  2712                           	psect	text11
  2713     035E                     __ptext11:	
  2714 ;; *************** function ___awmod *****************
  2715 ;; Defined at:
  2716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  divisor         2    9[COMMON] int 
  2719 ;;  dividend        2   11[COMMON] int 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  sign            1    1[BANK0 ] unsigned char 
  2722 ;;  counter         1    0[BANK0 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  2    9[COMMON] int 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         4       0       0       0       0
  2733 ;;      Locals:         0       2       0       0       0
  2734 ;;      Temps:          1       0       0       0       0
  2735 ;;      Totals:         5       2       0       0       0
  2736 ;;Total ram usage:        7 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_main
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745     035E                     ___awmod:	
  2746                           ;psect for function ___awmod
  2747                           
  2748     035E                     l1452:	
  2749                           ;incstack = 0
  2750                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2751                           
  2752     035E  1283               	bcf	3,5	;RP0=0, select bank0
  2753     035F  1303               	bcf	3,6	;RP1=0, select bank0
  2754     0360  01A1               	clrf	___awmod@sign
  2755     0361                     l1454:
  2756     0361  1FFC               	btfss	___awmod@dividend+1,7
  2757     0362  2B64               	goto	u961
  2758     0363  2B65               	goto	u960
  2759     0364                     u961:
  2760     0364  2B6C               	goto	l1460
  2761     0365                     u960:
  2762     0365                     l1456:
  2763     0365  09FB               	comf	___awmod@dividend,f
  2764     0366  09FC               	comf	___awmod@dividend+1,f
  2765     0367  0AFB               	incf	___awmod@dividend,f
  2766     0368  1903               	skipnz
  2767     0369  0AFC               	incf	___awmod@dividend+1,f
  2768     036A                     l1458:
  2769     036A  01A1               	clrf	___awmod@sign
  2770     036B  0AA1               	incf	___awmod@sign,f
  2771     036C                     l1460:
  2772     036C  1FFA               	btfss	___awmod@divisor+1,7
  2773     036D  2B6F               	goto	u971
  2774     036E  2B70               	goto	u970
  2775     036F                     u971:
  2776     036F  2B75               	goto	l1464
  2777     0370                     u970:
  2778     0370                     l1462:
  2779     0370  09F9               	comf	___awmod@divisor,f
  2780     0371  09FA               	comf	___awmod@divisor+1,f
  2781     0372  0AF9               	incf	___awmod@divisor,f
  2782     0373  1903               	skipnz
  2783     0374  0AFA               	incf	___awmod@divisor+1,f
  2784     0375                     l1464:
  2785     0375  0879               	movf	___awmod@divisor,w
  2786     0376  047A               	iorwf	___awmod@divisor+1,w
  2787     0377  1903               	btfsc	3,2
  2788     0378  2B7A               	goto	u981
  2789     0379  2B7B               	goto	u980
  2790     037A                     u981:
  2791     037A  2BAA               	goto	l1482
  2792     037B                     u980:
  2793     037B                     l1466:
  2794     037B  01A0               	clrf	___awmod@counter
  2795     037C  0AA0               	incf	___awmod@counter,f
  2796     037D  2B89               	goto	l1472
  2797     037E                     l1468:
  2798     037E  3001               	movlw	1
  2799     037F                     u995:
  2800     037F  1003               	clrc
  2801     0380  0DF9               	rlf	___awmod@divisor,f
  2802     0381  0DFA               	rlf	___awmod@divisor+1,f
  2803     0382  3EFF               	addlw	-1
  2804     0383  1D03               	skipz
  2805     0384  2B7F               	goto	u995
  2806     0385                     l1470:
  2807     0385  3001               	movlw	1
  2808     0386  00FD               	movwf	??___awmod
  2809     0387  087D               	movf	??___awmod,w
  2810     0388  07A0               	addwf	___awmod@counter,f
  2811     0389                     l1472:
  2812     0389  1FFA               	btfss	___awmod@divisor+1,7
  2813     038A  2B8C               	goto	u1001
  2814     038B  2B8D               	goto	u1000
  2815     038C                     u1001:
  2816     038C  2B7E               	goto	l1468
  2817     038D                     u1000:
  2818     038D                     l1474:
  2819     038D  087A               	movf	___awmod@divisor+1,w
  2820     038E  027C               	subwf	___awmod@dividend+1,w
  2821     038F  1D03               	skipz
  2822     0390  2B93               	goto	u1015
  2823     0391  0879               	movf	___awmod@divisor,w
  2824     0392  027B               	subwf	___awmod@dividend,w
  2825     0393                     u1015:
  2826     0393  1C03               	skipc
  2827     0394  2B96               	goto	u1011
  2828     0395  2B97               	goto	u1010
  2829     0396                     u1011:
  2830     0396  2B9D               	goto	l1478
  2831     0397                     u1010:
  2832     0397                     l1476:
  2833     0397  0879               	movf	___awmod@divisor,w
  2834     0398  02FB               	subwf	___awmod@dividend,f
  2835     0399  087A               	movf	___awmod@divisor+1,w
  2836     039A  1C03               	skipc
  2837     039B  03FC               	decf	___awmod@dividend+1,f
  2838     039C  02FC               	subwf	___awmod@dividend+1,f
  2839     039D                     l1478:
  2840     039D  3001               	movlw	1
  2841     039E                     u1025:
  2842     039E  1003               	clrc
  2843     039F  0CFA               	rrf	___awmod@divisor+1,f
  2844     03A0  0CF9               	rrf	___awmod@divisor,f
  2845     03A1  3EFF               	addlw	-1
  2846     03A2  1D03               	skipz
  2847     03A3  2B9E               	goto	u1025
  2848     03A4                     l1480:
  2849     03A4  3001               	movlw	1
  2850     03A5  02A0               	subwf	___awmod@counter,f
  2851     03A6  1D03               	btfss	3,2
  2852     03A7  2BA9               	goto	u1031
  2853     03A8  2BAA               	goto	u1030
  2854     03A9                     u1031:
  2855     03A9  2B8D               	goto	l1474
  2856     03AA                     u1030:
  2857     03AA                     l1482:
  2858     03AA  0821               	movf	___awmod@sign,w
  2859     03AB  1903               	btfsc	3,2
  2860     03AC  2BAE               	goto	u1041
  2861     03AD  2BAF               	goto	u1040
  2862     03AE                     u1041:
  2863     03AE  2BB4               	goto	l1486
  2864     03AF                     u1040:
  2865     03AF                     l1484:
  2866     03AF  09FB               	comf	___awmod@dividend,f
  2867     03B0  09FC               	comf	___awmod@dividend+1,f
  2868     03B1  0AFB               	incf	___awmod@dividend,f
  2869     03B2  1903               	skipnz
  2870     03B3  0AFC               	incf	___awmod@dividend+1,f
  2871     03B4                     l1486:
  2872     03B4  087C               	movf	___awmod@dividend+1,w
  2873     03B5  00FA               	movwf	?___awmod+1
  2874     03B6  087B               	movf	___awmod@dividend,w
  2875     03B7  00F9               	movwf	?___awmod
  2876     03B8                     l414:
  2877     03B8  0008               	return
  2878     03B9                     __end_of___awmod:
  2879                           
  2880                           	psect	text12
  2881     0416                     __ptext12:	
  2882 ;; *************** function ___awdiv *****************
  2883 ;; Defined at:
  2884 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  divisor         2    0[COMMON] int 
  2887 ;;  dividend        2    2[COMMON] int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  quotient        2    7[COMMON] int 
  2890 ;;  sign            1    6[COMMON] unsigned char 
  2891 ;;  counter         1    5[COMMON] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  2    0[COMMON] int 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2901 ;;      Params:         4       0       0       0       0
  2902 ;;      Locals:         4       0       0       0       0
  2903 ;;      Temps:          1       0       0       0       0
  2904 ;;      Totals:         9       0       0       0       0
  2905 ;;Total ram usage:        9 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914     0416                     ___awdiv:	
  2915                           ;psect for function ___awdiv
  2916                           
  2917     0416                     l1408:	
  2918                           ;incstack = 0
  2919                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2920                           
  2921     0416  01F6               	clrf	___awdiv@sign
  2922     0417                     l1410:
  2923     0417  1FF1               	btfss	___awdiv@divisor+1,7
  2924     0418  2C1A               	goto	u861
  2925     0419  2C1B               	goto	u860
  2926     041A                     u861:
  2927     041A  2C22               	goto	l1416
  2928     041B                     u860:
  2929     041B                     l1412:
  2930     041B  09F0               	comf	___awdiv@divisor,f
  2931     041C  09F1               	comf	___awdiv@divisor+1,f
  2932     041D  0AF0               	incf	___awdiv@divisor,f
  2933     041E  1903               	skipnz
  2934     041F  0AF1               	incf	___awdiv@divisor+1,f
  2935     0420                     l1414:
  2936     0420  01F6               	clrf	___awdiv@sign
  2937     0421  0AF6               	incf	___awdiv@sign,f
  2938     0422                     l1416:
  2939     0422  1FF3               	btfss	___awdiv@dividend+1,7
  2940     0423  2C25               	goto	u871
  2941     0424  2C26               	goto	u870
  2942     0425                     u871:
  2943     0425  2C2F               	goto	l1422
  2944     0426                     u870:
  2945     0426                     l1418:
  2946     0426  09F2               	comf	___awdiv@dividend,f
  2947     0427  09F3               	comf	___awdiv@dividend+1,f
  2948     0428  0AF2               	incf	___awdiv@dividend,f
  2949     0429  1903               	skipnz
  2950     042A  0AF3               	incf	___awdiv@dividend+1,f
  2951     042B                     l1420:
  2952     042B  3001               	movlw	1
  2953     042C  00F4               	movwf	??___awdiv
  2954     042D  0874               	movf	??___awdiv,w
  2955     042E  06F6               	xorwf	___awdiv@sign,f
  2956     042F                     l1422:
  2957     042F  01F7               	clrf	___awdiv@quotient
  2958     0430  01F8               	clrf	___awdiv@quotient+1
  2959     0431                     l1424:
  2960     0431  0870               	movf	___awdiv@divisor,w
  2961     0432  0471               	iorwf	___awdiv@divisor+1,w
  2962     0433  1903               	btfsc	3,2
  2963     0434  2C36               	goto	u881
  2964     0435  2C37               	goto	u880
  2965     0436                     u881:
  2966     0436  2C6E               	goto	l1444
  2967     0437                     u880:
  2968     0437                     l1426:
  2969     0437  01F5               	clrf	___awdiv@counter
  2970     0438  0AF5               	incf	___awdiv@counter,f
  2971     0439  2C45               	goto	l1432
  2972     043A                     l1428:
  2973     043A  3001               	movlw	1
  2974     043B                     u895:
  2975     043B  1003               	clrc
  2976     043C  0DF0               	rlf	___awdiv@divisor,f
  2977     043D  0DF1               	rlf	___awdiv@divisor+1,f
  2978     043E  3EFF               	addlw	-1
  2979     043F  1D03               	skipz
  2980     0440  2C3B               	goto	u895
  2981     0441                     l1430:
  2982     0441  3001               	movlw	1
  2983     0442  00F4               	movwf	??___awdiv
  2984     0443  0874               	movf	??___awdiv,w
  2985     0444  07F5               	addwf	___awdiv@counter,f
  2986     0445                     l1432:
  2987     0445  1FF1               	btfss	___awdiv@divisor+1,7
  2988     0446  2C48               	goto	u901
  2989     0447  2C49               	goto	u900
  2990     0448                     u901:
  2991     0448  2C3A               	goto	l1428
  2992     0449                     u900:
  2993     0449                     l1434:
  2994     0449  3001               	movlw	1
  2995     044A                     u915:
  2996     044A  1003               	clrc
  2997     044B  0DF7               	rlf	___awdiv@quotient,f
  2998     044C  0DF8               	rlf	___awdiv@quotient+1,f
  2999     044D  3EFF               	addlw	-1
  3000     044E  1D03               	skipz
  3001     044F  2C4A               	goto	u915
  3002     0450  0871               	movf	___awdiv@divisor+1,w
  3003     0451  0273               	subwf	___awdiv@dividend+1,w
  3004     0452  1D03               	skipz
  3005     0453  2C56               	goto	u925
  3006     0454  0870               	movf	___awdiv@divisor,w
  3007     0455  0272               	subwf	___awdiv@dividend,w
  3008     0456                     u925:
  3009     0456  1C03               	skipc
  3010     0457  2C59               	goto	u921
  3011     0458  2C5A               	goto	u920
  3012     0459                     u921:
  3013     0459  2C61               	goto	l1440
  3014     045A                     u920:
  3015     045A                     l1436:
  3016     045A  0870               	movf	___awdiv@divisor,w
  3017     045B  02F2               	subwf	___awdiv@dividend,f
  3018     045C  0871               	movf	___awdiv@divisor+1,w
  3019     045D  1C03               	skipc
  3020     045E  03F3               	decf	___awdiv@dividend+1,f
  3021     045F  02F3               	subwf	___awdiv@dividend+1,f
  3022     0460                     l1438:
  3023     0460  1477               	bsf	___awdiv@quotient,0
  3024     0461                     l1440:
  3025     0461  3001               	movlw	1
  3026     0462                     u935:
  3027     0462  1003               	clrc
  3028     0463  0CF1               	rrf	___awdiv@divisor+1,f
  3029     0464  0CF0               	rrf	___awdiv@divisor,f
  3030     0465  3EFF               	addlw	-1
  3031     0466  1D03               	skipz
  3032     0467  2C62               	goto	u935
  3033     0468                     l1442:
  3034     0468  3001               	movlw	1
  3035     0469  02F5               	subwf	___awdiv@counter,f
  3036     046A  1D03               	btfss	3,2
  3037     046B  2C6D               	goto	u941
  3038     046C  2C6E               	goto	u940
  3039     046D                     u941:
  3040     046D  2C49               	goto	l1434
  3041     046E                     u940:
  3042     046E                     l1444:
  3043     046E  0876               	movf	___awdiv@sign,w
  3044     046F  1903               	btfsc	3,2
  3045     0470  2C72               	goto	u951
  3046     0471  2C73               	goto	u950
  3047     0472                     u951:
  3048     0472  2C78               	goto	l1448
  3049     0473                     u950:
  3050     0473                     l1446:
  3051     0473  09F7               	comf	___awdiv@quotient,f
  3052     0474  09F8               	comf	___awdiv@quotient+1,f
  3053     0475  0AF7               	incf	___awdiv@quotient,f
  3054     0476  1903               	skipnz
  3055     0477  0AF8               	incf	___awdiv@quotient+1,f
  3056     0478                     l1448:
  3057     0478  0878               	movf	___awdiv@quotient+1,w
  3058     0479  00F1               	movwf	?___awdiv+1
  3059     047A  0877               	movf	___awdiv@quotient,w
  3060     047B  00F0               	movwf	?___awdiv
  3061     047C                     l401:
  3062     047C  0008               	return
  3063     047D                     __end_of___awdiv:
  3064                           
  3065                           	psect	text13
  3066     0292                     __ptext13:	
  3067 ;; *************** function _Lcd_Write_String_4bits *****************
  3068 ;; Defined at:
  3069 ;;		line 99 in file "configLCD_4bits.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  a               2    5[COMMON] PTR unsigned char 
  3072 ;;		 -> main@CONT_S(9), main@ADC2(9), main@ADC1(9), STR_3(4), 
  3073 ;;		 -> STR_2(4), STR_1(4), 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  i               2   10[COMMON] int 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3085 ;;      Params:         2       0       0       0       0
  3086 ;;      Locals:         2       0       0       0       0
  3087 ;;      Temps:          3       0       0       0       0
  3088 ;;      Totals:         7       0       0       0       0
  3089 ;;Total ram usage:        7 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 2
  3092 ;; This function calls:
  3093 ;;		_Lcd_Write_Char_4bits
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099     0292                     _Lcd_Write_String_4bits:	
  3100                           ;psect for function _Lcd_Write_String_4bits
  3101                           
  3102     0292                     l1332:	
  3103                           ;incstack = 0
  3104                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3105                           
  3106                           
  3107                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  3108     0292  01FA               	clrf	Lcd_Write_String_4bits@i
  3109     0293  01FB               	clrf	Lcd_Write_String_4bits@i+1
  3110     0294  2AB7               	goto	l1338
  3111     0295                     l1334:
  3112                           
  3113                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  3114     0295  087A               	movf	Lcd_Write_String_4bits@i,w
  3115     0296  0775               	addwf	Lcd_Write_String_4bits@a,w
  3116     0297  00F8               	movwf	??_Lcd_Write_String_4bits+1
  3117     0298  0876               	movf	Lcd_Write_String_4bits@a+1,w
  3118     0299  00F7               	movwf	??_Lcd_Write_String_4bits
  3119     029A  1803               	skipnc
  3120     029B  0AF7               	incf	??_Lcd_Write_String_4bits,f
  3121     029C  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  3122     029D  2A9F               	goto	u780
  3123     029E  03F7               	decf	??_Lcd_Write_String_4bits,f
  3124     029F                     u780:
  3125     029F  0877               	movf	??_Lcd_Write_String_4bits,w
  3126     02A0  00F9               	movwf	??_Lcd_Write_String_4bits+2
  3127     02A1  0879               	movf	??_Lcd_Write_String_4bits+2,w
  3128     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3129     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3130     02A4  00FF               	movwf	btemp+1
  3131     02A5  0878               	movf	??_Lcd_Write_String_4bits+1,w
  3132     02A6  0084               	movwf	4
  3133     02A7  120A  118A  2003  120A  118A  	fcall	stringtab
  3134     02AC  120A  118A  2223  120A  118A  	fcall	_Lcd_Write_Char_4bits
  3135     02B1                     l1336:
  3136     02B1  3001               	movlw	1
  3137     02B2  07FA               	addwf	Lcd_Write_String_4bits@i,f
  3138     02B3  1803               	skipnc
  3139     02B4  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
  3140     02B5  3000               	movlw	0
  3141     02B6  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
  3142     02B7                     l1338:
  3143     02B7  087A               	movf	Lcd_Write_String_4bits@i,w
  3144     02B8  0775               	addwf	Lcd_Write_String_4bits@a,w
  3145     02B9  00F8               	movwf	??_Lcd_Write_String_4bits+1
  3146     02BA  0876               	movf	Lcd_Write_String_4bits@a+1,w
  3147     02BB  00F7               	movwf	??_Lcd_Write_String_4bits
  3148     02BC  1803               	skipnc
  3149     02BD  0AF7               	incf	??_Lcd_Write_String_4bits,f
  3150     02BE  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  3151     02BF  2AC1               	goto	u790
  3152     02C0  03F7               	decf	??_Lcd_Write_String_4bits,f
  3153     02C1                     u790:
  3154     02C1  0877               	movf	??_Lcd_Write_String_4bits,w
  3155     02C2  00F9               	movwf	??_Lcd_Write_String_4bits+2
  3156     02C3  0879               	movf	??_Lcd_Write_String_4bits+2,w
  3157     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  3158     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  3159     02C6  00FF               	movwf	btemp+1
  3160     02C7  0878               	movf	??_Lcd_Write_String_4bits+1,w
  3161     02C8  0084               	movwf	4
  3162     02C9  120A  118A  2003  120A  118A  	fcall	stringtab
  3163     02CE  3A00               	xorlw	0
  3164     02CF  1D03               	skipz
  3165     02D0  2AD2               	goto	u801
  3166     02D1  2AD3               	goto	u800
  3167     02D2                     u801:
  3168     02D2  2A95               	goto	l1334
  3169     02D3                     u800:
  3170     02D3                     l78:
  3171     02D3  0008               	return
  3172     02D4                     __end_of_Lcd_Write_String_4bits:
  3173                           
  3174                           	psect	text14
  3175     0223                     __ptext14:	
  3176 ;; *************** function _Lcd_Write_Char_4bits *****************
  3177 ;; Defined at:
  3178 ;;		line 84 in file "configLCD_4bits.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  a               1    wreg     unsigned char 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  a               1    4[COMMON] unsigned char 
  3183 ;;  y               1    3[COMMON] unsigned char 
  3184 ;;  temp            1    2[COMMON] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, pclath, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3194 ;;      Params:         0       0       0       0       0
  3195 ;;      Locals:         3       0       0       0       0
  3196 ;;      Temps:          1       0       0       0       0
  3197 ;;      Totals:         4       0       0       0       0
  3198 ;;Total ram usage:        4 bytes
  3199 ;; Hardware stack levels used: 1
  3200 ;; Hardware stack levels required when called: 1
  3201 ;; This function calls:
  3202 ;;		_Lcd_Port_4bits
  3203 ;; This function is called by:
  3204 ;;		_Lcd_Write_String_4bits
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208     0223                     _Lcd_Write_Char_4bits:	
  3209                           ;psect for function _Lcd_Write_Char_4bits
  3210                           
  3211                           
  3212                           ;incstack = 0
  3213                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  3214                           ;Lcd_Write_Char_4bits@a stored from wreg
  3215     0223  00F4               	movwf	Lcd_Write_Char_4bits@a
  3216     0224                     l1234:
  3217                           
  3218                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  3219     0224  0874               	movf	Lcd_Write_Char_4bits@a,w
  3220     0225  390F               	andlw	15
  3221     0226  00F2               	movwf	Lcd_Write_Char_4bits@temp
  3222                           
  3223                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  3224     0227  0874               	movf	Lcd_Write_Char_4bits@a,w
  3225     0228  39F0               	andlw	240
  3226     0229  00F3               	movwf	Lcd_Write_Char_4bits@y
  3227     022A                     l1236:
  3228                           
  3229                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  3230     022A  1283               	bcf	3,5	;RP0=0, select bank0
  3231     022B  1303               	bcf	3,6	;RP1=0, select bank0
  3232     022C  1508               	bsf	8,2	;volatile
  3233     022D                     l1238:
  3234                           
  3235                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  3236     022D  0873               	movf	Lcd_Write_Char_4bits@y,w
  3237     022E  00F1               	movwf	??_Lcd_Write_Char_4bits
  3238     022F  3004               	movlw	4
  3239     0230                     u605:
  3240     0230  1003               	clrc
  3241     0231  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
  3242     0232  3EFF               	addlw	-1
  3243     0233  1D03               	skipz
  3244     0234  2A30               	goto	u605
  3245     0235  0871               	movf	??_Lcd_Write_Char_4bits,w
  3246     0236  120A  118A  21D4  120A  118A  	fcall	_Lcd_Port_4bits
  3247     023B                     l1240:
  3248                           
  3249                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  3250     023B  1283               	bcf	3,5	;RP0=0, select bank0
  3251     023C  1303               	bcf	3,6	;RP1=0, select bank0
  3252     023D  1588               	bsf	8,3	;volatile
  3253     023E                     l1242:
  3254                           
  3255                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3256     023E  301A               	movlw	26
  3257     023F  00F1               	movwf	??_Lcd_Write_Char_4bits
  3258     0240                     u1147:
  3259     0240  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  3260     0241  2A40               	goto	u1147
  3261     0242  0000               	nop
  3262     0243                     l1244:
  3263                           
  3264                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  3265     0243  1283               	bcf	3,5	;RP0=0, select bank0
  3266     0244  1303               	bcf	3,6	;RP1=0, select bank0
  3267     0245  1188               	bcf	8,3	;volatile
  3268     0246                     l1246:
  3269                           
  3270                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  3271     0246  0872               	movf	Lcd_Write_Char_4bits@temp,w
  3272     0247  120A  118A  21D4  120A  118A  	fcall	_Lcd_Port_4bits
  3273     024C                     l1248:
  3274                           
  3275                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  3276     024C  1283               	bcf	3,5	;RP0=0, select bank0
  3277     024D  1303               	bcf	3,6	;RP1=0, select bank0
  3278     024E  1588               	bsf	8,3	;volatile
  3279     024F                     l1250:
  3280                           
  3281                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3282     024F  301A               	movlw	26
  3283     0250  00F1               	movwf	??_Lcd_Write_Char_4bits
  3284     0251                     u1157:
  3285     0251  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  3286     0252  2A51               	goto	u1157
  3287     0253  0000               	nop
  3288     0254                     l1252:
  3289                           
  3290                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  3291     0254  1283               	bcf	3,5	;RP0=0, select bank0
  3292     0255  1303               	bcf	3,6	;RP1=0, select bank0
  3293     0256  1188               	bcf	8,3	;volatile
  3294     0257                     l72:
  3295     0257  0008               	return
  3296     0258                     __end_of_Lcd_Write_Char_4bits:
  3297                           
  3298                           	psect	text15
  3299     0318                     __ptext15:	
  3300 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  3301 ;; Defined at:
  3302 ;;		line 49 in file "configLCD_4bits.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  a               1    wreg     unsigned char 
  3305 ;;  b               1    4[COMMON] unsigned char 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  a               1    6[COMMON] unsigned char 
  3308 ;;  temp            1    9[COMMON] unsigned char 
  3309 ;;  y               1    8[COMMON] unsigned char 
  3310 ;;  z               1    7[COMMON] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, pclath, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3320 ;;      Params:         1       0       0       0       0
  3321 ;;      Locals:         4       0       0       0       0
  3322 ;;      Temps:          1       0       0       0       0
  3323 ;;      Totals:         6       0       0       0       0
  3324 ;;Total ram usage:        6 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 2
  3327 ;; This function calls:
  3328 ;;		_Lcd_Cmd_4bits
  3329 ;; This function is called by:
  3330 ;;		_main
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334     0318                     _Lcd_Set_Cursor_4bits:	
  3335                           ;psect for function _Lcd_Set_Cursor_4bits
  3336                           
  3337                           
  3338                           ;incstack = 0
  3339                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  3340                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  3341     0318  00F6               	movwf	Lcd_Set_Cursor_4bits@a
  3342     0319                     l1312:
  3343                           
  3344                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  3345     0319  0376               	decf	Lcd_Set_Cursor_4bits@a,w
  3346     031A  1D03               	btfss	3,2
  3347     031B  2B1D               	goto	u741
  3348     031C  2B1E               	goto	u740
  3349     031D                     u741:
  3350     031D  2B3B               	goto	l1322
  3351     031E                     u740:
  3352     031E                     l1314:
  3353                           
  3354                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  3355     031E  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  3356     031F  3E7F               	addlw	127
  3357     0320  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  3358                           
  3359                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  3360     0321  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3361     0322  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  3362     0323  3004               	movlw	4
  3363     0324                     u755:
  3364     0324  1003               	clrc
  3365     0325  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  3366     0326  3EFF               	addlw	-1
  3367     0327  1D03               	skipz
  3368     0328  2B24               	goto	u755
  3369     0329  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  3370     032A  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  3371     032B                     l1316:
  3372                           
  3373                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  3374     032B  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3375     032C  390F               	andlw	15
  3376     032D  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  3377     032E                     l1318:
  3378                           
  3379                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  3380     032E  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  3381     032F  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  3382     0334                     l1320:
  3383                           
  3384                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  3385     0334  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  3386     0335  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  3387                           
  3388                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  3389     033A  2B5D               	goto	l66
  3390     033B                     l1322:
  3391     033B  3002               	movlw	2
  3392     033C  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
  3393     033D  1D03               	btfss	3,2
  3394     033E  2B40               	goto	u761
  3395     033F  2B41               	goto	u760
  3396     0340                     u761:
  3397     0340  2B5D               	goto	l66
  3398     0341                     u760:
  3399     0341                     l1324:
  3400                           
  3401                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  3402     0341  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  3403     0342  3EBF               	addlw	191
  3404     0343  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  3405                           
  3406                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  3407     0344  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3408     0345  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  3409     0346  3004               	movlw	4
  3410     0347                     u775:
  3411     0347  1003               	clrc
  3412     0348  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  3413     0349  3EFF               	addlw	-1
  3414     034A  1D03               	skipz
  3415     034B  2B47               	goto	u775
  3416     034C  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  3417     034D  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  3418     034E                     l1326:
  3419                           
  3420                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  3421     034E  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3422     034F  390F               	andlw	15
  3423     0350  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  3424     0351                     l1328:
  3425                           
  3426                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  3427     0351  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  3428     0352  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  3429     0357                     l1330:
  3430                           
  3431                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  3432     0357  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  3433     0358  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  3434     035D                     l66:
  3435     035D  0008               	return
  3436     035E                     __end_of_Lcd_Set_Cursor_4bits:
  3437                           
  3438                           	psect	text16
  3439     018A                     __ptext16:	
  3440 ;; *************** function _Lcd_Clear_4bits *****************
  3441 ;; Defined at:
  3442 ;;		line 44 in file "configLCD_4bits.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 2
  3463 ;; This function calls:
  3464 ;;		_Lcd_Cmd_4bits
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470     018A                     _Lcd_Clear_4bits:	
  3471                           ;psect for function _Lcd_Clear_4bits
  3472                           
  3473     018A                     l1310:	
  3474                           ;incstack = 0
  3475                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  3476                           
  3477                           
  3478                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  3479     018A  3000               	movlw	0
  3480     018B  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  3481                           
  3482                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  3483     0190  3001               	movlw	1
  3484     0191  120A  118A  21BA  120A  118A  	fcall	_Lcd_Cmd_4bits
  3485     0196                     l60:
  3486     0196  0008               	return
  3487     0197                     __end_of_Lcd_Clear_4bits:
  3488                           
  3489                           	psect	text17
  3490     01BA                     __ptext17:	
  3491 ;; *************** function _Lcd_Cmd_4bits *****************
  3492 ;; Defined at:
  3493 ;;		line 36 in file "configLCD_4bits.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  a               1    wreg     unsigned char 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  a               1    3[COMMON] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      void 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0, pclath, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3507 ;;      Params:         0       0       0       0       0
  3508 ;;      Locals:         1       0       0       0       0
  3509 ;;      Temps:          2       0       0       0       0
  3510 ;;      Totals:         3       0       0       0       0
  3511 ;;Total ram usage:        3 bytes
  3512 ;; Hardware stack levels used: 1
  3513 ;; Hardware stack levels required when called: 1
  3514 ;; This function calls:
  3515 ;;		_Lcd_Port_4bits
  3516 ;; This function is called by:
  3517 ;;		_Lcd_Clear_4bits
  3518 ;;		_Lcd_Set_Cursor_4bits
  3519 ;;		_Lcd_Init_4bits
  3520 ;;		_Lcd_Shift_Right_4bits
  3521 ;;		_Lcd_Shift_Left_4bits
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525     01BA                     _Lcd_Cmd_4bits:	
  3526                           ;psect for function _Lcd_Cmd_4bits
  3527                           
  3528                           
  3529                           ;incstack = 0
  3530                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  3531                           ;Lcd_Cmd_4bits@a stored from wreg
  3532     01BA  00F3               	movwf	Lcd_Cmd_4bits@a
  3533     01BB                     l1198:
  3534                           
  3535                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  3536     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  3537     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  3538     01BD  1108               	bcf	8,2	;volatile
  3539     01BE                     l1200:
  3540                           
  3541                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  3542     01BE  0873               	movf	Lcd_Cmd_4bits@a,w
  3543     01BF  120A  118A  21D4  120A  118A  	fcall	_Lcd_Port_4bits
  3544     01C4                     l1202:
  3545                           
  3546                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  3547     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3548     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3549     01C6  1588               	bsf	8,3	;volatile
  3550     01C7                     l1204:
  3551                           
  3552                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3553     01C7  300B               	movlw	11
  3554     01C8  00F2               	movwf	??_Lcd_Cmd_4bits+1
  3555     01C9  3062               	movlw	98
  3556     01CA  00F1               	movwf	??_Lcd_Cmd_4bits
  3557     01CB                     u1167:
  3558     01CB  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
  3559     01CC  29CB               	goto	u1167
  3560     01CD  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
  3561     01CE  29CB               	goto	u1167
  3562     01CF  0000               	nop
  3563     01D0                     l1206:
  3564                           
  3565                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  3566     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  3567     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  3568     01D2  1188               	bcf	8,3	;volatile
  3569     01D3                     l57:
  3570     01D3  0008               	return
  3571     01D4                     __end_of_Lcd_Cmd_4bits:
  3572                           
  3573                           	psect	text18
  3574     01D4                     __ptext18:	
  3575 ;; *************** function _Lcd_Port_4bits *****************
  3576 ;; Defined at:
  3577 ;;		line 14 in file "configLCD_4bits.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  a               1    wreg     unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  a               1    0[COMMON] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       0       0       0       0
  3592 ;;      Locals:         1       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         1       0       0       0       0
  3595 ;;Total ram usage:        1 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_Lcd_Cmd_4bits
  3601 ;;		_Lcd_Init_4bits
  3602 ;;		_Lcd_Write_Char_4bits
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606     01D4                     _Lcd_Port_4bits:	
  3607                           ;psect for function _Lcd_Port_4bits
  3608                           
  3609                           
  3610                           ;incstack = 0
  3611                           ; Regs used in _Lcd_Port_4bits: [wreg]
  3612                           ;Lcd_Port_4bits@a stored from wreg
  3613     01D4  00F0               	movwf	Lcd_Port_4bits@a
  3614     01D5                     l1188:
  3615                           
  3616                           ;configLCD_4bits.c: 15:     if (a & 1)
  3617     01D5  1C70               	btfss	Lcd_Port_4bits@a,0
  3618     01D6  29D8               	goto	u541
  3619     01D7  29D9               	goto	u540
  3620     01D8                     u541:
  3621     01D8  29DD               	goto	l46
  3622     01D9                     u540:
  3623     01D9                     l1190:
  3624                           
  3625                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  3626     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3627     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3628     01DB  1608               	bsf	8,4	;volatile
  3629     01DC  29E0               	goto	l47
  3630     01DD                     l46:	
  3631                           ;configLCD_4bits.c: 17:     else
  3632                           
  3633                           
  3634                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  3635     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  3636     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  3637     01DF  1208               	bcf	8,4	;volatile
  3638     01E0                     l47:
  3639                           
  3640                           ;configLCD_4bits.c: 20:     if (a & 2)
  3641     01E0  1CF0               	btfss	Lcd_Port_4bits@a,1
  3642     01E1  29E3               	goto	u551
  3643     01E2  29E4               	goto	u550
  3644     01E3                     u551:
  3645     01E3  29E6               	goto	l48
  3646     01E4                     u550:
  3647     01E4                     l1192:
  3648                           
  3649                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  3650     01E4  1688               	bsf	8,5	;volatile
  3651     01E5  29E7               	goto	l49
  3652     01E6                     l48:	
  3653                           ;configLCD_4bits.c: 22:     else
  3654                           
  3655                           
  3656                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  3657     01E6  1288               	bcf	8,5	;volatile
  3658     01E7                     l49:
  3659                           
  3660                           ;configLCD_4bits.c: 25:     if (a & 4)
  3661     01E7  1D70               	btfss	Lcd_Port_4bits@a,2
  3662     01E8  29EA               	goto	u561
  3663     01E9  29EB               	goto	u560
  3664     01EA                     u561:
  3665     01EA  29ED               	goto	l50
  3666     01EB                     u560:
  3667     01EB                     l1194:
  3668                           
  3669                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  3670     01EB  1708               	bsf	8,6	;volatile
  3671     01EC  29EE               	goto	l51
  3672     01ED                     l50:	
  3673                           ;configLCD_4bits.c: 27:     else
  3674                           
  3675                           
  3676                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  3677     01ED  1308               	bcf	8,6	;volatile
  3678     01EE                     l51:
  3679                           
  3680                           ;configLCD_4bits.c: 30:     if (a & 8)
  3681     01EE  1DF0               	btfss	Lcd_Port_4bits@a,3
  3682     01EF  29F1               	goto	u571
  3683     01F0  29F2               	goto	u570
  3684     01F1                     u571:
  3685     01F1  29F4               	goto	l52
  3686     01F2                     u570:
  3687     01F2                     l1196:
  3688                           
  3689                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  3690     01F2  1788               	bsf	8,7	;volatile
  3691     01F3  29F5               	goto	l54
  3692     01F4                     l52:	
  3693                           ;configLCD_4bits.c: 32:     else
  3694                           
  3695                           
  3696                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  3697     01F4  1388               	bcf	8,7	;volatile
  3698     01F5                     l54:
  3699     01F5  0008               	return
  3700     01F6                     __end_of_Lcd_Port_4bits:
  3701     007E                     btemp	set	126	;btemp
  3702     007E                     wtemp0	set	126
  3703                           
  3704                           	psect	idloc
  3705                           
  3706                           ;Config register IDLOC0 @ 0x2000
  3707                           ;	unspecified, using default values
  3708     2000                     	org	8192
  3709     2000  3FFF               	dw	16383
  3710                           
  3711                           ;Config register IDLOC1 @ 0x2001
  3712                           ;	unspecified, using default values
  3713     2001                     	org	8193
  3714     2001  3FFF               	dw	16383
  3715                           
  3716                           ;Config register IDLOC2 @ 0x2002
  3717                           ;	unspecified, using default values
  3718     2002                     	org	8194
  3719     2002  3FFF               	dw	16383
  3720                           
  3721                           ;Config register IDLOC3 @ 0x2003
  3722                           ;	unspecified, using default values
  3723     2003                     	org	8195
  3724     2003  3FFF               	dw	16383
  3725                           
  3726                           	psect	config
  3727                           
  3728                           ;Config register CONFIG1 @ 0x2007
  3729                           ;	Oscillator Selection bits
  3730                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3731                           ;	Watchdog Timer Enable bit
  3732                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3733                           ;	Power-up Timer Enable bit
  3734                           ;	PWRTE = OFF, PWRT disabled
  3735                           ;	RE3/MCLR pin function select bit
  3736                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3737                           ;	Code Protection bit
  3738                           ;	CP = OFF, Program memory code protection is disabled
  3739                           ;	Data Code Protection bit
  3740                           ;	CPD = OFF, Data memory code protection is disabled
  3741                           ;	Brown Out Reset Selection bits
  3742                           ;	BOREN = OFF, BOR disabled
  3743                           ;	Internal External Switchover bit
  3744                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3745                           ;	Fail-Safe Clock Monitor Enabled bit
  3746                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3747                           ;	Low Voltage Programming Enable bit
  3748                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3749                           ;	In-Circuit Debugger Mode bit
  3750                           ;	DEBUG = 0x1, unprogramme  3751     2007                     	org	8199
  3752     2007  20D4               	dw	8404
  3753                           
  3754                           ;Config register CONFIG2 @ 0x2008
  3755                           ;	Brown-out Reset Selection bit
  3756                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3757                           ;	Flash Program Memory Self Write Enable bits
  3758                           ;	WRT = OFF, Write protection off
  3759     2008                     	org	8200
  3760     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@CONT_S(BANK0[9]), main@ADC2(BANK0[9]), main@ADC1(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 9
		 -> main@CONT_S(BANK0[9]), main@ADC2(BANK0[9]), main@ADC1(BANK0[9]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init_4bits
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    ___awmod->___awdiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0    8558
                                             13 BANK0     43    43      0
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1993
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     580
                     _Lcd_Init_4bits
                        _setupINTOSC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1208
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2    1180
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1    1292
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 16:16:23 2023

                             pc 0002                     _SSPSTATbits 0094                              l20 017A  
                            l23 0180                              l16 01B4                              l17 01B9  
                            l50 01ED                              l34 0189                              l26 0179  
                            l51 01EE                              l52 01F4                              l60 0196  
                            l54 01F5                              l46 01DD                              l47 01E0  
                            l39 01A3                              l48 01E6                              l72 0257  
                            l49 01E7                              l57 01D3                              l66 035D  
                            l69 0415                              l78 02D3                    ___awdiv@sign 0076  
                            fsr 0004                             l401 047C                             l137 0222  
                           l244 053D                             l414 03B8                             l520 0317  
                           l530 0291                             u610 02DC                             u611 02DB  
                           u540 01D9                             u700 0270                             u541 01D8  
                           u605 0230                             u701 026F                             u550 01E4  
                           u630 02EE                             u710 027A                             u551 01E3  
                           u631 02ED                             u711 0279                             u560 01EB  
                           u800 02D3                             u561 01EA                             u801 02D2  
                           u625 02E0                             u570 01F2                             u650 02FF  
                           u730 028D                             u810 0489                             u571 01F1  
                           u651 02FE                             u731 028C                             u715 0276  
                           u811 0488                             u740 031E                             u900 0449  
                           u580 01AC                             u820 04DD                             u741 031D  
                           u901 0448                             u581 01AB                             u645 02EF  
                           u725 0281                             u821 04DC                             u590 0180  
                           u670 0313                             u830 04E8                             u591 017F  
                           u671 0312                             u655 02FB                             u831 04E7  
                           u760 0341                             u920 045A                             u680 025E  
                           u840 0529                             u761 0340                             u921 0459  
                           u665 0307                             u681 025D                             u841 0528  
                           u825 04D9                             u850 0539                             u755 0324  
                           u915 044A                             u851 0538                             u780 029F  
                           u940 046E                             u860 041B                             u941 046D  
                           u925 0456                             u861 041A                             u790 02C1  
                           u950 0473                             u870 0426                             u775 0347  
                           u951 0472                             u935 0462                             u871 0425  
                           u695 0262                             u880 0437                             u960 0365  
                           u881 0436                             u961 0364                             u970 0370  
                           u971 036F                             u980 037B                             u981 037A  
                           u895 043B                             u995 037F                             fsr0 0004  
                           indf 0000                    ___awmod@sign 0021                            l1200 01BE  
                          l1202 01C4                            l1210 01AC                            l1204 01C7  
                          l1220 0198                            l1212 01AE                            l1206 01D0  
                          l1310 018A                            l1230 03D7                            l1222 01A2  
                          l1214 01B0                            l1302 0175                            l1320 0334  
                          l1312 0319                            l1240 023B                            l1232 03DD  
                          l1224 03B9                            l1216 01B3                            l1208 01A5  
                          l1304 0181                            l1400 0539                            l1330 0357  
                          l1314 031E                            l1322 033B                            l1250 024F  
                          l1242 023E                            l1234 0224                            l1410 0417  
                          l1226 03BF                            l1218 017A                            l1306 0186  
                          l1324 0341                            l1316 032B                            l1252 0254  
                          l1244 0243                            l1236 022A                            l1332 0292  
                          l1420 042B                            l1412 041B                            l1228 03C8  
                          l1340 01F6                            l1260 02DF                            l1500 056A  
                          l1190 01D9                            l1326 034E                            l1318 032E  
                          l1246 0246                            l1238 022D                            l1334 0295  
                          l1430 0441                            l1422 042F                            l1414 0420  
                          l1350 0213                            l1342 0202                            l1270 0305  
                          l1262 02E6                            l1254 02D4                            l1510 058E  
                          l1502 0572                            l1192 01E4                            l1328 0351  
                          l1248 024C                            l1336 02B1                            l1440 0461  
                          l1432 0445                            l1424 0431                            l1416 0422  
                          l1408 0416                            l1352 0216                            l1344 0208  
                          l1272 0306                            l1264 02EA                            l1256 02D6  
                          l1280 0258                            l1360 0489                            l1520 061B  
                          l1512 0596                            l1504 057B                            l1194 01EB  
                          l1338 02B7                            l1442 0468                            l1434 0449  
                          l1426 0437                            l1418 0426                            l1354 0219  
                          l1346 020D                            l1274 030D                            l1266 02EE  
                          l1258 02DC                            l1290 0270                            l1282 025E  
                          l1370 049A                            l1362 048E                            l1530 0651  
                          l1522 0623                            l1514 059E                            l1506 057E  
                          l1196 01F2                            l1188 01D5                            l1436 045A  
                          l1428 043A                            l1444 046E                            l1460 036C  
                          l1452 035E                            l1348 0210                            l1268 02FF  
                          l1276 0313                            l1292 027A                            l1284 0261  
                          l1372 04B4                            l1364 0493                            l1356 0480  
                          l1540 067D                            l1532 0659                            l1524 062C  
                          l1516 05EA                            l1508 0586                            l1198 01BB  
                          l1446 0473                            l1438 0460                            l1470 0385  
                          l1462 0370                            l1454 0361                            l1294 0280  
                          l1286 0268                            l1390 04EB                            l1382 04C2  
                          l1374 04BC                            l1366 0495                            l1358 0483  
                          l1550 06B0                            l1542 0683                            l1534 0661  
                          l1526 063D                            l1518 05F9                            l1448 0478  
                          l1480 03A4                            l1472 0389                            l1464 0375  
                          l1456 0365                            l1296 0287                            l1288 026C  
                          l1392 0517                            l1376 04C0                            l1616 04AC  
                          l1560 0705                            l1552 06D1                            l1544 0691  
                          l1536 0669                            l1528 064E                            l1474 038D  
                          l1466 037B                            l1482 03AA                            l1458 036A  
                          l1298 028D                            l1394 051C                            l1386 04DE  
                          l1570 0740                            l1562 0716                            l1554 06E5  
                          l1546 0699                            l1538 066F                            l1484 03AF  
                          l1476 0397                            l1468 037E                            l1396 0520  
                          l1388 04E8                            l1580 07A3                            l1572 0749  
                          l1564 071E                            l1556 06F4                            l1548 069C  
                          l1486 03B4                            l1478 039D                            l1398 0529  
                          l1590 07D6                            l1582 07AB                            l1574 075F  
                          l1566 0727                            l1558 06FC                            l1494 053E  
                          l1592 07E7                            l1584 07B4                            l1576 0780  
                          l1568 0738                            l1496 0550                            l1594 07EF  
                          l1586 07C5                            l1578 0794                            l1498 0559  
                          l1588 07CD                            STR_1 001D                            STR_2 0021  
                          STR_3 0025                            STR_4 0029                            STR_5 0029  
                          STR_6 0029                            STR_7 0029                            STR_8 0029  
                          STR_9 0029                            u1000 038D                            u1001 038C  
                          u1010 0397                            u1011 0396                            u1030 03AA  
                          u1031 03A9                            u1015 0393                            u1040 03AF  
                          u1041 03AE                            u1025 039E                            u1050 066F  
                          u1107 0695                            u1051 066E                            u1060 0683  
                          u1117 03C3                            u1061 0682                            u1127 03D2  
                          u1137 03E1                            u1147 0240                            u1157 0251  
                          u1077 0582                            u1167 01CB                            u1087 059A  
                          u1097 0655                            _main 053E          _Lcd_Write_String_4bits 0292  
                          btemp 007E                            start 0000                           ?_main 0070  
             ??_Lcd_Clear_4bits 0074                 __end_of___awdiv 047D                           STR_10 0029  
                         STR_11 0029                           STR_12 0029                 __end_of___awmod 03B9  
                         _ANSEL 0188                 ___awdiv@divisor 0070                 __end_of___lwdiv 0318  
               __end_of___lwmod 0292                 ___awdiv@counter 0075                           _PORTB 0006  
                         _PORTD 0008                           _TRISB 0086                           _TRISD 0088  
         __end_of_Lcd_Cmd_4bits 01D4                 __end_of_dpowers 001D                           _setup 01F6  
                         pclath 000A                 __end_of_spiInit 01BA                 __end_of_spiRead 018A  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 053E  
               __initialization 07FC                    __end_of_main 07FC                          ??_main 002D  
              ___awdiv@dividend 0072                          ?_setup 0070                          _ANSELH 0189  
                        _TRISC1 0439                          _TRISC2 043A                          _TRISC3 043B  
                        _TRISC5 043D                          _SSPCON 0014                          _SSPBUF 0013  
      Lcd_Write_Char_4bits@temp 0072                       ??___awdiv 0074                       ??___awmod 007D  
                     ??___lwdiv 0074                       ??___lwmod 007C                ___awdiv@quotient 0077  
               ___awmod@divisor 0079                 ___awmod@counter 0020                    ?_setupINTOSC 0070  
              __end_of_spiWrite 017A                       ??_spiInit 0073                       ??_spiRead 0070  
                _Lcd_Init_4bits 03B9                       ??_sprintf 0023         __end_of__initialization 07FC  
                __pcstackCOMMON 0070           Lcd_Write_Char_4bits@a 0074           Lcd_Write_Char_4bits@y 0073  
                 __end_of_setup 0223          __end_of_Lcd_Init_4bits 0416         ?_Lcd_Write_String_4bits 0075  
                       ??_setup 0076                  _Lcd_Port_4bits 01D4                 _Lcd_Clear_4bits 018A  
                    __pmaintext 053E    __end_of_Lcd_Write_Char_4bits 0258                 Lcd_Port_4bits@a 0070  
               ?_Lcd_Init_4bits 0070  __end_of_Lcd_Write_String_4bits 02D4                         _SSPSTAT 0094  
                    __stringtab 0003          __end_of_Lcd_Port_4bits 01F6                       ?_spiWrite 0070  
                       ___awdiv 0416                         ___awmod 035E                         ___lwdiv 02D4  
                       ___lwmod 0258                         __ptext1 047D                         __ptext2 0258  
                       __ptext3 02D4                         __ptext4 0174                         __ptext5 0181  
                       __ptext6 017A                         __ptext7 01F6                         __ptext8 01A4  
                       __ptext9 0197                         _dpowers 0013                ___awmod@dividend 007B  
                       _spiInit 01A4                         _spiRead 0181    __end_of_Lcd_Set_Cursor_4bits 035E  
                       _sprintf 047D            end_of_initialization 07FC                 ?_Lcd_Port_4bits 0070  
       __end_of_Lcd_Clear_4bits 0197                      ??_spiWrite 0070                       _PORTCbits 0007  
                     _PORTDbits 0008                      main@CONT_C 0052                      main@CONT_D 0051  
                    main@CONT_S 0041                      main@CONT_U 0050                      main@VAL1_C 004C  
                    main@VAL1_D 004B                      main@VAL2_C 004F                      main@VAL2_D 004E  
                    main@VAL1_U 004A                      main@VAL2_U 004D                     spiWrite@dat 0070  
          _Lcd_Write_Char_4bits 0223                  _spiReceiveWait 017A             start_initialization 07FC  
                 _Lcd_Cmd_4bits 01BA           Lcd_Set_Cursor_4bits@a 0076           Lcd_Set_Cursor_4bits@b 0074  
         Lcd_Set_Cursor_4bits@y 0078           Lcd_Set_Cursor_4bits@z 0077                ?_Lcd_Clear_4bits 0070  
         ?_Lcd_Write_Char_4bits 0070          __end_of_spiReceiveWait 0181        Lcd_Set_Cursor_4bits@temp 0079  
          _Lcd_Set_Cursor_4bits 0318                ??_Lcd_Init_4bits 0074                       ___latbits 0002  
                 __pcstackBANK0 0020                  ?_Lcd_Cmd_4bits 0070                     sprintf@flag 0026  
                   sprintf@prec 002A                ___lwdiv@dividend 0072                 ?_spiReceiveWait 0070  
         ?_Lcd_Set_Cursor_4bits 0074                        ?___awdiv 0070                        ?___awmod 0079  
                      ?___lwdiv 0070                        ?___lwmod 0078                       __pstrings 0003  
              ??_Lcd_Port_4bits 0070                        ?_spiInit 0070                        ?_spiRead 0070  
              ___lwdiv@quotient 0075                        ?_sprintf 0020            spiInit@sTransmitEdge 0072  
        ??_Lcd_Write_Char_4bits 0071              spiInit@sDataSample 0070                       main@VAL_W 0053  
                   __stringbase 0012                   ??_setupINTOSC 0070                 ??_Lcd_Cmd_4bits 0071  
       Lcd_Write_String_4bits@a 0075         Lcd_Write_String_4bits@i 007A          ??_Lcd_Set_Cursor_4bits 0075  
            __end_of__stringtab 0013        ??_Lcd_Write_String_4bits 0077                  Lcd_Cmd_4bits@a 0073  
                    sprintf@val 0028                 ___lwdiv@divisor 0070                 ___lwdiv@counter 0077  
                      __ptext10 03B9                        __ptext11 035E                        __ptext12 0416  
                      __ptext13 0292                        __ptext14 0223                        __ptext15 0318  
                      __ptext16 018A                        __ptext17 01BA                        __ptext18 01D4  
           __end_of_setupINTOSC 01A4                        main@ADC1 002F                        main@ADC2 0038  
                      _spiWrite 0174                        main@CONT 0056                        main@VAL1 0054  
                      main@VAL2 0055                    spiInit@sType 0073               spiInit@sClockIdle 0071  
                     sprintf@ap 0027                       sprintf@sp 002B                ___lwmod@dividend 007A  
              ??_spiReceiveWait 0070                       stringcode 000D                      _OSCCONbits 008F  
                   _setupINTOSC 0197                        sprintf@c 002C                        sprintf@f 0020  
                  setupINTOSC@F 0071                 ___lwmod@divisor 0078                 ___lwmod@counter 007D  
                      stringdir 000D                        stringtab 0003                    main@VAL_READ 0057  
